(nominal_AC_variant_inputs
 (var_inp_cdr 0
  (var_inp_cdr-1 nil 3895604638
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (expand "var_inp_cond?")
          (("" (flatten)
            (("" (assert)
              (("" (prop)
                (("1" (use "inst_step_match_condition_cdr")
                  (("1" (assert) nil nil)) nil)
                 ("2" (hide-all-but (-6 1)) (("2" (grind) nil nil))
                  nil)
                 ("3" (hide-all-but (-8 1)) (("3" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (union const-decl "set" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (inst_step_match_condition_cdr formula-decl nil
     nominal_AC_inst_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil))
   shostak))
 (var_inp_no_effect_lhs 0
  (var_inp_no_effect_lhs-1 nil 3895607417
   ("" (skeep)
    (("" (expand "var_inp_cond?")
      (("" (flatten)
        (("" (hide-all-but (-6 -5 -3 1))
          (("" (use "subs_no_effect_t")
            (("" (assert) (("" (hide 2) (("" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (union const-decl "set" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (subset? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (subs_no_effect_t formula-decl nil nominal_AC_substitution nil))
   nil))
 (var_inp_no_effect_rhs 0
  (var_inp_no_effect_rhs-2 nil 3896299724
   ("" (skeep)
    (("" (use "subs_no_effect_t")
      (("" (assert)
        (("" (case "subset?(vars(s), V)")
          (("1" (expand "var_inp_cond?" -2)
            (("1" (flatten)
              (("1" (hide-all-but (-1 -6 1)) (("1" (grind) nil nil))
                nil))
              nil))
            nil)
           ("2" (expand "var_inp_cond?" -1)
            (("2" (flatten)
              (("2" (hide-all-but (-3 -12 1)) (("2" (grind) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (set type-eq-decl nil sets nil)
    (subset? const-decl "bool" sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (member const-decl "bool" sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (intersection const-decl "set" sets nil)
    (empty? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   nil)
  (var_inp_no_effect_rhs-1 nil 3895776855
   ("" (skeep)
    (("" (use "subs_no_effect_t")
      (("" (assert)
        (("" (case "subset?(vars(s), V)")
          (("1" (expand "var_inp_cond?" -2)
            (("1" (flatten)
              (("1" (hide-all-but (-1 -6 1)) (("1" (grind) nil nil))
                nil))
              nil))
            nil)
           ("2" (expand "var_inp_cond?" -1)
            (("2" (flatten)
              (("2" (hide-all-but (-3 -13 1)) (("2" (grind) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (perm type-eq-decl nil atoms nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution
     nil))
   shostak))
 (var_inp_disjoint_img 0
  (var_inp_disjoint_img-2 nil 3896379343
   ("" (skeep)
    (("" (expand "var_inp_cond?" -1)
      (("" (flatten)
        (("" (delete -11)
          (("" (expand "disjoint?" 1)
            (("" (expand "empty?" 1)
              (("" (skeep)
                (("" (expand ("member" "intersection") -11)
                  (("" (flatten)
                    (("" (inst -9 "x")
                      (("" (assert)
                        (("" (split -9)
                          (("1" (hide-all-but (-9 -11 1))
                            (("1" (grind) nil nil)) nil)
                           ("2" (hide-all-but (-1 -6 -12))
                            (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (subset? const-decl "bool" sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil))
   nil)
  (var_inp_disjoint_img-1 nil 3895607542
   ("" (skeep)
    (("" (expand "var_inp_cond?" -1)
      (("" (flatten)
        (("" (delete -11 -12)
          (("" (expand "disjoint?" 1)
            (("" (expand "empty?" 1)
              (("" (skeep)
                (("" (expand ("member" "intersection") -11)
                  (("" (flatten)
                    (("" (inst -9 "x")
                      (("" (assert)
                        (("" (split -9)
                          (("1" (hide-all-but (-9 -11 1))
                            (("1" (grind) nil nil)) nil)
                           ("2" (hide-all-but (-1 -6 -12))
                            (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((variable type-eq-decl nil nominal_AC_term_properties nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution
     nil))
   nil))
 (var_inp_option_rhs 0
  (var_inp_option_rhs-2 nil 3896379364
   ("" (skeep)
    (("" (expand "var_inp_cond?" -1)
      (("" (flatten)
        (("" (expand "match_condition?" -1)
          (("" (delete -11)
            (("" (hide -9)
              (("" (expand "subset?" 1)
                (("" (skeep)
                  (("" (inst -1 "x")
                    (("" (split -1)
                      (("1" (skolem -1 ("up" "i"))
                        (("1" (case "i = 0")
                          (("1" (flatten)
                            (("1" (replace -1)
                              (("1"
                                (expand "nth" -3)
                                (("1"
                                  (replace -3)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "member" -4)
                                      (("1"
                                        (split -4)
                                        (("1"
                                          (expand "subset?" -11)
                                          (("1"
                                            (inst -11 "x")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "lhs" 1)
                                                (("1"
                                                  (expand
                                                   "first_proj"
                                                   1)
                                                  (("1"
                                                    (expand "vars" 1)
                                                    (("1"
                                                      (expand
                                                       ("member"
                                                        "union")
                                                       1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide-all-but
                                                             1)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (hide-all-but
                                             (-1 -16 -7 1))
                                            (("2"
                                              (replace -1 :dir rl)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (inst -5 "0")
                              (("2"
                                (assert)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide-all-but (-9 1))
                        (("2" (grind) nil nil)) nil)
                       ("3" (hide-all-but (-1 -2 1))
                        (("3" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (match_condition? const-decl "bool" aux_nominal_AC_unification nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (member const-decl "bool" nominal_AC_unification nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nth def-decl "T" list_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (inst_ptc? const-decl "bool" aux_nominal_AC_unification nil)
    (length def-decl "nat" list_props nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (subset? const-decl "bool" sets nil))
   nil)
  (var_inp_option_rhs-1 nil 3895607610
   ("" (skeep)
    (("" (expand "var_inp_cond?" -1)
      (("" (flatten)
        (("" (expand "match_condition?" -1)
          (("" (delete -11 -12)
            (("" (hide -9)
              (("" (expand "subset?" 1)
                (("" (skeep)
                  (("" (inst -1 "x")
                    (("" (split -1)
                      (("1" (skolem -1 ("up" "i"))
                        (("1" (case "i = 0")
                          (("1" (flatten)
                            (("1" (replace -1)
                              (("1"
                                (expand "nth" -3)
                                (("1"
                                  (replace -3)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "member" -4)
                                      (("1"
                                        (split -4)
                                        (("1"
                                          (expand "subset?" -11)
                                          (("1"
                                            (inst -11 "x")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "lhs" 1)
                                                (("1"
                                                  (expand
                                                   "first_proj"
                                                   1)
                                                  (("1"
                                                    (expand "vars" 1)
                                                    (("1"
                                                      (expand
                                                       ("member"
                                                        "union")
                                                       1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide-all-but
                                                             1)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (hide-all-but
                                             (-1 -16 -7 1))
                                            (("2"
                                              (replace -1 :dir rl)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (inst -5 "0")
                              (("2"
                                (assert)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide-all-but (-9 1))
                        (("2" (grind) nil nil)) nil)
                       ("3" (hide-all-but (-1 -2 1))
                        (("3" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" nominal_AC_unification nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (inst_ptc? const-decl "bool" aux_nominal_AC_unification nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil))
   nil))
 (var_inp_option_rhs_ren 0
  (var_inp_option_rhs_ren-1 nil 3895645361
   ("" (skeep)
    (("" (use "var_inp_option_rhs")
      (("" (assert)
        (("" (flatten)
          (("" (case "member(V(s), dom(rho))")
            (("1" (typepred "rho")
              (("1" (expand "renaming?" -1)
                (("1" (flatten)
                  (("1" (hide -2)
                    (("1" (case "var?(subs(rho)(s))")
                      (("1" (assert)
                        (("1" (prop)
                          (("1" (use "vars_subs_t")
                            (("1" (lemma "renaming_susp_var")
                              (("1"
                                (inst -1 "V(s)" "p(s)" "rho")
                                (("1"
                                  (assert)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (lemma
                                       "nominal_AC_term_times_eta")
                                      (("1"
                                        (inst -1 "s")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (replace -3 -4)
                                            (("1"
                                              (expand "subset?" -4)
                                              (("1"
                                                (inst
                                                 -4
                                                 "V(subs(rho)(V(s)))")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (expand
                                                     ("member" "union")
                                                     -1)
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (use
                                                         "renaming_var3")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace
                                                             -1
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (hide-all-but
                                                               (-2
                                                                -6
                                                                -12))
                                                              (("1"
                                                                (use
                                                                 "var_inp_disjoint_img")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     ("disjoint?"
                                                                      "empty?"))
                                                                    (("1"
                                                                      (expand
                                                                       "empty?"
                                                                       -1)
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "V(subs(rho)(s))")
                                                                        (("1"
                                                                          (expand
                                                                           ("member"
                                                                            "intersection")
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "var_inp_cond?"
                                                                             -3)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-2
                                                                                  -4
                                                                                  -5
                                                                                  1))
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "member"
                                                         -1)
                                                        (("2"
                                                          (expand
                                                           "vars"
                                                           -1)
                                                          (("2"
                                                            (expand
                                                             "singleton"
                                                             -1)
                                                            (("2"
                                                              (use
                                                               "renaming_var3")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "inst_ptc?" (-5 1))
                            (("2" (use "var_inp_no_effect_lhs")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 4)
                        (("2" (use "renaming_susp_var2")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (case "subs(rho)(s) = s")
              (("1" (replace -1)
                (("1" (assert)
                  (("1" (use "var_inp_no_effect_lhs")
                    (("1" (assert) nil nil)) nil))
                  nil))
                nil)
               ("2" (use "subs_no_effect_t")
                (("2" (assert)
                  (("2" (hide 6) (("2" (grind) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inp_option_rhs formula-decl nil nominal_AC_variant_inputs nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil) (atom type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (match_condition? const-decl "bool" aux_nominal_AC_unification nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (member const-decl "bool" nominal_AC_unification nil)
    (length def-decl "nat" list_props nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (renaming_susp_var formula-decl nil nominal_AC_substitution nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt
     nil)
    (subset? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (disjoint? const-decl "bool" sets nil)
    (var_inp_disjoint_img formula-decl nil nominal_AC_variant_inputs
     nil)
    (renaming_var3 formula-decl nil nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (singleton const-decl "(singleton?)" sets nil)
    (union const-decl "set" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (vars_subs_t formula-decl nil nominal_AC_substitution nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (inst_ptc? const-decl "bool" aux_nominal_AC_unification nil)
    (renaming_susp_var2 formula-decl nil nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (member const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   shostak))
 (var_inp_inst_step_aux_TCC1 0
  (var_inp_inst_step_aux_TCC1-1 nil 3895608023
   ("" (skeep)
    (("" (expand "var_inp_cond?" -1)
      (("" (flatten)
        (("" (hide-all-but (-1 1 2))
          (("" (expand "match_condition?" -1)
            (("" (reveal -1)
              (("" (expand "subset?" 1)
                (("" (skeep)
                  (("" (inst -3 "x")
                    (("" (prop)
                      (("1" (skolem -1 ("up" "i"))
                        (("1" (flatten)
                          (("1" (case "i = 0")
                            (("1" (replace -1)
                              (("1"
                                (expand "nth" -3)
                                (("1"
                                  (expand "member" -4)
                                  (("1"
                                    (replace -3)
                                    (("1"
                                      (split -4)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "inst_ptc?" -5)
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (inst -5 "0")
                              (("2"
                                (assert)
                                (("2"
                                  (expand "nth" 2)
                                  (("2"
                                    (hide-all-but (-6 2))
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -1) (("2" (grind) nil nil)) nil)
                       ("3" (hide -3 2) (("3" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" nominal_AC_unification nil)
    (inst_ptc? const-decl "bool" aux_nominal_AC_unification nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nth def-decl "T" list_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (subset? const-decl "bool" sets nil)
    (match_condition? const-decl "bool" aux_nominal_AC_unification
     nil))
   nil
   (var_inp_inst_step_aux subtype "nominal_AC_variant_inputs.s"
    "(nominal_AC_term_adt[atom, atoms.perm, variable, f_symbol, ac_symbol].var?)")))
 (var_inp_inst_step_aux 0
  (var_inp_inst_step_aux-1 nil 3895608024
   ("" (skeep)
    (("" (use "var_inp_option_rhs")
      (("" (assert)
        (("" (flatten)
          (("" (expand "inst_step" 3 1)
            (("" (assert)
              (("" (lift-if)
                (("" (split)
                  (("1" (flatten)
                    (("1"
                      (name-replace "delta"
                       "cons((V(s), ext(reverse(p(s)))(t)), null)")
                      (("1" (reveal -1)
                        (("1"
                          (use "nominal_AC_fresh_subs?_subs_no_effect")
                          (("1" (assert)
                            (("1" (split -1)
                              (("1"
                                (replace -1)
                                (("1" (assert) nil nil))
                                nil)
                               ("2"
                                (hide 3)
                                (("2"
                                  (replace -1 1 :dir rl)
                                  (("2"
                                    (use "dom_basic_sub2")
                                    (("2"
                                      (split -1)
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -1 -2)
                                          (("1"
                                            (expand "var_inp_cond?" -3)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (hide-all-but
                                                 (-1 -5 -6 1 4))
                                                (("1"
                                                  (use
                                                   "nominal_AC_term_times_eta")
                                                  (("1"
                                                    (expand
                                                     "disjoint?"
                                                     1)
                                                    (("1"
                                                      (expand
                                                       "empty?"
                                                       1)
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (expand
                                                           ("member"
                                                            "intersection")
                                                           -2)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (replace -1)
                                        (("2"
                                          (hide-all-but 1)
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (hide 1)
                      (("2" (expand "inst_ptc?" -3)
                        (("2" (hide -4) (("2" (grind) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inp_option_rhs formula-decl nil nominal_AC_variant_inputs nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil) (atom type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nominal_AC_fresh_subs?_subs_no_effect formula-decl nil
     nominal_AC_fresh_subs nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt
     nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (dom_basic_sub2 formula-decl nil nominal_AC_substitution nil)
    (inst_ptc? const-decl "bool" aux_nominal_AC_unification nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   shostak))
 (var_inp_inst_step_aux_ren_TCC1 0
  (var_inp_inst_step_aux_ren_TCC1-1 nil 3895645049
   ("" (skeep)
    (("" (use "var_inp_inst_step_aux_TCC1")
      (("" (assert)
        (("" (use "renaming_ord2") (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((var_inp_inst_step_aux_TCC1 subtype-tcc nil
     nominal_AC_variant_inputs nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil) (atom type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (renaming_ord2 formula-decl nil nominal_AC_substitution nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   nil
   (var_inp_inst_step_aux_ren subtype
    "nominal_AC_substitution.subs(nominal_AC_variant_inputs.rho)(nominal_AC_variant_inputs.s)"
    "(nominal_AC_term_adt[atom, atoms.perm, variable, f_symbol, ac_symbol].var?)")))
 (var_inp_inst_step_aux_ren 0
  (var_inp_inst_step_aux_ren-1 nil 3895645049
   ("" (skeep)
    (("" (use "var_inp_option_rhs_ren")
      (("" (assert)
        (("" (flatten)
          (("" (use "var_inp_no_effect_lhs")
            (("" (assert)
              (("" (replace -1)
                (("" (expand "inst_step" 3 1)
                  (("" (lift-if)
                    (("" (split 3)
                      (("1" (flatten)
                        (("1"
                          (name-replace "del"
                           "cons((V(subs(rho)(s)), ext(reverse(p(subs(rho)(s))))(t)), null)")
                          (("1"
                            (use "nominal_AC_fresh_subs?_subs_no_effect")
                            (("1" (assert)
                              (("1"
                                (split -1)
                                (("1"
                                  (replace -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (hide 3 2 4)
                                  (("2"
                                    (expand "disjoint?" 1)
                                    (("2"
                                      (expand "empty?" 1)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (expand
                                           ("member" "intersection")
                                           -1)
                                          (("2"
                                            (prop)
                                            (("2"
                                              (reveal -2)
                                              (("2"
                                                (use "dom_basic_sub2")
                                                (("2"
                                                  (replace -2)
                                                  (("2"
                                                    (prop)
                                                    (("1"
                                                      (replace -1 -3)
                                                      (("1"
                                                        (expand
                                                         ("member"
                                                          "singleton")
                                                         -3)
                                                        (("1"
                                                          (lemma
                                                           "vars_subs_t")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "rho"
                                                             "s")
                                                            (("1"
                                                              (expand
                                                               "subset?"
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "x")
                                                                (("1"
                                                                  (prop)
                                                                  (("1"
                                                                    (expand
                                                                     ("member"
                                                                      "union")
                                                                     -1)
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-1
                                                                          -5
                                                                          -9))
                                                                        (("1"
                                                                          (use
                                                                           "var_inp_disjoint_img")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "var_inp_cond?")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -2
                                                                                    -3
                                                                                    -6
                                                                                    -7))
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (use
                                                                         "var_inp_option_rhs")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -3
                                                                                -7
                                                                                -11
                                                                                2))
                                                                              (("2"
                                                                                (expand
                                                                                 "var_inp_cond?"
                                                                                 -4)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      -2
                                                                                      -3
                                                                                      -7
                                                                                      1))
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     ("member"
                                                                      "vars")
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "singleton"
                                                                       1)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (replace -1 -3)
                                                      (("2"
                                                        (hide-all-but
                                                         -3)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (hide 1)
                          (("2" (expand "inst_ptc?" -4)
                            (("2" (expand "subset?" -4)
                              (("2"
                                (inst?)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inp_option_rhs_ren formula-decl nil nominal_AC_variant_inputs
     nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil) (atom type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (reverse def-decl "list[T]" list_props nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (vars_subs_t formula-decl nil nominal_AC_substitution nil)
    (subset? const-decl "bool" sets nil)
    (var_inp_disjoint_img formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (var_inp_option_rhs formula-decl nil nominal_AC_variant_inputs nil)
    (union const-decl "set" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (dom_basic_sub2 formula-decl nil nominal_AC_substitution nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (nominal_AC_fresh_subs?_subs_no_effect formula-decl nil
     nominal_AC_fresh_subs nil)
    (inst_ptc? const-decl "bool" aux_nominal_AC_unification nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   shostak))
 (var_inp_inst_step_disjoint_dom 0
  (var_inp_inst_step_disjoint_dom-1 nil 3896386604
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "del" "inst_step(PV, G, t, s)`2")
          (("" (reveal -1)
            ((""
              (name-replace "del_"
               "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
              (("" (reveal -1)
                (("" (prop)
                  (("1" (use "var_inp_inst_step_aux")
                    (("1" (assert)
                      (("1" (replace -1 -3)
                        (("1" (assert)
                          (("1" (hide -1)
                            (("1" (use "dom_basic_sub2")
                              (("1"
                                (replace -3)
                                (("1"
                                  (split -1)
                                  (("1"
                                    (hide -2 -3)
                                    (("1"
                                      (use
                                       "var_inp_inst_step_aux_TCC1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide -3)
                                          (("1"
                                            (replace -2)
                                            (("1" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replace -1 1)
                                    (("2"
                                      (hide-all-but 1)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (use "var_inp_inst_step_aux_ren")
                    (("2" (assert)
                      (("2" (replace -1 -2)
                        (("2" (assert)
                          (("2" (hide -1)
                            (("2" (use "dom_basic_sub2")
                              (("2"
                                (replace -2)
                                (("2"
                                  (split -1)
                                  (("1"
                                    (hide -2)
                                    (("1"
                                      (name-replace
                                       "t1"
                                       "subs(rho)(s)")
                                      (("1"
                                        (reveal -1)
                                        (("1"
                                          (use
                                           "var_inp_inst_step_aux_ren_TCC1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (use "vars_subs_t")
                                                (("1"
                                                  (replace -3)
                                                  (("1"
                                                    (replace -4 1)
                                                    (("1"
                                                      (expand
                                                       "disjoint?"
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "empty?"
                                                         1)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (expand
                                                             ("member"
                                                              "intersection")
                                                             -5)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (expand
                                                                 "subset?"
                                                                 -1)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "x")
                                                                  (("1"
                                                                    (split
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       ("member"
                                                                        "union")
                                                                       -1)
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (use
                                                                           "var_inp_disjoint_img")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                -7
                                                                                -9))
                                                                              (("1"
                                                                                (expand
                                                                                 "var_inp_cond?"
                                                                                 -4)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      -2
                                                                                      -3
                                                                                      -6))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "disjoint?"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (use
                                                                           "var_inp_inst_step_aux_TCC1")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                -7
                                                                                1))
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -4
                                                                        1))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replace -1)
                                    (("2"
                                      (hide-all-but 1)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (dom_basic_sub2 formula-decl nil nominal_AC_substitution nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (reverse def-decl "list[T]" list_props nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (var_inp_inst_step_aux_TCC1 subtype-tcc nil
     nominal_AC_variant_inputs nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (empty? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_inst_step_aux_ren_TCC1 subtype-tcc nil
     nominal_AC_variant_inputs nil)
    (union const-decl "set" sets nil)
    (var_inp_disjoint_img formula-decl nil nominal_AC_variant_inputs
     nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (vars_subs_t formula-decl nil nominal_AC_substitution nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil))
   shostak))
 (var_inp_equal_syn_aux_TCC1 0
  (var_inp_equal_syn_aux_TCC2-1 nil 3895604637
   ("" (skeep)
    (("" (skeep)
      (("" (use "renaming_ord2") (("" (assert) nil nil)) nil)) nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming_ord2 formula-decl nil nominal_AC_substitution nil))
   nil
   (var_inp_equal_syn_aux subtype
    "nominal_AC_substitution.subs(nominal_AC_variant_inputs.rho)(nominal_AC_variant_inputs.s)"
    "(nominal_AC_term_adt[atom, atoms.perm, variable, f_symbol, ac_symbol].var?)")))
 (var_inp_equal_syn_aux 0
  (var_inp_equal_syn_aux-1 nil 3895652992
   ("" (skeep)
    (("" (assert)
      ((""
        (name-replace "sig1_"
         "cons((V(subs(rho)(s)), ext(reverse(p(subs(rho)(s))))(subs(rho)(t))), null)")
        ((""
          (name-replace "sig1"
           "cons((V(s), ext(reverse(p(s)))(t)), null)")
          (("" (reveal -1 -2)
            (("" (name-replace "Y" "V(s)")
              (("" (reveal -1)
                (("" (name-replace "t1" "ext(reverse(p(s)))(t)")
                  (("" (reveal -1)
                    (("" (use "renaming_var3")
                      (("" (assert)
                        (("" (replace -1)
                          (("" (use "renaming_susp_var_ext")
                            (("" (assert)
                              ((""
                                (replace -1)
                                ((""
                                  (hide -1)
                                  ((""
                                    (replace -2)
                                    ((""
                                      (replace -3)
                                      ((""
                                        (lemma "renaming_equal_syn")
                                        ((""
                                          (inst -1 "V1" "Y" "rho" "t1")
                                          ((""
                                            (assert)
                                            ((""
                                              (expand
                                               "var_inp_cond?"
                                               -7)
                                              ((""
                                                (flatten)
                                                ((""
                                                  (assert)
                                                  ((""
                                                    (prop)
                                                    ((""
                                                      (hide-all-but
                                                       (-3 -14 -17 1))
                                                      ((""
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((renaming_var3 formula-decl nil nominal_AC_substitution nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (empty? const-decl "bool" sets nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (subset? const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (member const-decl "bool" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (renaming_equal_syn formula-decl nil nominal_AC_substitution nil)
    (renaming_susp_var_ext formula-decl nil nominal_AC_substitution
     nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (var_inp_equal_syn 0
  (var_inp_equal_syn-1 nil 3895653268
   ("" (skeep)
    (("" (assert)
      (("" (name-replace "sig1" "inst_step(PV, G, t, s)`2")
        ((""
          (name-replace "sig1_"
           "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
          (("" (flatten)
            (("" (reveal -1 -2)
              (("" (use "var_inp_no_effect_lhs")
                (("" (assert)
                  (("" (use "var_inp_option_rhs")
                    (("" (assert)
                      (("" (case "subset?(vars(s), FV)")
                        (("1" (hide -2)
                          (("1" (lemma "subs_no_effect_t")
                            (("1" (inst -1 "rho" "s")
                              (("1"
                                (assert)
                                (("1"
                                  (split)
                                  (("1"
                                    (replace -3)
                                    (("1"
                                      (replace -1)
                                      (("1"
                                        (expand "inst_step" -5)
                                        (("1"
                                          (lift-if)
                                          (("1"
                                            (split -5)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (split -2)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (split -1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand
                                                         "inst_step"
                                                         -7)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace
                                                             -4
                                                             -7
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (use
                                                               "renaming_var3")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1
                                                                   -8)
                                                                  (("1"
                                                                    (lemma
                                                                     "renaming_susp_var_ext")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "rho"
                                                                       "s"
                                                                       "t")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -8
                                                                           -9
                                                                           :dir
                                                                           rl)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1
                                                                               -2
                                                                               -3)
                                                                              (("1"
                                                                                (name-replace
                                                                                 "t1"
                                                                                 "ext(reverse(p(s)))(t)")
                                                                                (("1"
                                                                                  (reveal
                                                                                   -1)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "renaming_equal_syn")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "V1"
                                                                                       "V(s)"
                                                                                       "rho"
                                                                                       "t1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -3)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -8)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "var_inp_cond?"
                                                                                                   -8)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "var_inp_cond?"
                                                                                                   -8)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       (-15
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "subset?")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "V(s)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (reveal
                                                                                                               -3)
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand
                                                         "inst_step"
                                                         -6)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (replace
                                                               -1
                                                               :dir
                                                               rl)
                                                              (("2"
                                                                (replace
                                                                 -6
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (expand
                                                                   "append"
                                                                   4
                                                                   1)
                                                                  (("2"
                                                                    (rewrite
                                                                     "append_null")
                                                                    (("2"
                                                                      (hide-all-but
                                                                       4)
                                                                      (("2"
                                                                        (expand
                                                                         "equal_syn?")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (split -1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (split -2)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (expand
                                                             "inst_step"
                                                             -8)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (split
                                                                   -8)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (name-replace
                                                                         "s1"
                                                                         "ext(reverse(p(t)))(s)")
                                                                        (("2"
                                                                          (reveal
                                                                           -1)
                                                                          (("2"
                                                                            (lemma
                                                                             "renaming_var3")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "rho"
                                                                               "t")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (replace
                                                                                   -2
                                                                                   -3
                                                                                   :dir
                                                                                   rl)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -10
                                                                                     -3
                                                                                     :dir
                                                                                     rl)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -8
                                                                                       -3
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1
                                                                                         -3)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "renaming_susp_var_ext")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "rho"
                                                                                             "t"
                                                                                             "s")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "renaming_equal_syn")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "V1"
                                                                                                         "V(t)"
                                                                                                         "rho"
                                                                                                         "s1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "var_inp_cond?"
                                                                                                             -10)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     (-5
                                                                                                                      -17
                                                                                                                      1))
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "subset?"
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (grind)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (expand
                                                             "inst_step"
                                                             -7)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (split
                                                                   -7)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (replace
                                                                         -1
                                                                         :dir
                                                                         rl)
                                                                        (("2"
                                                                          (replace
                                                                           -2
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (hide-all-but
                                                                             5)
                                                                            (("2"
                                                                              (expand
                                                                               "append"
                                                                               1
                                                                               1)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "append_null")
                                                                                (("2"
                                                                                  (expand
                                                                                   "equal_syn?")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand
                                                         "inst_step"
                                                         -6)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (split
                                                               -6)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -2
                                                                        5))
                                                                      (("2"
                                                                        (replace
                                                                         -1
                                                                         :dir
                                                                         rl)
                                                                        (("2"
                                                                          (replace
                                                                           -2
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (expand
                                                                             "append"
                                                                             1
                                                                             1)
                                                                            (("2"
                                                                              (rewrite
                                                                               "append_null")
                                                                              (("2"
                                                                                (expand
                                                                                 "equal_syn?"
                                                                                 1)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (split -1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (split -1)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (name-replace
                                                             "s1"
                                                             "ext(reverse(p(t)))(s)")
                                                            (("1"
                                                              (reveal
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 "inst_step"
                                                                 -8)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -7
                                                                     -8
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (replace
                                                                       -5
                                                                       -8
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (use
                                                                         "renaming_var3")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (use
                                                                               "renaming_susp_var_ext")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1
                                                                                     -2)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "renaming_equal_syn")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "V1"
                                                                                         "V(t)"
                                                                                         "rho"
                                                                                         "s1")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "var_inp_cond?"
                                                                                                 -9)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-4
                                                                                                  -9
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "var_inp_cond?"
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -9
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (expand
                                                             "inst_step"
                                                             -6)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  -6
                                                                  5))
                                                                (("2"
                                                                  (replace
                                                                   -1
                                                                   1
                                                                   :dir
                                                                   rl)
                                                                  (("2"
                                                                    (replace
                                                                     -2
                                                                     :dir
                                                                     rl)
                                                                    (("2"
                                                                      (expand
                                                                       "append"
                                                                       1
                                                                       1)
                                                                      (("2"
                                                                        (rewrite
                                                                         "append_null")
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand
                                                         "inst_step"
                                                         -6)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (split
                                                               -6)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (hide-all-but
                                                                   (-1
                                                                    -2
                                                                    4))
                                                                  (("2"
                                                                    (replace
                                                                     -1
                                                                     :dir
                                                                     rl)
                                                                    (("2"
                                                                      (replace
                                                                       -2
                                                                       :dir
                                                                       rl)
                                                                      (("2"
                                                                        (expand
                                                                         "append"
                                                                         1
                                                                         1)
                                                                        (("2"
                                                                          (rewrite
                                                                           "append_null")
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand
                                                     "inst_step"
                                                     -5)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (hide-all-but
                                                         (-1 -5 3))
                                                        (("2"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("2"
                                                            (replace
                                                             -2
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (expand
                                                               "append"
                                                               1
                                                               1)
                                                              (("2"
                                                                (rewrite
                                                                 "append_null")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but (-1 1 -5))
                                    (("2"
                                      (expand "var_inp_cond?" -2)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (hide-all-but (-1 -4 -6 1))
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (use "var_inp_inst_step_aux")
                            (("2" (assert)
                              (("2"
                                (flatten)
                                (("2"
                                  (assert)
                                  (("2"
                                    (replace -1 -6)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (use
                                           "var_inp_inst_step_aux_ren")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (replace -1 -5)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (use
                                                     "var_inp_equal_syn_aux")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil)
    (var_inp_equal_syn_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (append def-decl "list[T]" list_props nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (append_null formula-decl nil list_props nil)
    (renaming_var3 formula-decl nil nominal_AC_substitution nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_finite_union2 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (member const-decl "bool" sets nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (renaming_equal_syn formula-decl nil nominal_AC_substitution nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (reverse def-decl "list[T]" list_props nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (renaming_susp_var_ext formula-decl nil nominal_AC_substitution
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset? const-decl "bool" sets nil)
    (var_inp_option_rhs formula-decl nil nominal_AC_variant_inputs nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (var_inp_equal_syn_unif_prb 0
  (var_inp_equal_syn_unif_prb-1 nil 3895688207
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "del" "inst_step(PV, G, t, s)`2")
          ((""
            (name-replace "del_"
             "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
            (("" (reveal -1 -2)
              (("" (use "var_inp_equal_syn")
                (("" (assert)
                  (("" (assert)
                    (("" (replace -3)
                      (("" (replace -2)
                        (("" (rewrite "apply_sub_sub_append")
                          (("" (rewrite "apply_sub_sub_append")
                            (("" (use "apply_sub_eq")
                              ((""
                                (assert)
                                ((""
                                  (expand "equal_syn?")
                                  ((""
                                    (skolem 1 "x")
                                    ((""
                                      (inst -1 "x")
                                      ((""
                                        (flatten)
                                        ((""
                                          (assert)
                                          ((""
                                            (expand "var_inp_cond?" -4)
                                            ((""
                                              (flatten)
                                              ((""
                                                (hide-all-but
                                                 (-1 -11 2))
                                                (("" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (apply_sub_sub_append formula-decl nil nominal_AC_unification nil)
    (apply_sub_eq formula-decl nil nominal_AC_unification nil)
    (append def-decl "list[T]" list_props nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (member const-decl "bool" sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (var_inp_equal_syn formula-decl nil nominal_AC_variant_inputs nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil))
   shostak))
 (var_inp_equal_syn2 0
  (var_inp_equal_syn2-4 nil 3895690648
   ("" (skeep)
    (("" (assert)
      ((""
        (name-replace "delta_"
         "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
        (("" (name-replace "delta" "inst_step(PV, G, t, s)`2")
          (("" (reveal -1 -2)
            (("" (prop)
              (("" (case "subset?(vars(s), V)")
                (("1" (use "var_inp_no_effect_lhs")
                  (("1" (assert)
                    (("1" (case "subs(rho)(s) = s")
                      (("1" (replace -1)
                        (("1" (replace -2)
                          (("1" (expand "var_inp_cond?" -6)
                            (("1" (flatten)
                              (("1"
                                (replace -4)
                                (("1"
                                  (replace -5 :dir rl)
                                  (("1"
                                    (hide-all-but (-12 1))
                                    (("1"
                                      (use "equal_syn_append")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -1)
                        (("2" (use "subs_no_effect_t")
                          (("2" (assert)
                            (("2" (expand "var_inp_cond?" -4)
                              (("2"
                                (flatten)
                                (("2"
                                  (hide-all-but (-1 -8 1))
                                  (("2"
                                    (expand ("disjoint?" "subset?"))
                                    (("2"
                                      (expand "empty?")
                                      (("2"
                                        (skeep)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (case "subset?(vars(s), FV)")
                  (("1" (expand "var_inp_cond?" -4)
                    (("1" (flatten)
                      (("1" (hide-all-but (1 -1 -6))
                        (("1" (grind) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (use "var_inp_option_rhs")
                    (("2" (assert)
                      (("2" (use "var_inp_inst_step_aux")
                        (("2" (assert)
                          (("2" (flatten)
                            (("2" (assert)
                              (("2"
                                (replace -1)
                                (("2"
                                  (assert)
                                  (("2"
                                    (hide -1)
                                    (("2"
                                      (use "var_inp_inst_step_aux_ren")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (expand "equal_syn?" 4)
                                                (("2"
                                                  (skolem 4 "x")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand "subs" 4)
                                                      (("2"
                                                        (rewrite
                                                         "subs_append2")
                                                        (("2"
                                                          (rewrite
                                                           "subs_append2")
                                                          (("2"
                                                            (lemma
                                                             "subs_no_effect_t")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "delta"
                                                               "subs(sig)(null * x)")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (prop)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (lemma
                                                                       "subs_no_effect_t")
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "delta_"
                                                                         "subs(sig_)(null*x)")
                                                                        (("1"
                                                                          (prop)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -5
                                                                               -6)
                                                                              (("1"
                                                                                (expand
                                                                                 "var_inp_cond?"
                                                                                 -5)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-11
                                                                                      -16
                                                                                      4))
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             -4)
                                                                            (("2"
                                                                              (case
                                                                               "disjoint?(dom(delta_), V)")
                                                                              (("1"
                                                                                (case
                                                                                 "subset?(vars(subs(sig_)(null * x)), V)")
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -2
                                                                                    1))
                                                                                  (("1"
                                                                                    (expand
                                                                                     ("disjoint?"
                                                                                      "subset?"))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "empty?")
                                                                                      (("1"
                                                                                        (skeep)
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "subs(sig_)(null * x) = subs(sig)(null*x)")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-7
                                                                                        -8
                                                                                        1))
                                                                                      (("1"
                                                                                        (use
                                                                                         "vars_subs_t")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "subset?")
                                                                                          (("1"
                                                                                            (skolem
                                                                                             1
                                                                                             "y")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "y")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     ("member"
                                                                                                      "union")
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "var_inp_cond?"
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              -13
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "var_inp_cond?"
                                                                                                           -2)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -13
                                                                                                                -4
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-6
                                                                                      -7
                                                                                      1))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "var_inp_cond?"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (-7
                                                                                            -12
                                                                                            1))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "equal_syn?"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "subs"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (use
                                                                                 "dom_basic_sub2")
                                                                                (("2"
                                                                                  (replace
                                                                                   -5)
                                                                                  (("2"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -5)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "vars_subs_t")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "rho"
                                                                                           "s")
                                                                                          (("1"
                                                                                            (hide
                                                                                             2
                                                                                             6)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "disjoint?"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "empty?"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (skolem
                                                                                                   1
                                                                                                   "y")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     ("member"
                                                                                                      "intersection")
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -2
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           ("member"
                                                                                                            "singleton")
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "subset?"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "y")
                                                                                                              (("1"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   ("member"
                                                                                                                    "union")
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (prop)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-1
                                                                                                                        -4
                                                                                                                        -8))
                                                                                                                      (("1"
                                                                                                                        (use
                                                                                                                         "var_inp_disjoint_img")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "disjoint?")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "empty?")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "subset?"
                                                                                                                       3)
                                                                                                                      (("2"
                                                                                                                        (skolem
                                                                                                                         3
                                                                                                                         "z")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "vars"
                                                                                                                           3)
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -4
                                                                                                                                -8
                                                                                                                                3))
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "renaming_ord2")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           1
                                                                                                                           2
                                                                                                                           3
                                                                                                                           4
                                                                                                                           5
                                                                                                                           6)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "vars"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 ("member"
                                                                                                                                  "singleton")
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     -4)
                                                                    (("2"
                                                                      (use
                                                                       "dom_basic_sub2")
                                                                      (("2"
                                                                        (replace
                                                                         -4)
                                                                        (("2"
                                                                          (prop)
                                                                          (("1"
                                                                            (case
                                                                             "subset?(vars(subs(sig)(null * x)), V)")
                                                                            (("1"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                -3
                                                                                1
                                                                                4))
                                                                              (("1"
                                                                                (expand
                                                                                 ("disjoint?"))
                                                                                (("1"
                                                                                  (expand
                                                                                   "empty?"
                                                                                   1)
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (expand
                                                                                       ("member"
                                                                                        "intersection"))
                                                                                      (("1"
                                                                                        (prop)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (use
                                                                               "vars_subs_t")
                                                                              (("2"
                                                                                (expand
                                                                                 "subset?"
                                                                                 1)
                                                                                (("2"
                                                                                  (skolem
                                                                                   1
                                                                                   "y")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "subset?")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             ("member"
                                                                                              "union")
                                                                                             -1)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -7
                                                                                                  1))
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "var_inp_cond?")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "subset?"
                                                                                                         -12)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -12
                                                                                                           "y")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -7
                                                                                                  -8
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "var_inp_cond?")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -13
                                                                                                        -4
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "subset?"
                                                                                                         -2)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -2
                                                                                                           "y")
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (vars_subs_t formula-decl nil nominal_AC_substitution nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (renaming_ord2 formula-decl nil nominal_AC_substitution nil)
    (var_inp_disjoint_img formula-decl nil nominal_AC_variant_inputs
     nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (dom_basic_sub2 formula-decl nil nominal_AC_substitution nil)
    (subs_append2 formula-decl nil nominal_AC_substitution nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (* adt-constructor-decl "[[perm, variable] -> (var?)]"
       nominal_AC_term_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_option_rhs formula-decl nil nominal_AC_variant_inputs nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (equal_syn_append formula-decl nil nominal_AC_substitution nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (empty? const-decl "bool" sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (member const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset? const-decl "bool" sets nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil)
  (var_inp_equal_syn2-3 nil 3895689432
   ("" (skeep)
    (("" (assert)
      ((""
        (name-replace "delta_"
         "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
        (("" (name-replace "delta" "inst_step(PV, G, t, s)`2")
          (("" (reveal -1 -2)
            (("" (prop)
              (("" (case "subset?(vars(s), V)")
                (("1" (use "var_inp_no_effect_lhs")
                  (("1" (assert)
                    (("1" (case "subs(rho)(s) = s")
                      (("1" (replace -1)
                        (("1" (replace -2)
                          (("1" (expand "var_inp_cond?" -6)
                            (("1" (flatten)
                              (("1"
                                (replace -4)
                                (("1"
                                  (replace -5 :dir rl)
                                  (("1"
                                    (hide-all-but (-12 1))
                                    (("1"
                                      (use "equal_syn_append")
                                      (("1"
                                        (assert)
                                        nil)))))))))))))))))
                       ("2" (hide -1)
                        (("2" (use "subs_no_effect_t")
                          (("2" (assert)
                            (("2" (expand "var_inp_cond?" -4)
                              (("2"
                                (flatten)
                                (("2"
                                  (hide-all-but (-1 -8 1))
                                  (("2"
                                    (expand ("disjoint?" "subset?"))
                                    (("2"
                                      (expand "empty?")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (grind)
                                          nil)))))))))))))))))))))))))
                 ("2" (use "var_inp_option_rhs")
                  (("2" (assert)
                    (("2" (use "var_inp_inst_step_aux")
                      (("2" (assert)
                        (("2" (flatten)
                          (("2" (assert)
                            (("2" (replace -1)
                              (("2"
                                (assert)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (use "var_inp_inst_step_aux_ren")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (hide -1)
                                            (("2"
                                              (expand "equal_syn?" 3)
                                              (("2"
                                                (skolem 3 "x")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand "subs" 3)
                                                    (("2"
                                                      (rewrite
                                                       "subs_append2")
                                                      (("2"
                                                        (rewrite
                                                         "subs_append2")
                                                        (("2"
                                                          (lemma
                                                           "subs_no_effect_t")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "delta"
                                                             "subs(sig)(null * x)")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (prop)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (lemma
                                                                     "subs_no_effect_t")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "delta_"
                                                                       "subs(sig_)(null*x)")
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "var_inp_cond?"
                                                                             -7)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-13
                                                                                  -18
                                                                                  3))
                                                                                (("1"
                                                                                  (expand
                                                                                   "equal_syn?"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "x")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "subs"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil)))))))))))))))))
                                                                         ("2"
                                                                          (hide
                                                                           -4)
                                                                          (("2"
                                                                            (case
                                                                             "disjoint?(dom(delta_), V)")
                                                                            (("1"
                                                                              (case
                                                                               "subset?(vars(subs(sig_)(null * x)), V)")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -2
                                                                                  1))
                                                                                (("1"
                                                                                  (expand
                                                                                   ("disjoint?"
                                                                                    "subset?"))
                                                                                  (("1"
                                                                                    (expand
                                                                                     "empty?")
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil)))))))))))))
                                                                               ("2"
                                                                                (case
                                                                                 "subs(sig_)(null * x) = subs(sig)(null*x)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-7
                                                                                      -8
                                                                                      1))
                                                                                    (("1"
                                                                                      (use
                                                                                       "vars_subs_t")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "subset?")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           1
                                                                                           "y")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "y")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   ("member"
                                                                                                    "union")
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "var_inp_cond?"
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            -13
                                                                                                            1))
                                                                                                          (("1"
                                                                                                            (grind)
                                                                                                            nil)))))))
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "var_inp_cond?"
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            -14
                                                                                                            -5
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   (-6
                                                                                    -7
                                                                                    1))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "var_inp_cond?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-7
                                                                                          -12
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "equal_syn?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "subs"
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))))
                                                                             ("2"
                                                                              (use
                                                                               "dom_basic_sub2")
                                                                              (("2"
                                                                                (replace
                                                                                 -5)
                                                                                (("2"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -5)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "vars_subs_t")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "rho"
                                                                                         "s")
                                                                                        (("1"
                                                                                          (hide
                                                                                           2
                                                                                           5)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "disjoint?"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "empty?"
                                                                                               1)
                                                                                              (("1"
                                                                                                (skolem
                                                                                                 1
                                                                                                 "y")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   ("member"
                                                                                                    "intersection")
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         ("member"
                                                                                                          "singleton")
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "subset?"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "y")
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 ("member"
                                                                                                                  "union")
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      -4
                                                                                                                      -8))
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "var_inp_disjoint_img")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "disjoint?")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "empty?")
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (grind)
                                                                                                                                nil)))))))))))))
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "subset?"
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (skolem
                                                                                                                       2
                                                                                                                       "z")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "vars"
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           ("member"
                                                                                                                            "singleton")
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             ("member"
                                                                                                                              "vars")
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "singleton"
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "member"
                                                                                                                                     -4)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))))))))))))))))))))
                                                                                                               ("2"
                                                                                                                (replace
                                                                                                                 -2
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "renaming_ord2")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         1
                                                                                                                         2
                                                                                                                         3
                                                                                                                         4
                                                                                                                         5
                                                                                                                         6)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "vars"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               ("member"
                                                                                                                                "singleton")
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))
                                                                                   ("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil)))))))))))))))))))))))
                                                                 ("2"
                                                                  (hide
                                                                   -4)
                                                                  (("2"
                                                                    (use
                                                                     "dom_basic_sub2")
                                                                    (("2"
                                                                      (replace
                                                                       -4)
                                                                      (("2"
                                                                        (prop)
                                                                        (("1"
                                                                          (case
                                                                           "subset?(vars(subs(sig)(null * x)), V)")
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-1
                                                                              -2
                                                                              -3
                                                                              1
                                                                              3))
                                                                            (("1"
                                                                              (expand
                                                                               ("disjoint?"))
                                                                              (("1"
                                                                                (expand
                                                                                 "empty?"
                                                                                 1)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (expand
                                                                                     ("member"
                                                                                      "intersection"))
                                                                                    (("1"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil)))))))))))))))
                                                                           ("2"
                                                                            (use
                                                                             "vars_subs_t")
                                                                            (("2"
                                                                              (expand
                                                                               "subset?"
                                                                               1)
                                                                              (("2"
                                                                                (skolem
                                                                                 1
                                                                                 "y")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           ("member"
                                                                                            "union")
                                                                                           -1)
                                                                                          (("2"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -7
                                                                                                1))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "var_inp_cond?")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "subset?"
                                                                                                       -12)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -12
                                                                                                         "y")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -7
                                                                                                -8
                                                                                                1))
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "var_inp_cond?")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -4
                                                                                                      -13
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil)))))))))))))))))))))))))))))
                                                                         ("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (var_inp_equal_syn2-2 nil 3895689073
   ("" (skeep)
    (("" (assert)
      ((""
        (name-replace "delta_"
         "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
        (("" (name-replace "delta" "inst_step(PV, G, t, s)`2")
          (("" (reveal -1 -2)
            (("" (prop)
              (("" (case "subset?(vars(s), V)")
                (("1" (use "var_inputs_no_effect_lhs")
                  (("1" (assert)
                    (("1" (case "subs(rho)(s) = s")
                      (("1" (replace -1)
                        (("1" (replace -2)
                          (("1" (expand "var_inputs_cond?" -6)
                            (("1" (flatten)
                              (("1"
                                (replace -4)
                                (("1"
                                  (replace -5 :dir rl)
                                  (("1"
                                    (hide-all-but (-12 1))
                                    (("1"
                                      (use "equal_syn_append")
                                      (("1"
                                        (assert)
                                        nil)))))))))))))))))
                       ("2" (hide -1)
                        (("2" (use "subs_no_effect_t")
                          (("2" (assert)
                            (("2" (expand "var_inputs_cond?" -4)
                              (("2"
                                (flatten)
                                (("2"
                                  (hide-all-but (-1 -8 1))
                                  (("2"
                                    (expand ("disjoint?" "subset?"))
                                    (("2"
                                      (expand "empty?")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (grind)
                                          nil)))))))))))))))))))))))))
                 ("2" (use "var_inputs_option_rhs2")
                  (("2" (assert)
                    (("2" (use "var_inputs_inst_step_aux2")
                      (("2" (assert)
                        (("2" (flatten)
                          (("2" (assert)
                            (("2" (replace -1)
                              (("2"
                                (assert)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (use
                                     "var_inputs_inst_step_aux_ren2")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (hide -1)
                                            (("2"
                                              (expand "equal_syn?" 3)
                                              (("2"
                                                (skolem 3 "x")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand "subs" 3)
                                                    (("2"
                                                      (rewrite
                                                       "subs_append2")
                                                      (("2"
                                                        (rewrite
                                                         "subs_append2")
                                                        (("2"
                                                          (lemma
                                                           "subs_no_effect_t")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "delta"
                                                             "subs(sig)(null * x)")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (prop)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (lemma
                                                                     "subs_no_effect_t")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "delta_"
                                                                       "subs(sig_)(null*x)")
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "var_inputs_cond?"
                                                                             -7)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-13
                                                                                  -18
                                                                                  3))
                                                                                (("1"
                                                                                  (expand
                                                                                   "equal_syn?"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "x")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "subs"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil)))))))))))))))))
                                                                         ("2"
                                                                          (hide
                                                                           -4)
                                                                          (("2"
                                                                            (case
                                                                             "disjoint?(dom(delta_), V)")
                                                                            (("1"
                                                                              (case
                                                                               "subset?(vars(subs(sig_)(null * x)), V)")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -2
                                                                                  1))
                                                                                (("1"
                                                                                  (expand
                                                                                   ("disjoint?"
                                                                                    "subset?"))
                                                                                  (("1"
                                                                                    (expand
                                                                                     "empty?")
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil)))))))))))))
                                                                               ("2"
                                                                                (case
                                                                                 "subs(sig_)(null * x) = subs(sig)(null*x)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-7
                                                                                      -8
                                                                                      1))
                                                                                    (("1"
                                                                                      (use
                                                                                       "vars_subs_t")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "subset?")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           1
                                                                                           "y")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "y")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   ("member"
                                                                                                    "union")
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "var_inputs_cond?"
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            -13
                                                                                                            1))
                                                                                                          (("1"
                                                                                                            (grind)
                                                                                                            nil)))))))
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "var_inputs_cond?"
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            -14
                                                                                                            -5
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   (-6
                                                                                    -7
                                                                                    1))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "var_inputs_cond?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-7
                                                                                          -12
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "equal_syn?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "subs"
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))))
                                                                             ("2"
                                                                              (use
                                                                               "dom_basic_sub2")
                                                                              (("2"
                                                                                (replace
                                                                                 -5)
                                                                                (("2"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -5)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "vars_subs_t")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "rho"
                                                                                         "s")
                                                                                        (("1"
                                                                                          (hide
                                                                                           2
                                                                                           5)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "disjoint?"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "empty?"
                                                                                               1)
                                                                                              (("1"
                                                                                                (skolem
                                                                                                 1
                                                                                                 "y")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   ("member"
                                                                                                    "intersection")
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         ("member"
                                                                                                          "singleton")
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "subset?"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "y")
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 ("member"
                                                                                                                  "union")
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      -4
                                                                                                                      -8))
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "var_inputs_disjoint_img")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "disjoint?")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "empty?")
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (grind)
                                                                                                                                nil)))))))))))))
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "subset?"
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (skolem
                                                                                                                       2
                                                                                                                       "z")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "vars"
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           ("member"
                                                                                                                            "singleton")
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             ("member"
                                                                                                                              "vars")
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "singleton"
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "member"
                                                                                                                                     -4)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))))))))))))))))))))
                                                                                                               ("2"
                                                                                                                (replace
                                                                                                                 -2
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "renaming_ord2")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         1
                                                                                                                         2
                                                                                                                         3
                                                                                                                         4
                                                                                                                         5
                                                                                                                         6)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "vars"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               ("member"
                                                                                                                                "singleton")
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))
                                                                                   ("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil)))))))))))))))))))))))
                                                                 ("2"
                                                                  (hide
                                                                   -4)
                                                                  (("2"
                                                                    (use
                                                                     "dom_basic_sub2")
                                                                    (("2"
                                                                      (replace
                                                                       -4)
                                                                      (("2"
                                                                        (prop)
                                                                        (("1"
                                                                          (case
                                                                           "subset?(vars(subs(sig)(null * x)), V)")
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-1
                                                                              -2
                                                                              -3
                                                                              1
                                                                              3))
                                                                            (("1"
                                                                              (expand
                                                                               ("disjoint?"))
                                                                              (("1"
                                                                                (expand
                                                                                 "empty?"
                                                                                 1)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (expand
                                                                                     ("member"
                                                                                      "intersection"))
                                                                                    (("1"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil)))))))))))))))
                                                                           ("2"
                                                                            (use
                                                                             "vars_subs_t")
                                                                            (("2"
                                                                              (expand
                                                                               "subset?"
                                                                               1)
                                                                              (("2"
                                                                                (skolem
                                                                                 1
                                                                                 "y")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           ("member"
                                                                                            "union")
                                                                                           -1)
                                                                                          (("2"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -7
                                                                                                1))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "var_inputs_cond?")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "subset?"
                                                                                                       -12)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -12
                                                                                                         "y")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -7
                                                                                                -8
                                                                                                1))
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "var_inputs_cond?")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -4
                                                                                                      -13
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil)))))))))))))))))))))))))))))
                                                                         ("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (var_inp_equal_syn2-1 nil 3895688802 ("" (postpone) nil nil) nil
   shostak))
 (var_inp_equal_syn3 0
  (var_inp_equal_syn3-1 nil 3896298004
   ("" (skeep)
    (("" (assert)
      (("" (name-replace "delta" "inst_step(PV, G, t, s)`2")
        (("" (reveal -1)
          ((""
            (name-replace "delta_"
             "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
            (("" (reveal -1)
              (("" (prop)
                (("" (case "subset?(vars(s), FV)")
                  (("1" (use "var_inp_no_effect_lhs")
                    (("1" (assert)
                      (("1" (use "var_inp_no_effect_rhs")
                        (("1" (assert)
                          (("1" (replace -1)
                            (("1" (replace -2)
                              (("1"
                                (replace -4)
                                (("1"
                                  (replace -5)
                                  (("1" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (use "var_inp_inst_step_aux")
                    (("2" (assert)
                      (("2" (replace -1 -3)
                        (("2" (assert)
                          (("2" (use "var_inp_inst_step_aux_ren")
                            (("2" (assert)
                              (("2"
                                (replace -1 -3)
                                (("2"
                                  (assert)
                                  (("2"
                                    (hide -1)
                                    (("2"
                                      (expand "equal_syn?" 2)
                                      (("2"
                                        (skolem 2 "x")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand "subs" 2)
                                            (("2"
                                              (replace -3)
                                              (("2"
                                                (replace -3 2 :dir rl)
                                                (("2"
                                                  (expand "subs" 2 2)
                                                  (("2"
                                                    (expand "subs" 2 3)
                                                    (("2"
                                                      (expand
                                                       "subs"
                                                       2
                                                       2)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (case
                                                               "var?(s)")
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                (("2"
                                                                  (use
                                                                   "var_inp_inst_step_aux_TCC1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (replace
                                                               -2
                                                               2
                                                               :dir
                                                               rl)
                                                              (("2"
                                                                (expand
                                                                 "subs"
                                                                 2
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "subs"
                                                                   2
                                                                   5)
                                                                  (("2"
                                                                    (name-replace
                                                                     "t1"
                                                                     "ext(reverse(p(subs(rho)(s))))(subs(rho)(t))")
                                                                    (("2"
                                                                      (expand
                                                                       "subs"
                                                                       2
                                                                       1)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (prop)
                                                                          (("2"
                                                                            (use
                                                                             "var_inp_inst_step_aux_TCC1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (case
                                                                                 "member(V(s), dom(rho))")
                                                                                (("1"
                                                                                  (expand
                                                                                   "var_inp_cond?"
                                                                                   -7)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -15
                                                                                       "x")
                                                                                      (("1"
                                                                                        (prop)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (-9
                                                                                            -15
                                                                                            -17
                                                                                            1))
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (rewrite
                                                                                           "vars_finset"
                                                                                           1)
                                                                                          (("2"
                                                                                            (inst
                                                                                             1
                                                                                             "subs(rho)(V(s))")
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 ("member"
                                                                                                  "img")
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "V(s)")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (use
                                                                                                 "renaming_var")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "vars"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       ("member"
                                                                                                        "singleton")
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "renaming_var3")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -18
                                                                                            -10
                                                                                            -12))
                                                                                          (("3"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (use
                                                                                   "renaming_var3")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("2"
                                                                                        (expand
                                                                                         ("member"
                                                                                          "dom")
                                                                                         1)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -2)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (member const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (DS const-decl "list[atom]" atoms nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (union const-decl "set" sets nil)
    (length def-decl "nat" list_props nil)
    (member const-decl "bool" nominal_AC_unification nil)
    (inst_ptc? const-decl "bool" aux_nominal_AC_unification nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (match_condition? const-decl "bool" aux_nominal_AC_unification nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (intersection const-decl "set" sets nil)
    (empty? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (var_inp_no_effect_rhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (var_inp_inst_step_aux_TCC1 subtype-tcc nil
     nominal_AC_variant_inputs nil)
    (vars_finset formula-decl nil nominal_AC_term_properties nil)
    (renaming_var3 formula-decl nil nominal_AC_substitution nil)
    (renaming_var formula-decl nil nominal_AC_substitution nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (reverse def-decl "list[T]" list_props nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (var_inp_inst_step_preservation 0
  (var_inp_inst_step_preservation-2 nil 3895733770
   ("" (skeep)
    (("" (assert)
      (("" (name-replace "G1" "inst_step(PV, G, t, s)`1")
        (("" (name-replace "del" "inst_step(PV, G, t, s)`2")
          (("" (name-replace "skp" "inst_step(PV, G, t, s)`3")
            (("" (flatten)
              ((""
                (name-replace "del_"
                 "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
                (("" (name-replace "fai" "inst_step(PV, G, t, s)`4")
                  (("" (expand "var_inp_cond?" -1)
                    (("" (flatten)
                      (("" (expand "var_inp_cond?" 3)
                        (("" (assert)
                          (("" (case "subset?(vars(s), FV)")
                            (("1" (prop)
                              (("1"
                                (use
                                 "inst_step_match_condition_apply_sub")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand ("del" "fai" "skp"))
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "G1" 1)
                                (("2"
                                  (hide-all-but (-1 -5 -7 1))
                                  (("2"
                                    (use "inst_step_vars_context_aux")
                                    (("2"
                                      (expand "subset?")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (inst?)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (hide-all-but (-1 -7 1))
                                (("3"
                                  (expand "subset?")
                                  (("3"
                                    (skeep)
                                    (("3"
                                      (inst?)
                                      (("3"
                                        (inst?)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (rewrite "vars_args")
                                            (("3"
                                              (skolem -1 "t1")
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (expand "lhs" -1)
                                                  (("3"
                                                    (rewrite
                                                     "first_proj_mem")
                                                    (("3"
                                                      (skolem -1 "up")
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (use
                                                           "apply_sub_unif_pair")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (skolem
                                                               -1
                                                               "up1")
                                                              (("3"
                                                                (flatten)
                                                                (("3"
                                                                  (replace
                                                                   -2)
                                                                  (("3"
                                                                    (expand
                                                                     "apply_sub"
                                                                     -4)
                                                                    (("3"
                                                                      (replace
                                                                       -4
                                                                       -5)
                                                                      (("3"
                                                                        (use
                                                                         "vars_subs_t")
                                                                        (("3"
                                                                          (expand
                                                                           "subset?")
                                                                          (("3"
                                                                            (inst?)
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (expand
                                                                                 ("member"
                                                                                  "union")
                                                                                 -1)
                                                                                (("3"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      2
                                                                                      3))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "del"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (use
                                                                                         "inst_step_img")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "subset?")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 ("member"
                                                                                                  "vars")
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "union"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -2
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (rewrite
                                                                                     "vars_args"
                                                                                     3)
                                                                                    (("2"
                                                                                      (inst
                                                                                       3
                                                                                       "up1`1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "lhs"
                                                                                           3)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "first_proj_mem"
                                                                                             3)
                                                                                            (("2"
                                                                                              (inst
                                                                                               3
                                                                                               "up1")
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("4"
                                (assert)
                                (("4"
                                  (reveal -2 -4)
                                  (("4"
                                    (case
                                     "subs(rho)(t) = t AND subs(rho)(s) = s")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (replace -2)
                                          (("1"
                                            (replace -3)
                                            (("1"
                                              (replace -4)
                                              (("1"
                                                (use
                                                 "equal_syn_append")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (lemma "var_inp_no_effect_lhs")
                                      (("2"
                                        (inst
                                         -1
                                         "FV"
                                         "G"
                                         "P"
                                         "PV"
                                         "V"
                                         "V1"
                                         "rho"
                                         "s"
                                         "sig"
                                         "sig_"
                                         "t")
                                        (("2"
                                          (case
                                           "var_inp_cond?(G, cons((t, s), P), sig, V, PV, sig_, FV, rho, V1)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lemma
                                               "subs_no_effect_t")
                                              (("1"
                                                (inst -1 "rho" "s")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (hide-all-but
                                                     (-5 -8 -10 1))
                                                    (("1"
                                                      (expand
                                                       ("disjoint?"
                                                        "subset?"))
                                                      (("1"
                                                        (expand
                                                         "empty?")
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide -1 2 3 4 5)
                                            (("2"
                                              (expand
                                               "var_inp_cond?"
                                               1)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("5"
                                (hide -10 2 3)
                                (("5"
                                  (reveal -5)
                                  (("5"
                                    (use "apply_sub_vars")
                                    (("5"
                                      (expand "subset?" (-1 1))
                                      (("5"
                                        (skeep)
                                        (("5"
                                          (inst?)
                                          (("5"
                                            (assert)
                                            (("5"
                                              (expand
                                               ("member" "union")
                                               -1)
                                              (("5"
                                                (prop)
                                                (("1"
                                                  (use "inst_step_img")
                                                  (("1"
                                                    (expand
                                                     "subset?"
                                                     -1)
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide-all-but
                                                           (-1 -13 1))
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but
                                                   (-1 -12 1))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("6"
                                (use "vars_img_append")
                                (("6"
                                  (expand "subset?" (-1 1))
                                  (("6"
                                    (skeep)
                                    (("6"
                                      (inst -1 "x")
                                      (("6"
                                        (assert)
                                        (("6"
                                          (expand
                                           ("member" "union")
                                           -1)
                                          (("6"
                                            (prop)
                                            (("1"
                                              (expand "del" -1)
                                              (("1"
                                                (use "inst_step_img")
                                                (("1"
                                                  (expand "subset?" -1)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         ("member"
                                                          "vars")
                                                         -1)
                                                        (("1"
                                                          (expand
                                                           "union"
                                                           -1)
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (hide-all-but
                                                               (-1
                                                                -7
                                                                -10
                                                                1))
                                                              (("1"
                                                                (expand
                                                                 "subset?")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-1
                                                                -7
                                                                -4
                                                                1))
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but (-1 -14 1))
                                              (("2"
                                                (expand "subset?")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (lemma "var_inp_option_rhs")
                              (("2"
                                (inst
                                 -1
                                 "FV"
                                 "G"
                                 "P"
                                 "PV"
                                 "V"
                                 "V1"
                                 "rho"
                                 "s"
                                 "sig"
                                 "sig_"
                                 "t")
                                (("2"
                                  (assert)
                                  (("2"
                                    (case
                                     "var_inp_cond?(G, cons((t, s), P), sig, V, PV, sig_, FV, rho, V1)")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (reveal -6)
                                          (("1"
                                            (reveal -1)
                                            (("1"
                                              (use
                                               "var_inp_inst_step_aux")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split 5)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2)
                                                            (("1"
                                                              (expand
                                                               ("del"
                                                                "skp"
                                                                "fai"))
                                                              (("1"
                                                                (use
                                                                 "inst_step_match_condition_apply_sub")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "G1"
                                                             1)
                                                            (("2"
                                                              (replace
                                                               -1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide-all-but
                                                                   (-9
                                                                    1))
                                                                  (("2"
                                                                    (rewrite
                                                                     "vars_append_context")
                                                                    (("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (hide
                                                             -14
                                                             -12
                                                             -13)
                                                            (("3"
                                                              (hide -1)
                                                              (("3"
                                                                (expand
                                                                 "subset?"
                                                                 1)
                                                                (("3"
                                                                  (skeep)
                                                                  (("3"
                                                                    (rewrite
                                                                     "vars_args"
                                                                     -1)
                                                                    (("3"
                                                                      (skolem
                                                                       -1
                                                                       "t1")
                                                                      (("3"
                                                                        (flatten)
                                                                        (("3"
                                                                          (expand
                                                                           "lhs"
                                                                           -1)
                                                                          (("3"
                                                                            (rewrite
                                                                             "first_proj_mem")
                                                                            (("3"
                                                                              (skolem
                                                                               -1
                                                                               "up1")
                                                                              (("3"
                                                                                (flatten)
                                                                                (("3"
                                                                                  (rewrite
                                                                                   "apply_sub_unif_pair")
                                                                                  (("3"
                                                                                    (skolem
                                                                                     -1
                                                                                     "up")
                                                                                    (("3"
                                                                                      (flatten)
                                                                                      (("3"
                                                                                        (replace
                                                                                         -2
                                                                                         -3)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "apply_sub"
                                                                                           -3)
                                                                                          (("3"
                                                                                            (replace
                                                                                             -3
                                                                                             -4)
                                                                                            (("3"
                                                                                              (use
                                                                                               "vars_subs_t")
                                                                                              (("3"
                                                                                                (hide
                                                                                                 -11
                                                                                                 -10
                                                                                                 4
                                                                                                 5)
                                                                                                (("3"
                                                                                                  (expand
                                                                                                   "subset?"
                                                                                                   -1)
                                                                                                  (("3"
                                                                                                    (inst?)
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         ("member"
                                                                                                          "union")
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -7
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "img_basic_sub_var")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "subset?")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "ext_vars"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          -14
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              -2
                                                                                                              -13
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "vars_args")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       2
                                                                                                                       "up`1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "lhs"
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "first_proj_mem")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               2
                                                                                                                               "up")
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             ("del_"
                                                              "del")
                                                             1)
                                                            (("4"
                                                              (use
                                                               "var_inp_equal_syn2")
                                                              (("4"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (hide-all-but
                                                             (-13 1))
                                                            (("5"
                                                              (reveal
                                                               -2)
                                                              (("5"
                                                                (use
                                                                 "apply_sub_vars")
                                                                (("5"
                                                                  (expand
                                                                   "subset?")
                                                                  (("5"
                                                                    (skeep)
                                                                    (("5"
                                                                      (inst?)
                                                                      (("5"
                                                                        (inst?)
                                                                        (("5"
                                                                          (assert)
                                                                          (("5"
                                                                            (expand
                                                                             ("member"
                                                                              "union")
                                                                             -1)
                                                                            (("5"
                                                                              (prop)
                                                                              (("1"
                                                                                (expand
                                                                                 "del"
                                                                                 -1)
                                                                                (("1"
                                                                                  (use
                                                                                   "inst_step_img")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("6"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("7"
                                                            (hide -14)
                                                            (("7"
                                                              (use
                                                               "vars_img_append")
                                                              (("7"
                                                                (hide
                                                                 -2)
                                                                (("7"
                                                                  (expand
                                                                   "subset?"
                                                                   (-1
                                                                    1))
                                                                  (("7"
                                                                    (skeep)
                                                                    (("7"
                                                                      (inst?)
                                                                      (("7"
                                                                        (assert)
                                                                        (("7"
                                                                          (expand
                                                                           ("member "
                                                                            "union")
                                                                           -1)
                                                                          (("7"
                                                                            (prop)
                                                                            (("1"
                                                                              (replace
                                                                               -4
                                                                               -1
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (use
                                                                                 "img_basic_sub2")
                                                                                (("1"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -5)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "vars_singleton"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "ext_vars"
                                                                                           -2)
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              1
                                                                                              -13))
                                                                                            (("1"
                                                                                              (expand
                                                                                               "subset?"
                                                                                               -2)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (reveal
                                                                                                     -9)
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       -2)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -16
                                                                                1))
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 5)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (expand "var_inp_cond?" 1)
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (var_inp_option_rhs formula-decl nil nominal_AC_variant_inputs nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (vars_append_context formula-decl nil nominal_AC_freshness nil)
    (img_basic_sub_var formula-decl nil nominal_AC_substitution nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (reverse def-decl "list[T]" list_props nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (var_inp_equal_syn2 formula-decl nil nominal_AC_variant_inputs nil)
    (del_ skolem-const-decl "sub" nominal_AC_variant_inputs nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_finite_union2 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (append def-decl "list[T]" list_props nil)
    (emptyset const-decl "set" sets nil)
    (vars_singleton formula-decl nil nominal_AC_term_properties nil)
    (img_basic_sub2 formula-decl nil nominal_AC_substitution nil)
    (del skolem-const-decl "sub" nominal_AC_variant_inputs nil)
    (fai skolem-const-decl "bool" nominal_AC_variant_inputs nil)
    (skp skolem-const-decl "bool" nominal_AC_variant_inputs nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (inst_step_match_condition_apply_sub formula-decl nil
     nominal_AC_inst_step nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (DS const-decl "list[atom]" atoms nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (union const-decl "set" sets nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (inst_step_vars_context_aux formula-decl nil nominal_AC_inst_step
     nil)
    (G1 skolem-const-decl "fresh_context" nominal_AC_variant_inputs
     nil)
    (apply_sub_unif_pair formula-decl nil nominal_AC_unification nil)
    (inst_step_img formula-decl nil nominal_AC_inst_step nil)
    (member def-decl "bool" list_props nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (vars_subs_t formula-decl nil nominal_AC_substitution nil)
    (apply_sub const-decl "unif_pair" nominal_AC_unification nil)
    (first_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (vars_args formula-decl nil nominal_AC_term_properties nil)
    (every adt-def-decl "boolean" list_adt nil)
    (args type-eq-decl nil nominal_AC_term_properties nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (disjoint? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (empty? const-decl "bool" sets nil)
    (equal_syn_append formula-decl nil nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (apply_sub_vars formula-decl nil nominal_AC_unification nil)
    (vars_img_append formula-decl nil nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset? const-decl "bool" sets nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil)
  (var_inp_inst_step_preservation-1 nil 3895606413
   ("" (skeep)
    (("" (assert)
      (("" (name-replace "G1" "inst_step(PV, G, t, s)`1")
        (("" (name-replace "del" "inst_step(PV, G, t, s)`2")
          (("" (name-replace "skp" "inst_step(PV, G, t, s)`3")
            (("" (flatten)
              ((""
                (name-replace "del_"
                 "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
                (("" (name-replace "fai" "inst_step(PV, G, t, s)`4")
                  (("" (expand "var_inp_cond?" -1)
                    (("" (flatten)
                      (("" (expand "var_inp_cond?" 3)
                        (("" (assert)
                          (("" (case "subset?(vars(s), V)")
                            (("1" (prop)
                              (("1"
                                (use
                                 "inst_step_match_condition_apply_sub")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand ("del" "fai" "skp"))
                                    (("1" (assert) nil)))))))
                               ("2"
                                (expand "G1" 1)
                                (("2"
                                  (hide-all-but (-1 -5 -7 1))
                                  (("2"
                                    (use "inst_step_vars_context_aux")
                                    (("2"
                                      (expand "subset?")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (grind)
                                                nil)))))))))))))))))
                               ("3"
                                (hide-all-but (-1 -7 1))
                                (("3"
                                  (expand "subset?")
                                  (("3"
                                    (skeep)
                                    (("3"
                                      (inst?)
                                      (("3"
                                        (inst?)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (rewrite "vars_args")
                                            (("3"
                                              (skolem -1 "t1")
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (expand "lhs" -1)
                                                  (("3"
                                                    (rewrite
                                                     "first_proj_mem")
                                                    (("3"
                                                      (skolem -1 "up")
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (use
                                                           "apply_sub_unif_pair")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (skolem
                                                               -1
                                                               "up1")
                                                              (("3"
                                                                (flatten)
                                                                (("3"
                                                                  (replace
                                                                   -2)
                                                                  (("3"
                                                                    (expand
                                                                     "apply_sub"
                                                                     -4)
                                                                    (("3"
                                                                      (replace
                                                                       -4
                                                                       -5)
                                                                      (("3"
                                                                        (use
                                                                         "vars_subs_t")
                                                                        (("3"
                                                                          (expand
                                                                           "subset?")
                                                                          (("3"
                                                                            (inst?)
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (expand
                                                                                 ("member"
                                                                                  "union")
                                                                                 -1)
                                                                                (("3"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      2
                                                                                      3))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "del"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (use
                                                                                         "inst_step_img")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "subset?")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 ("member"
                                                                                                  "vars")
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "union"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -2
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil)))))))))))))))))))
                                                                                   ("2"
                                                                                    (rewrite
                                                                                     "vars_args"
                                                                                     3)
                                                                                    (("2"
                                                                                      (inst
                                                                                       3
                                                                                       "up1`1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "lhs"
                                                                                           3)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "first_proj_mem"
                                                                                             3)
                                                                                            (("2"
                                                                                              (inst
                                                                                               3
                                                                                               "up1")
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                               ("4"
                                (assert)
                                (("4"
                                  (reveal -2 -4)
                                  (("4"
                                    (case
                                     "subs(rho)(t) = t AND subs(rho)(s) = s")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (replace -2)
                                          (("1"
                                            (replace -3)
                                            (("1"
                                              (replace -4)
                                              (("1"
                                                (use
                                                 "equal_syn_append")
                                                (("1"
                                                  (assert)
                                                  nil)))))))))))))
                                     ("2"
                                      (lemma "var_inp_no_effect_lhs")
                                      (("2"
                                        (inst
                                         -1
                                         "FV"
                                         "G"
                                         "P"
                                         "PV"
                                         "V"
                                         "V1"
                                         "rho"
                                         "s"
                                         "sig"
                                         "sig_"
                                         "t")
                                        (("2"
                                          (case
                                           "var_inp_cond?(G, cons((t, s), P), sig, V, PV, sig_, FV, rho, V1)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lemma
                                               "subs_no_effect_t")
                                              (("1"
                                                (inst -1 "rho" "s")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (hide-all-but
                                                     (-5 -10 1))
                                                    (("1"
                                                      (expand
                                                       ("disjoint?"
                                                        "subset?"))
                                                      (("1"
                                                        (expand
                                                         "empty?")
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (grind)
                                                            nil)))))))))))))))))
                                           ("2"
                                            (hide -1 2 3 4 5)
                                            (("2"
                                              (expand
                                               "var_inp_cond?"
                                               1)
                                              (("2"
                                                (propax)
                                                nil)))))))))))))))))
                               ("5"
                                (hide -10 2 3)
                                (("5"
                                  (reveal -5)
                                  (("5"
                                    (use "apply_sub_vars")
                                    (("5"
                                      (expand "subset?" (-1 1))
                                      (("5"
                                        (skeep)
                                        (("5"
                                          (inst?)
                                          (("5"
                                            (assert)
                                            (("5"
                                              (expand
                                               ("member" "union")
                                               -1)
                                              (("5"
                                                (prop)
                                                (("1"
                                                  (use "inst_step_img")
                                                  (("1"
                                                    (expand
                                                     "subset?"
                                                     -1)
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide-all-but
                                                           (-1 -13 1))
                                                          (("1"
                                                            (grind)
                                                            nil)))))))))))
                                                 ("2"
                                                  (hide-all-but
                                                   (-1 -12 1))
                                                  (("2"
                                                    (grind)
                                                    nil)))))))))))))))))))))
                               ("6"
                                (use "vars_img_append")
                                (("6"
                                  (expand "subset?" (-1 1))
                                  (("6"
                                    (skeep)
                                    (("6"
                                      (inst -1 "x")
                                      (("6"
                                        (assert)
                                        (("6"
                                          (expand
                                           ("member" "union")
                                           -1)
                                          (("6"
                                            (prop)
                                            (("1"
                                              (expand "del" -1)
                                              (("1"
                                                (use "inst_step_img")
                                                (("1"
                                                  (expand "subset?" -1)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         ("member"
                                                          "vars")
                                                         -1)
                                                        (("1"
                                                          (expand
                                                           "union"
                                                           -1)
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (hide-all-but
                                                               (-1
                                                                -10
                                                                1))
                                                              (("1"
                                                                (expand
                                                                 "subset?")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "lhs"
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "first_proj"
                                                                         2)
                                                                        (("1"
                                                                          (grind)
                                                                          nil)))))))))))))
                                                             ("2"
                                                              (hide-all-but
                                                               (-1
                                                                -4
                                                                1))
                                                              (("2"
                                                                (expand
                                                                 "subset?"
                                                                 -2)
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    nil)))))))))))))))))))))))
                                             ("2"
                                              (hide-all-but (-1 -14 1))
                                              (("2"
                                                (expand "subset?")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil)))))))))))))))))))))))
                             ("2" (lemma "var_inp_option_rhs2")
                              (("2"
                                (inst
                                 -1
                                 "FV"
                                 "G"
                                 "P"
                                 "PV"
                                 "V"
                                 "V1"
                                 "rho"
                                 "s"
                                 "sig"
                                 "sig_"
                                 "t")
                                (("2"
                                  (assert)
                                  (("2"
                                    (case
                                     "var_inp_cond?(G, cons((t, s), P), sig, V, PV, sig_, FV, rho, V1)")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (reveal -6)
                                          (("1"
                                            (reveal -1)
                                            (("1"
                                              (use
                                               "var_inp_inst_step_aux2")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split 5)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2)
                                                            (("1"
                                                              (expand
                                                               ("del"
                                                                "skp"
                                                                "fai"))
                                                              (("1"
                                                                (use
                                                                 "inst_step_match_condition_apply_sub")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))))
                                                           ("2"
                                                            (expand
                                                             "G1"
                                                             1)
                                                            (("2"
                                                              (replace
                                                               -1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide-all-but
                                                                   (-9
                                                                    1))
                                                                  (("2"
                                                                    (rewrite
                                                                     "vars_append_context")
                                                                    (("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (grind)
                                                                          nil)))))))))))))))
                                                           ("3"
                                                            (hide
                                                             -14
                                                             -12
                                                             -13)
                                                            (("3"
                                                              (hide -1)
                                                              (("3"
                                                                (expand
                                                                 "subset?"
                                                                 1)
                                                                (("3"
                                                                  (skeep)
                                                                  (("3"
                                                                    (rewrite
                                                                     "vars_args"
                                                                     -1)
                                                                    (("3"
                                                                      (skolem
                                                                       -1
                                                                       "t1")
                                                                      (("3"
                                                                        (flatten)
                                                                        (("3"
                                                                          (expand
                                                                           "lhs"
                                                                           -1)
                                                                          (("3"
                                                                            (rewrite
                                                                             "first_proj_mem")
                                                                            (("3"
                                                                              (skolem
                                                                               -1
                                                                               "up1")
                                                                              (("3"
                                                                                (flatten)
                                                                                (("3"
                                                                                  (rewrite
                                                                                   "apply_sub_unif_pair")
                                                                                  (("3"
                                                                                    (skolem
                                                                                     -1
                                                                                     "up")
                                                                                    (("3"
                                                                                      (flatten)
                                                                                      (("3"
                                                                                        (replace
                                                                                         -2
                                                                                         -3)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "apply_sub"
                                                                                           -3)
                                                                                          (("3"
                                                                                            (replace
                                                                                             -3
                                                                                             -4)
                                                                                            (("3"
                                                                                              (use
                                                                                               "vars_subs_t")
                                                                                              (("3"
                                                                                                (hide
                                                                                                 -11
                                                                                                 -10
                                                                                                 4
                                                                                                 5)
                                                                                                (("3"
                                                                                                  (expand
                                                                                                   "subset?"
                                                                                                   -1)
                                                                                                  (("3"
                                                                                                    (inst?)
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         ("member"
                                                                                                          "union")
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -7
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "img_basic_sub_var")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "subset?")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "ext_vars"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          -14
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil)))))))))))))))
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              -2
                                                                                                              -13
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "vars_args")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       2
                                                                                                                       "up`1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "lhs"
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "first_proj_mem")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               2
                                                                                                                               "up")
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                           ("4"
                                                            (expand
                                                             ("del_"
                                                              "del")
                                                             1)
                                                            (("4"
                                                              (use
                                                               "var_inp_equal_syn2")
                                                              (("4"
                                                                (assert)
                                                                nil)))))
                                                           ("5"
                                                            (hide-all-but
                                                             (-13 1))
                                                            (("5"
                                                              (reveal
                                                               -2)
                                                              (("5"
                                                                (use
                                                                 "apply_sub_vars")
                                                                (("5"
                                                                  (expand
                                                                   "subset?")
                                                                  (("5"
                                                                    (skeep)
                                                                    (("5"
                                                                      (inst?)
                                                                      (("5"
                                                                        (inst?)
                                                                        (("5"
                                                                          (assert)
                                                                          (("5"
                                                                            (expand
                                                                             ("member"
                                                                              "union")
                                                                             -1)
                                                                            (("5"
                                                                              (prop)
                                                                              (("1"
                                                                                (expand
                                                                                 "del"
                                                                                 -1)
                                                                                (("1"
                                                                                  (use
                                                                                   "inst_step_img")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil)))))))))
                                                                               ("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil)))))))))))))))))))))))
                                                           ("6"
                                                            (propax)
                                                            nil)
                                                           ("7"
                                                            (hide -14)
                                                            (("7"
                                                              (use
                                                               "vars_img_append")
                                                              (("7"
                                                                (hide
                                                                 -2)
                                                                (("7"
                                                                  (expand
                                                                   "subset?"
                                                                   (-1
                                                                    1))
                                                                  (("7"
                                                                    (skeep)
                                                                    (("7"
                                                                      (inst?)
                                                                      (("7"
                                                                        (assert)
                                                                        (("7"
                                                                          (expand
                                                                           ("member "
                                                                            "union")
                                                                           -1)
                                                                          (("7"
                                                                            (prop)
                                                                            (("1"
                                                                              (replace
                                                                               -4
                                                                               -1
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (use
                                                                                 "img_basic_sub2")
                                                                                (("1"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -5)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "vars_singleton"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "ext_vars"
                                                                                           -2)
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              1
                                                                                              -13))
                                                                                            (("1"
                                                                                              (expand
                                                                                               "subset?"
                                                                                               -2)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil)))))))))))))))))
                                                                                   ("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       -2)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil)))))))))))
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -16
                                                                                1))
                                                                              (("2"
                                                                                (grind)
                                                                                nil)))))))))))))))))))))))))))))))))))))))))))
                                     ("2"
                                      (hide 5)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (expand "var_inp_cond?" 1)
                                          (("2"
                                            (propax)
                                            nil))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil))
 (var_inp_inst_step_ctx 0
  (var_inp_inst_step_ctx-1 nil 3896469612
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (skeep)
          (("" (expand "inst_step" 1 1)
            (("" (lift-if)
              (("" (split 1)
                (("1" (flatten)
                  (("1" (expand "apply_sub" 1)
                    (("1" (assert)
                      (("1" (expand "inst_step" 1)
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (name-replace "t" "car(P)`1")
                    (("1" (name-replace "s" "car(P)`2")
                      (("1"
                        (name-replace "G1" "inst_step(PV, G, t, s)`1")
                        (("1"
                          (name-replace "del"
                           "inst_step(PV, G, t, s)`2")
                          (("1"
                            (name-replace "skp"
                             "inst_step(PV, G, t, s)`3")
                            (("1"
                              (name-replace "fai"
                               "inst_step(PV, G, t, s)`4")
                              (("1"
                                (hide -1)
                                (("1"
                                  (case "P = cons((t, s), cdr(P))")
                                  (("1"
                                    (replace -1 -2)
                                    (("1"
                                      (case "subset?(vars(s), FV)")
                                      (("1"
                                        (use "var_inp_no_effect_lhs")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (use
                                             "var_inp_no_effect_rhs")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (reveal
                                                 -4
                                                 -5
                                                 -6
                                                 -7
                                                 -8
                                                 -9)
                                                (("1"
                                                  (split 2)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (expand
                                                       "apply_sub"
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "apply_sub"
                                                         1
                                                         1)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -7)
                                                            (("1"
                                                              (replace
                                                               -8)
                                                              (("1"
                                                                (replace
                                                                 -9)
                                                                (("1"
                                                                  (expand
                                                                   "inst_step"
                                                                   1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split 2)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (rewrite
                                                           "inst_step1_no_effect_cor")
                                                          (("1"
                                                            (expand
                                                             "apply_sub"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "apply_sub"
                                                               1
                                                               1)
                                                              (("1"
                                                                (replace
                                                                 -6)
                                                                (("1"
                                                                  (replace
                                                                   -7)
                                                                  (("1"
                                                                    (replace
                                                                     -8)
                                                                    (("1"
                                                                      (replace
                                                                       -9)
                                                                      (("1"
                                                                        (expand
                                                                         "inst_step"
                                                                         1
                                                                         2)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (case
                                                                             "inst_step(PV, G, apply_sub(rho, cdr(P)), cons((t, s), null), null)`1 = inst_step(PV, G, apply_sub(rho, cdr(P)), null, null)`1")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (reveal
                                                                                   -4)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "cdr(P)")
                                                                                    (("1"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "FV"
                                                                                         "G"
                                                                                         "PV"
                                                                                         "V"
                                                                                         "V1"
                                                                                         "rho"
                                                                                         "sig"
                                                                                         "sig_")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (use
                                                                                             "var_inp_cdr")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (rewrite
                                                                               "inst_step1_no_effect_cor")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "apply_sub"
                                                           2
                                                           2)
                                                          (("2"
                                                            (rewrite
                                                             "inst_step1_no_effect_cor2")
                                                            (("2"
                                                              (name-replace
                                                               "P1"
                                                               "apply_sub(del, cdr(P))")
                                                              (("2"
                                                                (reveal
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "apply_sub"
                                                                   2
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "apply_sub"
                                                                     2
                                                                     1)
                                                                    (("2"
                                                                      (replace
                                                                       -6)
                                                                      (("2"
                                                                        (replace
                                                                         -7)
                                                                        (("2"
                                                                          (replace
                                                                           -8)
                                                                          (("2"
                                                                            (replace
                                                                             -9)
                                                                            (("2"
                                                                              (expand
                                                                               "inst_step"
                                                                               2
                                                                               2)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "apply_sub"
                                                                                       2
                                                                                       3)
                                                                                      (("2"
                                                                                        (case
                                                                                         "inst_step(PV, G1, apply_sub(del, apply_sub(rho, cdr(P))), null, append(del, null))`1 = inst_step(PV, G1, apply_sub(del, apply_sub(rho, cdr(P))), null, null)`1")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (use
                                                                                               "var_inp_equal_syn_unif_prb")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -7)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -8)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (reveal
                                                                                                                 -7)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "P1")
                                                                                                                  (("1"
                                                                                                                    (prop)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       1
                                                                                                                       3)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "FV"
                                                                                                                         "G1"
                                                                                                                         "PV"
                                                                                                                         "V"
                                                                                                                         "V1"
                                                                                                                         "rho"
                                                                                                                         "append(del, sig)"
                                                                                                                         "append(del, sig_)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (use
                                                                                                                             "var_inp_inst_step_preservation")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "P1"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "apply_sub_len"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "length"
                                                                                                                           1
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (rewrite
                                                                                           "inst_step1_no_effect_cor2")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (use "var_inp_inst_step_aux")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (reveal -3 -4 -5 -6 -7 -8)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (rewrite
                                                 "inst_step1_no_effect_cor2")
                                                (("2"
                                                  (expand
                                                   "apply_sub"
                                                   5
                                                   2)
                                                  (("2"
                                                    (name-replace
                                                     "P1"
                                                     "apply_sub(del, cdr(P))")
                                                    (("2"
                                                      (use
                                                       "var_inp_inst_step_aux_ren")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "apply_sub"
                                                           5)
                                                          (("2"
                                                            (expand
                                                             "apply_sub"
                                                             5
                                                             1)
                                                            (("2"
                                                              (replace
                                                               -4)
                                                              (("2"
                                                                (replace
                                                                 -5)
                                                                (("2"
                                                                  (expand
                                                                   "inst_step"
                                                                   5
                                                                   2)
                                                                  (("2"
                                                                    (name-replace
                                                                     "del_"
                                                                     "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
                                                                    (("2"
                                                                      (reveal
                                                                       -1)
                                                                      (("2"
                                                                        (replace
                                                                         -2)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case
                                                                             "G1 = append(G, G)")
                                                                            (("1"
                                                                              (replace
                                                                               -1
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (replace
                                                                                 -2)
                                                                                (("1"
                                                                                  (expand
                                                                                   "apply_sub"
                                                                                   5
                                                                                   3)
                                                                                  (("1"
                                                                                    (case
                                                                                     "inst_step(PV, G1, apply_sub(del_, apply_sub(rho, cdr(P))), null, append(del_, null))`1 = inst_step(PV, G1, apply_sub(del_, apply_sub(rho, cdr(P))), null, null)`1")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (use
                                                                                           "var_inp_equal_syn_unif_prb")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -5)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -4
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (reveal
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (reveal
                                                                                                             -8)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "P1")
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "FV"
                                                                                                                   "G1"
                                                                                                                   "PV"
                                                                                                                   "V"
                                                                                                                   "V1"
                                                                                                                   "rho"
                                                                                                                   "append(del, sig)"
                                                                                                                   "append(del_, sig_)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "var_inp_inst_step_preservation")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "P1"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "apply_sub_len"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "length"
                                                                                                                       1
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (rewrite
                                                                                       "inst_step1_no_effect_cor2")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               6)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand ("t" "s") 1)
                                    (("2"
                                      (decompose-equality 1)
                                      nil
                                      nil))
                                    nil)
                                   ("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (apply_sub const-decl "unif_pair" nominal_AC_unification nil)
    (inst_step1_no_effect_cor formula-decl nil nominal_AC_inst_step
     nil)
    (var_inp_cdr formula-decl nil nominal_AC_variant_inputs nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (var_inp_equal_syn_unif_prb formula-decl nil
     nominal_AC_variant_inputs nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (apply_sub_len formula-decl nil nominal_AC_unification nil)
    (var_inp_inst_step_preservation formula-decl nil
     nominal_AC_variant_inputs nil)
    (inst_step1_no_effect_cor2 formula-decl nil nominal_AC_inst_step
     nil)
    (append def-decl "list[T]" list_props nil)
    (var_inp_no_effect_rhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (s skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (inst_step def-decl "[fresh_context, unif_prb, sub, bool]"
     nominal_AC_inst_step nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   shostak))
 (var_inp_inst_step_fail 0
  (var_inp_inst_step_fail-1 nil 3896515083
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (skeep)
          (("" (expand "inst_step" 1 1)
            (("" (lift-if)
              (("" (split 1)
                (("1" (flatten)
                  (("1" (expand "apply_sub" 1)
                    (("1" (assert)
                      (("1" (expand "inst_step" -2)
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (hide -1)
                    (("2" (name-replace "t" "car(P)`1")
                      (("1" (name-replace "s" "car(P)`2")
                        (("1"
                          (name-replace "G1"
                           "inst_step(PV, G, t, s)`1")
                          (("1"
                            (name-replace "del"
                             "inst_step(PV, G, t, s)`2")
                            (("1"
                              (name-replace "skp"
                               "inst_step(PV, G, t, s)`3")
                              (("1"
                                (name-replace
                                 "fai"
                                 "inst_step(PV, G, t, s)`4")
                                (("1"
                                  (case "P = cons((t, s), cdr(P))")
                                  (("1"
                                    (replace -1 -2)
                                    (("1"
                                      (case "subset?(vars(s), FV)")
                                      (("1"
                                        (use "var_inp_no_effect_lhs")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (use
                                             "var_inp_no_effect_rhs")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (reveal
                                                 -3
                                                 -4
                                                 -5
                                                 -6
                                                 -7
                                                 -8)
                                                (("1"
                                                  (split 2)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (expand
                                                       "apply_sub"
                                                       1
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "apply_sub"
                                                         1
                                                         1)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -7)
                                                            (("1"
                                                              (replace
                                                               -8)
                                                              (("1"
                                                                (replace
                                                                 -9)
                                                                (("1"
                                                                  (expand
                                                                   "inst_step"
                                                                   1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split 2)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (expand
                                                           "apply_sub"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "apply_sub"
                                                             1
                                                             1)
                                                            (("1"
                                                              (replace
                                                               -6)
                                                              (("1"
                                                                (replace
                                                                 -7)
                                                                (("1"
                                                                  (replace
                                                                   -8)
                                                                  (("1"
                                                                    (replace
                                                                     -9)
                                                                    (("1"
                                                                      (expand
                                                                       "inst_step"
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (rewrite
                                                                           "inst_step4_no_effect_cor")
                                                                          (("1"
                                                                            (case
                                                                             "inst_step(PV, G, apply_sub(rho, cdr(P)), cons((t, s), null), null)`4 = inst_step(PV, G, apply_sub(rho, cdr(P)), null, null)`4")
                                                                            (("1"
                                                                              (replace
                                                                               -1
                                                                               :hide?
                                                                               t)
                                                                              (("1"
                                                                                (reveal
                                                                                 -10)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "cdr(P)")
                                                                                  (("1"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "FV"
                                                                                       "G"
                                                                                       "PV"
                                                                                       "V"
                                                                                       "V1"
                                                                                       "rho"
                                                                                       "sig"
                                                                                       "sig_")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (use
                                                                                           "var_inp_cdr")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "length"
                                                                                       1
                                                                                       2)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "inst_step4_no_effect_cor")
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "apply_sub"
                                                           2
                                                           2)
                                                          (("2"
                                                            (expand
                                                             "apply_sub"
                                                             2
                                                             2)
                                                            (("2"
                                                              (expand
                                                               "apply_sub"
                                                               2
                                                               2)
                                                              (("2"
                                                                (replace
                                                                 -5)
                                                                (("2"
                                                                  (replace
                                                                   -6)
                                                                  (("2"
                                                                    (replace
                                                                     -7)
                                                                    (("2"
                                                                      (replace
                                                                       -8)
                                                                      (("2"
                                                                        (expand
                                                                         "inst_step"
                                                                         2
                                                                         2)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (replace
                                                                               -2)
                                                                              (("2"
                                                                                (expand
                                                                                 "apply_sub"
                                                                                 2
                                                                                 4)
                                                                                (("2"
                                                                                  (case
                                                                                   "inst_step(PV, G1, apply_sub(del, apply_sub(rho, cdr(P))), null, append(del, null))`4 = inst_step(PV, G1, apply_sub(del, apply_sub(rho, cdr(P))), null, null)`4")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (use
                                                                                         "var_inp_equal_syn_unif_prb")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -2)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -6)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -7)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1
                                                                                                     :hide?
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "P1"
                                                                                                       "apply_sub(del, cdr(P))")
                                                                                                      (("1"
                                                                                                        (reveal
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (reveal
                                                                                                           -13)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "P1")
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 4
                                                                                                                 5)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "FV"
                                                                                                                   "G1"
                                                                                                                   "PV"
                                                                                                                   "V"
                                                                                                                   "V1"
                                                                                                                   "rho"
                                                                                                                   "append(del, sig)"
                                                                                                                   "append(del, sig_)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "inst_step4_no_effect2_cor"
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "var_inp_inst_step_preservation")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "P1"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "apply_sub_len")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "length"
                                                                                                                     1
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "inst_step4_no_effect2_cor"
                                                                                       1)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (use "var_inp_inst_step_aux")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (reveal -2 -3 -4 -5 -6 -7)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "apply_sub"
                                                 5
                                                 2)
                                                (("2"
                                                  (rewrite
                                                   "inst_step4_no_effect2_cor")
                                                  (("2"
                                                    (name-replace
                                                     "P1"
                                                     "apply_sub(del, cdr(P))")
                                                    (("2"
                                                      (reveal -1)
                                                      (("2"
                                                        (expand
                                                         "apply_sub"
                                                         5)
                                                        (("2"
                                                          (expand
                                                           "apply_sub"
                                                           5
                                                           1)
                                                          (("2"
                                                            (replace
                                                             -4)
                                                            (("2"
                                                              (replace
                                                               -5)
                                                              (("2"
                                                                (use
                                                                 "var_inp_inst_step_aux_ren")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "inst_step"
                                                                     5
                                                                     2)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (name-replace
                                                                         "del_"
                                                                         "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
                                                                        (("2"
                                                                          (reveal
                                                                           -1)
                                                                          (("2"
                                                                            (replace
                                                                             -2
                                                                             5)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (hide
                                                                                 -2)
                                                                                (("2"
                                                                                  (case
                                                                                   "append(G, G) = G1")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "apply_sub"
                                                                                       5
                                                                                       3)
                                                                                      (("1"
                                                                                        (case
                                                                                         "inst_step(PV, G1, apply_sub(del_, apply_sub(rho, cdr(P))), null, append(del_, null))`4 = inst_step(PV, G1, apply_sub(del_, apply_sub(rho, cdr(P))), null, null)`4")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (use
                                                                                               "var_inp_equal_syn_unif_prb")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -5)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -4)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (reveal
                                                                                                           -14)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "P1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "FV"
                                                                                                                   "G1"
                                                                                                                   "PV"
                                                                                                                   "V "
                                                                                                                   "V1"
                                                                                                                   "rho"
                                                                                                                   "append(del, sig)"
                                                                                                                   "append(del_, sig_)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "var_inp_inst_step_preservation")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "P1"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "apply_sub_len")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "length"
                                                                                                                       1
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (rewrite
                                                                                           "inst_step4_no_effect2_cor")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     -4
                                                                                     :dir
                                                                                     rl)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -7)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand ("t" "s") 1)
                                    (("2"
                                      (decompose-equality 1)
                                      nil
                                      nil))
                                    nil)
                                   ("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (apply_sub const-decl "unif_pair" nominal_AC_unification nil)
    (inst_step4_no_effect_cor formula-decl nil nominal_AC_inst_step
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (var_inp_cdr formula-decl nil nominal_AC_variant_inputs nil)
    (append def-decl "list[T]" list_props nil)
    (inst_step4_no_effect2_cor formula-decl nil nominal_AC_inst_step
     nil)
    (var_inp_inst_step_preservation formula-decl nil
     nominal_AC_variant_inputs nil)
    (apply_sub_len formula-decl nil nominal_AC_unification nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (var_inp_equal_syn_unif_prb formula-decl nil
     nominal_AC_variant_inputs nil)
    (var_inp_no_effect_rhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (s skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (inst_step def-decl "[fresh_context, unif_prb, sub, bool]"
     nominal_AC_inst_step nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   shostak))
 (var_inp_inst_step_sub 0
  (var_inp_inst_step_sub-1 nil 3895774643
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (hide -1)
          (("" (skeep)
            ((""
              (name-replace "sig1" "inst_step(PV, G, P, null, null)`3")
              ((""
                (name-replace "sig1_"
                 "inst_step(PV, G, apply_sub(rho, P), null, null)`3")
                (("" (reveal -1 -2)
                  (("" (expand "inst_step" -2)
                    (("" (lift-if)
                      (("" (split -2)
                        (("1" (flatten)
                          (("1" (expand "apply_sub" -3)
                            (("1" (assert)
                              (("1"
                                (expand "inst_step" -3)
                                (("1"
                                  (replace -2 :dir rl)
                                  (("1"
                                    (replace -3 :dir rl)
                                    (("1"
                                      (expand "append" 1)
                                      (("1"
                                        (expand "var_inp_cond?")
                                        (("1" (flatten) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (name-replace "t" "car(P)`1")
                            (("1" (name-replace "s" "car(P)`2")
                              (("1"
                                (name-replace
                                 "G1"
                                 "inst_step(PV, G, t, s)`1")
                                (("1"
                                  (name-replace
                                   "del"
                                   "inst_step(PV, G, t, s)`2")
                                  (("1"
                                    (name-replace
                                     "skp"
                                     "inst_step(PV, G, t, s)`3")
                                    (("1"
                                      (name-replace
                                       "fai"
                                       "inst_step(PV, G, t, s)`4")
                                      (("1"
                                        (case "subset?(vars(s), FV)")
                                        (("1"
                                          (case
                                           "P = cons((t, s), cdr(P))")
                                          (("1"
                                            (replace -1 -5)
                                            (("1"
                                              (use
                                               "var_inp_no_effect_lhs")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "apply_sub"
                                                   -5)
                                                  (("1"
                                                    (expand
                                                     "apply_sub"
                                                     -5
                                                     1)
                                                    (("1"
                                                      (reveal
                                                       -2
                                                       -3
                                                       -4
                                                       -5
                                                       -6
                                                       -7)
                                                      (("1"
                                                        (replace -5)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -7)
                                                            (("1"
                                                              (use
                                                               "var_inp_no_effect_rhs")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (hide
                                                                     -1
                                                                     -8)
                                                                    (("1"
                                                                      (split
                                                                       -9)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "inst_step"
                                                                           -11)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (replace
                                                                                 -10
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (expand
                                                                                   "append"
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "var_inp_cond?"
                                                                                     -11)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "inst_step"
                                                                               -11)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "inst_step3_no_effect_cor")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "inst_step3_no_effect_cor"
                                                                                     -9)
                                                                                    (("1"
                                                                                      (reveal
                                                                                       -13)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "cdr(P)")
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "FV"
                                                                                             "G"
                                                                                             "PV"
                                                                                             "V"
                                                                                             "V1"
                                                                                             "rho"
                                                                                             "sig"
                                                                                             "sig_")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (use
                                                                                                 "var_inp_cdr")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "length"
                                                                                             1
                                                                                             2)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (expand
                                                                               "apply_sub"
                                                                               -1
                                                                               2)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "append_null")
                                                                                (("2"
                                                                                  (name-replace
                                                                                   "P1"
                                                                                   "apply_sub(del, cdr(P))")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "inst_step"
                                                                                       -11)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -3
                                                                                           -4
                                                                                           1
                                                                                           2)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -3)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "apply_sub"
                                                                                               -9
                                                                                               3)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "append_null")
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "inst_step_sub_append")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -4
                                                                                                         -5)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -7)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "var_inp_equal_syn_unif_prb")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -7)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -4)
                                                                                                                          (("2"
                                                                                                                            (reveal
                                                                                                                             -18)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "P1")
                                                                                                                              (("2"
                                                                                                                                (prop)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "FV"
                                                                                                                                   "G1"
                                                                                                                                   "PV"
                                                                                                                                   "V"
                                                                                                                                   "V1"
                                                                                                                                   "rho"
                                                                                                                                   "append(del, sig)"
                                                                                                                                   "append(del, sig_)")
                                                                                                                                  (("1"
                                                                                                                                    (prop)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "sig1_ = append(inst_step(PV, G1, apply_sub(rho, P1), null, null)`3, del)")
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "append_assoc"
                                                                                                                                         -2
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1
                                                                                                                                           :dir
                                                                                                                                           rl)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "append_assoc"
                                                                                                                                             -2
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -5
                                                                                                                                               :dir
                                                                                                                                               rl)
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-13
                                                                                                                                          1))
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "inst_step_sub_append")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "G1"
                                                                                                                                             "apply_sub(rho, P1)"
                                                                                                                                             "PV"
                                                                                                                                             "null"
                                                                                                                                             "del")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (use
                                                                                                                                       "var_inp_inst_step_preservation")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "P1"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "apply_sub_len")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "length"
                                                                                                                                       1
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand ("t" "s") 1)
                                            (("2"
                                              (decompose-equality 1)
                                              nil
                                              nil))
                                            nil)
                                           ("3" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (case
                                           "P = cons((t, s), cdr(P))")
                                          (("1"
                                            (replace -1 -4)
                                            (("1"
                                              (use
                                               "var_inp_inst_step_aux")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   ("fai" "skp")
                                                   -3)
                                                  (("1"
                                                    (expand
                                                     "apply_sub"
                                                     -3
                                                     2)
                                                    (("1"
                                                      (rewrite
                                                       "append_null"
                                                       -3)
                                                      (("1"
                                                        (use
                                                         "inst_step_sub_append")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace
                                                             -4)
                                                            (("1"
                                                              (expand
                                                               "apply_sub"
                                                               -5)
                                                              (("1"
                                                                (expand
                                                                 "apply_sub"
                                                                 -5
                                                                 1)
                                                                (("1"
                                                                  (reveal
                                                                   -7
                                                                   -8)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -2)
                                                                      (("1"
                                                                        (use
                                                                         "var_inp_inst_step_aux_ren")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (hide
                                                                             -5)
                                                                            (("1"
                                                                              (expand
                                                                               "inst_step"
                                                                               -7)
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "del_"
                                                                                       "cons((V(subs(rho)(s)), ext(reverse(p(subs(rho)(s))))(subs(rho)(t))), null)")
                                                                                      (("1"
                                                                                        (reveal
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "apply_sub"
                                                                                           -7
                                                                                           3)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "append_null"
                                                                                             -7)
                                                                                            (("1"
                                                                                              (use
                                                                                               "var_inp_equal_syn_unif_prb")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (reveal
                                                                                                   -10
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "del_ = inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -5)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (name-replace
                                                                                                               "P1"
                                                                                                               "apply_sub(del, cdr(P))")
                                                                                                              (("1"
                                                                                                                (reveal
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -9)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "G1 = append(G, G)")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "sig1_ = append(inst_step(PV, G1, apply_sub(rho, P1), null, null)`3, del_)")
                                                                                                                          (("1"
                                                                                                                            (reveal
                                                                                                                             -18)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "P1")
                                                                                                                              (("1"
                                                                                                                                (prop)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "FV"
                                                                                                                                   "G1"
                                                                                                                                   "PV"
                                                                                                                                   "V"
                                                                                                                                   "V1"
                                                                                                                                   "rho"
                                                                                                                                   "append(del, sig)"
                                                                                                                                   "append(del_, sig_)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (prop)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "append_assoc"
                                                                                                                                         -1
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -2
                                                                                                                                           :dir
                                                                                                                                           rl)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "append_assoc"
                                                                                                                                             -1
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -10
                                                                                                                                               :dir
                                                                                                                                               rl)
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (use
                                                                                                                                         "var_inp_inst_step_preservation")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "P1"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "apply_sub_len"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "length"
                                                                                                                                       1
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-10
                                                                                                                              1))
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "inst_step_sub_append")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "G1"
                                                                                                                                 "apply_sub(rho, P1)"
                                                                                                                                 "PV"
                                                                                                                                 "null"
                                                                                                                                 "del_")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "G1"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "var_inp_inst_step_aux")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand ("t" "s") 1)
                                            (("2"
                                              (decompose-equality 1)
                                              nil
                                              nil))
                                            nil)
                                           ("3" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((= const-decl "[T, T -> boolean]" equalities nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (skp skolem-const-decl "bool" nominal_AC_variant_inputs nil)
    (fai skolem-const-decl "bool" nominal_AC_variant_inputs nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (G1 skolem-const-decl "fresh_context" nominal_AC_variant_inputs
     nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_no_effect_rhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (inst_step3_no_effect_cor formula-decl nil nominal_AC_inst_step
     nil)
    (var_inp_cdr formula-decl nil nominal_AC_variant_inputs nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (inst_step_sub_append formula-decl nil nominal_AC_inst_step nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (apply_sub_len formula-decl nil nominal_AC_unification nil)
    (var_inp_inst_step_preservation formula-decl nil
     nominal_AC_variant_inputs nil)
    (append_assoc formula-decl nil list_props nil)
    (var_inp_equal_syn_unif_prb formula-decl nil
     nominal_AC_variant_inputs nil)
    (append_null formula-decl nil list_props nil)
    (apply_sub const-decl "unif_pair" nominal_AC_unification nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (s skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset? const-decl "bool" sets nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (inst_step def-decl "[fresh_context, unif_prb, sub, bool]"
     nominal_AC_inst_step nil)
    (append def-decl "list[T]" list_props nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   shostak))
 (var_inp_inst_step_sub2 0
  (var_inp_inst_step_sub2-1 nil 3896380616
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (hide -1)
          (("" (skeep)
            ((""
              (name-replace "sig1" "inst_step(PV, G, P, null, null)`3")
              ((""
                (name-replace "sig1_"
                 "inst_step(PV, G, apply_sub(rho, P), null, null)`3")
                (("" (reveal -1 -2)
                  (("" (expand "inst_step" -2)
                    (("" (lift-if)
                      (("" (split -2)
                        (("1" (flatten)
                          (("1" (expand "apply_sub" -3)
                            (("1" (assert)
                              (("1"
                                (expand "inst_step" -3)
                                (("1"
                                  (replace -2 :dir rl)
                                  (("1"
                                    (replace -3 :dir rl)
                                    (("1"
                                      (hide -4)
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (name-replace "t" "car(P)`1")
                            (("1" (name-replace "s" "car(P)`2")
                              (("1"
                                (name-replace
                                 "G1"
                                 "inst_step(PV, G, t, s)`1")
                                (("1"
                                  (name-replace
                                   "del"
                                   "inst_step(PV, G, t, s)`2")
                                  (("1"
                                    (name-replace
                                     "skp"
                                     "inst_step(PV, G, t, s)`3")
                                    (("1"
                                      (name-replace
                                       "fai"
                                       "inst_step(PV, G, t, s)`4")
                                      (("1"
                                        (case "subset?(vars(s), FV)")
                                        (("1"
                                          (case
                                           "P = cons((t, s), cdr(P))")
                                          (("1"
                                            (replace -1 -5)
                                            (("1"
                                              (use
                                               "var_inp_no_effect_lhs")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "apply_sub"
                                                   -5)
                                                  (("1"
                                                    (expand
                                                     "apply_sub"
                                                     -5
                                                     1)
                                                    (("1"
                                                      (reveal
                                                       -2
                                                       -3
                                                       -4
                                                       -5
                                                       -6
                                                       -7)
                                                      (("1"
                                                        (replace -5)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -7)
                                                            (("1"
                                                              (use
                                                               "var_inp_no_effect_rhs")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (hide
                                                                     -1
                                                                     -8)
                                                                    (("1"
                                                                      (split
                                                                       -9)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "inst_step"
                                                                           -11)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (replace
                                                                                 -10
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   2)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "inst_step"
                                                                               -11)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "inst_step3_no_effect_cor")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "inst_step3_no_effect_cor"
                                                                                     -9)
                                                                                    (("1"
                                                                                      (reveal
                                                                                       -13)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "cdr(P)")
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "FV"
                                                                                             "G"
                                                                                             "PV"
                                                                                             "V"
                                                                                             "V1"
                                                                                             "rho"
                                                                                             "sig"
                                                                                             "sig_")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (use
                                                                                                 "var_inp_cdr")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "length"
                                                                                             1
                                                                                             2)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (expand
                                                                               "apply_sub"
                                                                               -1
                                                                               2)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "append_null")
                                                                                (("2"
                                                                                  (name-replace
                                                                                   "P1"
                                                                                   "apply_sub(del, cdr(P))")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "inst_step"
                                                                                       -11)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -3
                                                                                           -4
                                                                                           1
                                                                                           2)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -3)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "apply_sub"
                                                                                               -9
                                                                                               3)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "append_null")
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "inst_step_sub_append")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -4
                                                                                                         -5)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -7)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "var_inp_equal_syn_unif_prb")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -7)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -4)
                                                                                                                          (("2"
                                                                                                                            (reveal
                                                                                                                             -18)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "P1")
                                                                                                                              (("2"
                                                                                                                                (prop)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "FV"
                                                                                                                                   "G1"
                                                                                                                                   "PV"
                                                                                                                                   "V"
                                                                                                                                   "V1"
                                                                                                                                   "rho"
                                                                                                                                   "append(del, sig)"
                                                                                                                                   "append(del, sig_)")
                                                                                                                                  (("1"
                                                                                                                                    (prop)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "sig1_ = append(inst_step(PV, G1, apply_sub(rho, P1), null, null)`3, del)")
                                                                                                                                      (("1"
                                                                                                                                        (name-replace
                                                                                                                                         "sig2_"
                                                                                                                                         "inst_step(PV, G1, apply_sub(rho, P1), null, null)`3")
                                                                                                                                        (("1"
                                                                                                                                          (name-replace
                                                                                                                                           "sig2"
                                                                                                                                           "inst_step(PV, G1, P1, null, null)`3")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -5)
                                                                                                                                              (("1"
                                                                                                                                                (use
                                                                                                                                                 "equal_syn_append2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -7
                                                                                                                                                     -9)
                                                                                                                                                    (("1"
                                                                                                                                                      (use
                                                                                                                                                       "inst_step_img")
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "subset?(vars(t, s), FV)")
                                                                                                                                                        (("1"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (-1
                                                                                                                                                            -2
                                                                                                                                                            1))
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "del"
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "subset?")
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst?)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (-12
                                                                                                                                                            -14
                                                                                                                                                            1))
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "var_inp_cond?"
                                                                                                                                                             -2)
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 (-1
                                                                                                                                                                  -7
                                                                                                                                                                  1))
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "subset?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skeep)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (replace
                                                                                                                                         -13
                                                                                                                                         1
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (use
                                                                                                                                             "inst_step_sub_append")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (use
                                                                                                                                       "var_inp_inst_step_preservation")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "P1")
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "apply_sub_len")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "length"
                                                                                                                                       1
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand ("t" "s"))
                                            (("2"
                                              (decompose-equality 1)
                                              nil
                                              nil))
                                            nil)
                                           ("3" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (case
                                           "P = cons((t, s), cdr(P))")
                                          (("1"
                                            (replace -1 -4)
                                            (("1"
                                              (use
                                               "var_inp_inst_step_aux")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   ("fai" "skp")
                                                   -3)
                                                  (("1"
                                                    (expand
                                                     "apply_sub"
                                                     -3
                                                     2)
                                                    (("1"
                                                      (rewrite
                                                       "append_null"
                                                       -3)
                                                      (("1"
                                                        (use
                                                         "inst_step_sub_append")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace
                                                             -4)
                                                            (("1"
                                                              (expand
                                                               "apply_sub"
                                                               -5)
                                                              (("1"
                                                                (expand
                                                                 "apply_sub"
                                                                 -5
                                                                 1)
                                                                (("1"
                                                                  (reveal
                                                                   -7
                                                                   -8)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -2)
                                                                      (("1"
                                                                        (use
                                                                         "var_inp_inst_step_aux_ren")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (hide
                                                                             -5)
                                                                            (("1"
                                                                              (expand
                                                                               "inst_step"
                                                                               -7)
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "del_"
                                                                                       "cons((V(subs(rho)(s)), ext(reverse(p(subs(rho)(s))))(subs(rho)(t))), null)")
                                                                                      (("1"
                                                                                        (reveal
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "apply_sub"
                                                                                           -7
                                                                                           3)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "append_null"
                                                                                             -7)
                                                                                            (("1"
                                                                                              (use
                                                                                               "var_inp_equal_syn_unif_prb")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (reveal
                                                                                                   -10
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "del_ = inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -5)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (name-replace
                                                                                                               "P1"
                                                                                                               "apply_sub(del, cdr(P))")
                                                                                                              (("1"
                                                                                                                (reveal
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -9)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "G1 = append(G, G)")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "sig1_ = append(inst_step(PV, G1, apply_sub(rho, P1), null, null)`3, del_)")
                                                                                                                          (("1"
                                                                                                                            (reveal
                                                                                                                             -18)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "P1")
                                                                                                                              (("1"
                                                                                                                                (prop)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "FV"
                                                                                                                                   "G1"
                                                                                                                                   "PV"
                                                                                                                                   "V"
                                                                                                                                   "V1"
                                                                                                                                   "rho"
                                                                                                                                   "append(del, sig)"
                                                                                                                                   "append(del_, sig_)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (prop)
                                                                                                                                      (("1"
                                                                                                                                        (name-replace
                                                                                                                                         "sig2_"
                                                                                                                                         "inst_step(PV, G1, apply_sub(rho, P1), null, null)`3")
                                                                                                                                        (("1"
                                                                                                                                          (name-replace
                                                                                                                                           "sig2"
                                                                                                                                           "inst_step(PV, G1, P1, null, null)`3")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -2
                                                                                                                                             3)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -10
                                                                                                                                               3)
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "disjoint?(dom(del), FV)")
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "disjoint?(dom(del_), FV)")
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      -2
                                                                                                                                                      -3
                                                                                                                                                      3))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "equal_syn?")
                                                                                                                                                      (("1"
                                                                                                                                                        (skolem
                                                                                                                                                         1
                                                                                                                                                         "x")
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -3
                                                                                                                                                             "x")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "subs"
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "subs_append2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "subs_append2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "subs(del_)(null * x) = null * x AND subs(del)(null * x) = null * x")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -2)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "subs"
                                                                                                                                                                               -5)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide
                                                                                                                                                                           2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (use
                                                                                                                                                                             "subs_no_effect_t")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 -2
                                                                                                                                                                                 -3
                                                                                                                                                                                 2)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (hide
                                                                                                                                                                           2
                                                                                                                                                                           -1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (use
                                                                                                                                                                             "subs_no_effect_t")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (hide
                                                                                                                                                                                 -2
                                                                                                                                                                                 2)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (use
                                                                                                                                                     "var_inp_inst_step_disjoint_dom")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (use
                                                                                                                                                   "var_inp_inst_step_disjoint_dom")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (use
                                                                                                                                         "var_inp_inst_step_preservation")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "P1"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "apply_sub_len"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "length"
                                                                                                                                       1
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replace
                                                                                                                             -10
                                                                                                                             1
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (hide-all-but
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (use
                                                                                                                                 "inst_step_sub_append")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (reveal
                                                                                                                       -6)
                                                                                                                      (("2"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          1))
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "G1")
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "del_"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand ("t" "s") 1)
                                            (("2"
                                              (decompose-equality 1)
                                              nil
                                              nil))
                                            nil)
                                           ("3" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((= const-decl "[T, T -> boolean]" equalities nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (skp skolem-const-decl "bool" nominal_AC_variant_inputs nil)
    (fai skolem-const-decl "bool" nominal_AC_variant_inputs nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt
     nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (del_ skolem-const-decl "(cons?[[variable,
        nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]])"
     nominal_AC_variant_inputs nil)
    (G1 skolem-const-decl "fresh_context" nominal_AC_variant_inputs
     nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (* adt-constructor-decl "[[perm, variable] -> (var?)]"
       nominal_AC_term_adt nil)
    (subs_append2 formula-decl nil nominal_AC_substitution nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (intersection const-decl "set" sets nil)
    (empty? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (var_inp_inst_step_disjoint_dom formula-decl nil
     nominal_AC_variant_inputs nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (disjoint? const-decl "bool" sets nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_no_effect_rhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (inst_step3_no_effect_cor formula-decl nil nominal_AC_inst_step
     nil)
    (var_inp_cdr formula-decl nil nominal_AC_variant_inputs nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (inst_step_sub_append formula-decl nil nominal_AC_inst_step nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (apply_sub_len formula-decl nil nominal_AC_unification nil)
    (append def-decl "list[T]" list_props nil)
    (var_inp_inst_step_preservation formula-decl nil
     nominal_AC_variant_inputs nil)
    (inst_step_img formula-decl nil nominal_AC_inst_step nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (del skolem-const-decl "sub" nominal_AC_variant_inputs nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (equal_syn_append2 formula-decl nil nominal_AC_substitution nil)
    (var_inp_equal_syn_unif_prb formula-decl nil
     nominal_AC_variant_inputs nil)
    (append_null formula-decl nil list_props nil)
    (apply_sub const-decl "unif_pair" nominal_AC_unification nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (s skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset? const-decl "bool" sets nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (inst_step def-decl "[fresh_context, unif_prb, sub, bool]"
     nominal_AC_inst_step nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   shostak))
 (var_inp_inst_step_unif_prb 0
  (var_inp_inst_step_unif_prb-1 nil 3896170440
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (skeep)
          (("" (expand "inst_step" 1 1)
            (("" (lift-if)
              (("" (split 1)
                (("1" (flatten)
                  (("1" (expand "apply_sub" 1)
                    (("1" (assert)
                      (("1" (expand "inst_step" 1)
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (name-replace "t" "car(P)`1")
                    (("1" (name-replace "s" "car(P)`2")
                      (("1"
                        (name-replace "G1" "inst_step(PV, G, t, s)`1")
                        (("1"
                          (name-replace "del"
                           "inst_step(PV, G, t, s)`2")
                          (("1"
                            (name-replace "skp"
                             "inst_step(PV, G, t, s)`3")
                            (("1"
                              (name-replace "fai"
                               "inst_step(PV, G, t, s)`4")
                              (("1"
                                (hide -1)
                                (("1"
                                  (case "P = cons((t, s), cdr(P))")
                                  (("1"
                                    (case "subset?(vars(s), FV)")
                                    (("1"
                                      (replace -2 -3)
                                      (("1"
                                        (use "var_inp_no_effect_lhs")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (use
                                             "var_inp_no_effect_rhs")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (reveal
                                                 -4
                                                 -5
                                                 -6
                                                 -7
                                                 -8
                                                 -9)
                                                (("1"
                                                  (split 2)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (expand
                                                       "apply_sub"
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "apply_sub"
                                                         1
                                                         1)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -7)
                                                            (("1"
                                                              (replace
                                                               -8)
                                                              (("1"
                                                                (replace
                                                                 -9)
                                                                (("1"
                                                                  (expand
                                                                   "inst_step"
                                                                   1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split 2)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (expand
                                                           "apply_sub"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "apply_sub"
                                                             1
                                                             1)
                                                            (("1"
                                                              (replace
                                                               -6)
                                                              (("1"
                                                                (replace
                                                                 -7)
                                                                (("1"
                                                                  (replace
                                                                   -8)
                                                                  (("1"
                                                                    (replace
                                                                     -9)
                                                                    (("1"
                                                                      (expand
                                                                       "inst_step"
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "inst_step2_append")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (case
                                                                               "inst_step(PV, G, cdr(P), null, null)`4")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2)
                                                                                  (("1"
                                                                                    (case
                                                                                     "inst_step(PV, G, cdr(P), cons((t, s), null), null)`2 = null")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "inst_step_fail")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "G"
                                                                                             "apply_sub(rho, cdr(P))"
                                                                                             "PV"
                                                                                             "cons((t, s), null)"
                                                                                             "null")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "inst_step4_no_effect_cor")
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "var_inp_cdr")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -13)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "var_inp_inst_step_fail")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (use
                                                                                         "inst_step_fail")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "inst_step4_no_effect_cor")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (name-replace
                                                                                   "delta"
                                                                                   "inst_step(PV, G, cdr(P), null, null)`3")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     -1)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "inst_step2_append")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "G"
                                                                                         "apply_sub(rho, cdr(P))"
                                                                                         "PV"
                                                                                         "cons((t, s), null)")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (name-replace
                                                                                               "delta_"
                                                                                               "inst_step(PV, G, apply_sub(rho, cdr(P)), null, null)`3")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -3
                                                                                                 :hide?
                                                                                                 t)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "apply_sub(delta, cons((t, s), null)) = apply_sub(delta_, cons((t, s), null))")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "inst_step(PV, G, apply_sub(rho, cdr(P)), null, null)`2 = inst_step(PV, G, cdr(P), null, null)`2")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           3)
                                                                                                          (("2"
                                                                                                            (reveal
                                                                                                             -9)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               2
                                                                                                               3
                                                                                                               4)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "cdr(P)")
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "FV"
                                                                                                                     "G"
                                                                                                                     "PV"
                                                                                                                     "V"
                                                                                                                     "V1"
                                                                                                                     "rho"
                                                                                                                     "sig"
                                                                                                                     "sig_")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (use
                                                                                                                         "var_inp_cdr")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "length"
                                                                                                                     1
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       3
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "var_inp_cdr")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -14)
                                                                                                              (("2"
                                                                                                                (use
                                                                                                                 "var_inp_inst_step_sub2")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -3)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -4)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "apply_sub"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "apply_sub"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (decompose-equality
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "equal_syn_t")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      -2
                                                                                                                                      1))
                                                                                                                                    (("1"
                                                                                                                                      (reveal
                                                                                                                                       -10)
                                                                                                                                      (("1"
                                                                                                                                        (hide
                                                                                                                                         -3)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "var_inp_cond?"
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (hide-all-but
                                                                                                                                               (-6
                                                                                                                                                -12
                                                                                                                                                1))
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "equal_syn?")
                                                                                                                                                (("1"
                                                                                                                                                  (skeep)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (use
                                                                                                                                 "equal_syn_t")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      1
                                                                                                                                      -13))
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "equal_syn?")
                                                                                                                                      (("2"
                                                                                                                                        (skeep)
                                                                                                                                        (("2"
                                                                                                                                          (grind)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -2
                                                                                               -3
                                                                                               2)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "var_inp_cdr")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "var_inp_inst_step_fail")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "apply_sub"
                                                           2
                                                           2)
                                                          (("2"
                                                            (rewrite
                                                             "inst_step2_no_effect_cor")
                                                            (("2"
                                                              (name-replace
                                                               "P1"
                                                               "apply_sub(del, cdr(P))")
                                                              (("2"
                                                                (reveal
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "apply_sub"
                                                                   2)
                                                                  (("2"
                                                                    (expand
                                                                     "apply_sub"
                                                                     2
                                                                     1)
                                                                    (("2"
                                                                      (replace
                                                                       -6)
                                                                      (("2"
                                                                        (replace
                                                                         -7)
                                                                        (("2"
                                                                          (replace
                                                                           -8)
                                                                          (("2"
                                                                            (replace
                                                                             -9)
                                                                            (("2"
                                                                              (expand
                                                                               "inst_step"
                                                                               2
                                                                               2)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "apply_sub"
                                                                                       2
                                                                                       3)
                                                                                      (("2"
                                                                                        (case
                                                                                         " inst_step(PV, G1, apply_sub(del, apply_sub(rho, cdr(P))), null, append(del, null))`2 = inst_step(PV, G1, apply_sub(del, apply_sub(rho, cdr(P))), null, null)`2")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (use
                                                                                               "var_inp_equal_syn_unif_prb")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -7)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -8)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (reveal
                                                                                                                 -7)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "P1")
                                                                                                                  (("1"
                                                                                                                    (prop)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "FV"
                                                                                                                       "G1"
                                                                                                                       "PV"
                                                                                                                       "V"
                                                                                                                       "V1"
                                                                                                                       "rho"
                                                                                                                       "append(del, sig)"
                                                                                                                       "append(del, sig_)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "var_inp_inst_step_preservation")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "P1"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "apply_sub_len")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "length"
                                                                                                                           1
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           3)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "inst_step2_no_effect_cor")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replace -1 -2)
                                      (("2"
                                        (use "var_inp_inst_step_aux")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (reveal -3 -4)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (rewrite
                                                 "inst_step2_no_effect_cor")
                                                (("2"
                                                  (expand
                                                   "apply_sub"
                                                   5
                                                   2)
                                                  (("2"
                                                    (reveal -5 -7 -8)
                                                    (("2"
                                                      (name-replace
                                                       "P1"
                                                       "apply_sub(del, cdr(P))")
                                                      (("2"
                                                        (reveal -1)
                                                        (("2"
                                                          (expand
                                                           "apply_sub"
                                                           5)
                                                          (("2"
                                                            (expand
                                                             "apply_sub"
                                                             5
                                                             1)
                                                            (("2"
                                                              (replace
                                                               -3)
                                                              (("2"
                                                                (replace
                                                                 -4)
                                                                (("2"
                                                                  (use
                                                                   "var_inp_inst_step_aux_ren")
                                                                  (("2"
                                                                    (expand
                                                                     "inst_step"
                                                                     5
                                                                     2)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (name-replace
                                                                         "del_"
                                                                         "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`2")
                                                                        (("2"
                                                                          (hide
                                                                           -1
                                                                           -6)
                                                                          (("2"
                                                                            (expand
                                                                             "apply_sub"
                                                                             5
                                                                             3)
                                                                            (("2"
                                                                              (case
                                                                               "inst_step(PV, G, subs(rho)(t), subs(rho)(s))`1 = G1")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "inst_step(PV, G1, apply_sub(del_, apply_sub(rho, cdr(P))), null, append(del_, null))`2 = inst_step(PV, G1, apply_sub(del_, apply_sub(rho, cdr(P))), null, null)`2")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (use
                                                                                         "var_inp_equal_syn_unif_prb")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (reveal
                                                                                             -5)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -5)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (reveal
                                                                                                       -9)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "P1")
                                                                                                        (("1"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "FV"
                                                                                                             "G1"
                                                                                                             "PV"
                                                                                                             "V"
                                                                                                             "V1"
                                                                                                             "rho"
                                                                                                             "append(del, sig)"
                                                                                                             "append(del_, sig_)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "var_inp_inst_step_preservation")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "P1"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "apply_sub_len"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "length"
                                                                                                                 1
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (rewrite
                                                                                     "inst_step2_no_effect_cor")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (reveal
                                                                                 -1
                                                                                 -2)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -2
                                                                                    1))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "G1"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 3)
                                    (("2"
                                      (expand ("t" "s") 1)
                                      (("2"
                                        (decompose-equality 1)
                                        nil
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (var_inp_inst_step_aux_ren formula-decl nil
     nominal_AC_variant_inputs nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (G1 skolem-const-decl "fresh_context" nominal_AC_variant_inputs
     nil)
    (var_inp_inst_step_aux formula-decl nil nominal_AC_variant_inputs
     nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (apply_sub const-decl "unif_pair" nominal_AC_unification nil)
    (inst_step2_append formula-decl nil nominal_AC_inst_step nil)
    (inst_step_fail formula-decl nil nominal_AC_inst_step nil)
    (var_inp_cdr formula-decl nil nominal_AC_variant_inputs nil)
    (var_inp_inst_step_fail formula-decl nil nominal_AC_variant_inputs
     nil)
    (inst_step4_no_effect_cor formula-decl nil nominal_AC_inst_step
     nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (equal_syn_t formula-decl nil nominal_AC_substitution nil)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (var_inp_inst_step_sub2 formula-decl nil nominal_AC_variant_inputs
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (var_inp_equal_syn_unif_prb formula-decl nil
     nominal_AC_variant_inputs nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (apply_sub_len formula-decl nil nominal_AC_unification nil)
    (var_inp_inst_step_preservation formula-decl nil
     nominal_AC_variant_inputs nil)
    (inst_step2_no_effect_cor formula-decl nil nominal_AC_inst_step
     nil)
    (append def-decl "list[T]" list_props nil)
    (var_inp_no_effect_rhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_no_effect_lhs formula-decl nil nominal_AC_variant_inputs
     nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (subset? const-decl "bool" sets nil)
    (s skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (inst_step const-decl "[fresh_context, sub, bool, bool]"
     nominal_AC_inst_step nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (inst_step def-decl "[fresh_context, unif_prb, sub, bool]"
     nominal_AC_inst_step nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   shostak))
 (var_inp_inst_step 0
  (var_inp_inst_step-1 nil 3900750133
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (prop)
          (("1" (lemma "var_inp_inst_step_ctx")
            (("1"
              (inst -1 "FV" "G" "P" "PV" "V" "V1" "rho" "sig" "sig_")
              (("1" (assert) (("1" (assert) nil nil)) nil)) nil))
            nil)
           ("2" (use "var_inp_inst_step_unif_prb")
            (("2" (assert) (("2" (assert) nil nil)) nil)) nil)
           ("3" (use "var_inp_inst_step_fail")
            (("3" (assert) (("3" (assert) nil nil)) nil)) nil)
           ("4" (use "var_inp_inst_step_sub")
            (("4" (assert)
              (("4" (assert)
                (("4" (hide -2) (("4" (grind) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (var_inp_inst_step_ctx formula-decl nil nominal_AC_variant_inputs
     nil)
    (var_inp_inst_step_unif_prb formula-decl nil
     nominal_AC_variant_inputs nil)
    (var_inp_inst_step_fail formula-decl nil nominal_AC_variant_inputs
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (member const-decl "bool" sets nil)
    (var_inp_inst_step_sub formula-decl nil nominal_AC_variant_inputs
     nil))
   shostak))
 (var_inp_ac_TCC1 0
  (var_inp_ac_TCC1-1 nil 3896855057
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (use "choose_eq_nice_input2")
          (("" (assert) (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((choose_eq_nice_input2 formula-decl nil nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (var_inp_ac subtype
    "(nominal_AC_variant_inputs.G, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_variant_inputs.t, nominal_AC_variant_inputs.s), nominal_AC_variant_inputs.P1), nominal_AC_variant_inputs.sigma_, nominal_AC_variant_inputs.V_, nominal_AC_variant_inputs.PV)"
    "nice_input")))
 (var_inp_ac_TCC2 0
  (var_inp_ac_TCC2-1 nil 3896855057
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          ((""
            (case "input_`1 = input`1 AND input_`2 = input`2 AND input_`5 = input`5")
            (("1" (flatten)
              (("1" (replace -1)
                (("1" (replace -2)
                  (("1" (replace -3)
                    (("1" (lemma "choose_eq_nice_input2")
                      (("1" (inst -1 "input")
                        (("1" (assert) (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "var_inputs?")
              (("2" (flatten) (("2" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (choose_eq_nice_input2 formula-decl nil nominal_AC_ac_step nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil))
   nil
   (var_inp_ac subtype
    "(nominal_AC_variant_inputs.G, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_variant_inputs.t, nominal_AC_variant_inputs.s), nominal_AC_variant_inputs.P1), nominal_AC_variant_inputs.input`3, nominal_AC_variant_inputs.input`4, nominal_AC_variant_inputs.PV)"
    "nice_input")))
 (var_inp_ac 0
  (var_inp_ac-2 nil 3896992224
   ("" (skolem 1 ("FV" "inp" "inp1_" "inp_"))
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "G" "inp_`1")
          (("" (name-replace "P" "inp_`2")
            (("" (name-replace "sig_" "inp_`3")
              (("" (name-replace "V_" "inp_`4")
                (("" (name-replace "PV" "inp_`5")
                  (("" (name-replace "up" "choose_eq(P)`1")
                    (("" (name-replace "P1" "choose_eq(P)`2")
                      (("" (name-replace "t" "up`1")
                        (("" (name-replace "s" "up`2")
                          (("" (expand "apply_ac" -3)
                            (("" (lift-if)
                              ((""
                                (split -3)
                                (("1" (flatten) nil nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (split -2)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "member" -2)
                                        (("1"
                                          (expand "member" -2)
                                          (("1"
                                            (inst
                                             2
                                             "(G, P1, inp`3, inp`4, PV)")
                                            (("1"
                                              (prop)
                                              (("1"
                                                (expand "apply_ac" 1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "member" 1)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (replace -2 1)
                                                (("2"
                                                  (expand
                                                   "var_inputs?")
                                                  (("2"
                                                    (reveal
                                                     -1
                                                     -2
                                                     -3
                                                     -4
                                                     -5
                                                     -6
                                                     -7
                                                     -8
                                                     -9)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace -15)
                                                          (("2"
                                                            (replace
                                                             -8)
                                                            (("2"
                                                              (hide-all-but
                                                               (-3
                                                                -21
                                                                1
                                                                2))
                                                              (("2"
                                                                (use
                                                                 "choose_eq_vars")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (prop)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (hide
                                                                         -2)
                                                                        (("2"
                                                                          (expand
                                                                           "subset?")
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (lemma
                                               "choose_eq_nice_input")
                                              (("2"
                                                (inst
                                                 -1
                                                 "inp`1"
                                                 "inp`2"
                                                 "inp`5"
                                                 "inp`4"
                                                 "inp`3")
                                                (("2"
                                                  (expand
                                                   "var_inputs?"
                                                   -6)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (reveal
                                                         -6
                                                         -7
                                                         -8
                                                         -9
                                                         -10)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "P1")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (typepred
                                                                   "inp")
                                                                  (("2"
                                                                    (case
                                                                     "inp = (inp`1, inp`2, inp`3, inp`4, inp`5)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -1
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (decompose-equality
                                                                       1)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (name-replace
                                         "lst_V_"
                                         "finset2list[variable](V_)")
                                        (("2"
                                          (name-replace
                                           "ac_results_"
                                           "first_proj(solve_ac(G, s, t, lst_V_, ac_sym(t), PV))")
                                          (("2"
                                            (name-replace
                                             "new_V_"
                                             "vars(sec_proj(solve_ac(G, s, t, lst_V_, ac_sym(t), PV)))")
                                            (("2"
                                              (use
                                               "input_apply_ac_mem")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skolem
                                                   -1
                                                   ("G1_ "
                                                    "PI_"
                                                    "sig1_"))
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (use
                                                       "inst_step_mem")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skolem
                                                           -1
                                                           "PC_")
                                                          (("2"
                                                            (hide
                                                             -3
                                                             -4
                                                             -5
                                                             -6
                                                             -7)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "ac_results_"
                                                                 -1)
                                                                (("2"
                                                                  (rewrite
                                                                   "first_proj_mem"
                                                                   -1)
                                                                  (("2"
                                                                    (skolem
                                                                     -1
                                                                     "ac_sol_")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (lemma
                                                                         "solve_ac_ren")
                                                                        (("2"
                                                                          (reveal
                                                                           -10)
                                                                          (("2"
                                                                            (hide
                                                                             -9)
                                                                            (("2"
                                                                              (name-replace
                                                                               "lst_V"
                                                                               "finset2list[variable](inp`4)")
                                                                              (("2"
                                                                                (inst
                                                                                 -3
                                                                                 "G"
                                                                                 "PV"
                                                                                 "ac_sol_"
                                                                                 "ac_sym(t)"
                                                                                 "lst_V"
                                                                                 "lst_V_"
                                                                                 "s"
                                                                                 "t")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       -3)
                                                                                      (("1"
                                                                                        (skolem
                                                                                         -1
                                                                                         ("rho"
                                                                                          "ac_sol"))
                                                                                        (("1"
                                                                                          (name-replace
                                                                                           "PC"
                                                                                           "ac_sol`1")
                                                                                          (("1"
                                                                                            (name-replace
                                                                                             "lst_V1"
                                                                                             "ac_sol`2")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -7
                                                                                                   :dir
                                                                                                   rl
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "G1"
                                                                                                     "inst_step(PV, G, PC, null, null)`1")
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "PI"
                                                                                                       "inst_step(PV, G, PC, null, null)`2")
                                                                                                      (("1"
                                                                                                        (name-replace
                                                                                                         "sig1"
                                                                                                         "inst_step(PV, G, PC, null, null)`3")
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -14
                                                                                                           -15
                                                                                                           2
                                                                                                           -5)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -5)
                                                                                                            (("1"
                                                                                                              (name-replace
                                                                                                               "V"
                                                                                                               "inp`4")
                                                                                                              (("1"
                                                                                                                (reveal
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (name-replace
                                                                                                                   "new_V"
                                                                                                                   "vars(sec_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV)))")
                                                                                                                  (("1"
                                                                                                                    (name-replace
                                                                                                                     "sig"
                                                                                                                     "inp`3")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "var_inp_cond?(G, PC, sig, V, PV, sig_, FV, rho, lst_V1)")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "member((G1, append(PI, apply_sub(sig1, P1)), append(sig1, sig), new_V, PV),
             apply_ac(G, cons((t, s), P1), sig, V, PV))")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           3
                                                                                                                           "(G1, append(PI, apply_sub(sig1, P1)), append(sig1, sig), new_V, PV)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -15
                                                                                                                                 -14
                                                                                                                                 1
                                                                                                                                 -3)
                                                                                                                                (("1"
                                                                                                                                  (use
                                                                                                                                   "var_inp_inst_step")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -7
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -11
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -12
                                                                                                                                           :dir
                                                                                                                                           rl)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -13
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -4)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -5)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -6)
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (reveal
                                                                                                                                                       -16
                                                                                                                                                       -17
                                                                                                                                                       -18
                                                                                                                                                       -19
                                                                                                                                                       -20)
                                                                                                                                                      (("1"
                                                                                                                                                        (hide
                                                                                                                                                         -9)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "var_inputs?"
                                                                                                                                                           3)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -3)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -10
                                                                                                                                                                   -11
                                                                                                                                                                   -12
                                                                                                                                                                   -17
                                                                                                                                                                   -18
                                                                                                                                                                   -19)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1
                                                                                                                                                                     -2
                                                                                                                                                                     -3
                                                                                                                                                                     -4
                                                                                                                                                                     -5)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       3)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "apply_sub(sig1, P1) = apply_sub(sig1_, P1)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "apply_sub_eq")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   "equal_syn_subset")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "FV"
                                                                                                                                                                                     "vars(P1)"
                                                                                                                                                                                     "sig1"
                                                                                                                                                                                     "sig1_")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (split
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (reveal
                                                                                                                                                                                           -9)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "var_inp_inst_step_sub2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (reveal
                                                                                                                                                                                                 -4
                                                                                                                                                                                                 -9)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -9
                                                                                                                                                                                                     :dir
                                                                                                                                                                                                     rl)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -2
                                                                                                                                                                                                       :dir
                                                                                                                                                                                                       rl)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                         (-3
                                                                                                                                                                                                          1))
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "equal_syn?")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (skeep)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "subset?(vars(P), FV)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "subset?(vars(P1), vars(P))")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                               (-1
                                                                                                                                                                                                -2
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "subset?")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (skeep)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "P1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "choose_eq_vars")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (reveal
                                                                                                                                                                                             -12)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                               (-1
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 ("var_inputs?"
                                                                                                                                                                                                  "P"
                                                                                                                                                                                                  "FV"))
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-3
                                                                                                                                                                          1))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "equal_syn?")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skeep)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (reveal
                                                                                                                                                                         -10
                                                                                                                                                                         -13)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-1
                                                                                                                                                                            -2
                                                                                                                                                                            -6
                                                                                                                                                                            1))
                                                                                                                                                                          (("3"
                                                                                                                                                                            (expand
                                                                                                                                                                             "var_inputs?")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -11)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-5
                                                                                                                                                                                    -12
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "solve_ac_sec_proj_vars")
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (split
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -3)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "subset?")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst?)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "lst_V"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       "mem_list2set"
                                                                                                                                                                                                       :dir
                                                                                                                                                                                                       rl)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "finset2list_mem")
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (reveal
                                                                                                                                                                                         -31)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "member"
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("4"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (1
                                                                                                                                                                          -8))
                                                                                                                                                                        (("4"
                                                                                                                                                                          (reveal
                                                                                                                                                                           -44)
                                                                                                                                                                          (("4"
                                                                                                                                                                            (use
                                                                                                                                                                             "solve_ac_sec_proj_vars")
                                                                                                                                                                            (("4"
                                                                                                                                                                              (reveal
                                                                                                                                                                               -33)
                                                                                                                                                                              (("4"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "new_V_")
                                                                                                                                                                                (("4"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("4"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1
                                                                                                                                                                                     :dir
                                                                                                                                                                                     rl)
                                                                                                                                                                                    (("4"
                                                                                                                                                                                      (split
                                                                                                                                                                                       -2)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (reveal
                                                                                                                                                                                         -17)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "var_inputs?")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                               (-11
                                                                                                                                                                                                -6
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "subset?")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (skeep)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "lst_V_"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "V_"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                               "mem_list2set"
                                                                                                                                                                                                               :dir
                                                                                                                                                                                                               rl)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                 "finset2list_mem")
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "member"
                                                                                                                                                                                         -4)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("5"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-4
                                                                                                                                                                          1))
                                                                                                                                                                        (("5"
                                                                                                                                                                          (reveal
                                                                                                                                                                           -32
                                                                                                                                                                           -36)
                                                                                                                                                                          (("5"
                                                                                                                                                                            (reveal
                                                                                                                                                                             -16)
                                                                                                                                                                            (("5"
                                                                                                                                                                              (expand
                                                                                                                                                                               "var_inputs?")
                                                                                                                                                                              (("5"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("5"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-7
                                                                                                                                                                                    -11
                                                                                                                                                                                    -12
                                                                                                                                                                                    -13
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("5"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "solve_ac_sec_proj_vars_select_gt2")
                                                                                                                                                                                    (("5"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "G"
                                                                                                                                                                                       "PV"
                                                                                                                                                                                       "ac_sym(t)"
                                                                                                                                                                                       "lst_V"
                                                                                                                                                                                       "lst_V_"
                                                                                                                                                                                       "s"
                                                                                                                                                                                       "t")
                                                                                                                                                                                      (("5"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("5"
                                                                                                                                                                                          (reveal
                                                                                                                                                                                           -15
                                                                                                                                                                                           -48)
                                                                                                                                                                                          (("5"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("5"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               ("V"
                                                                                                                                                                                                "V_"))
                                                                                                                                                                                              (("5"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "select_greater"
                                                                                                                                                                                                 -3)
                                                                                                                                                                                                (("5"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("6"
                                                                                                                                                                        (reveal
                                                                                                                                                                         -11)
                                                                                                                                                                        (("6"
                                                                                                                                                                          (use
                                                                                                                                                                           "apply_ac_vars")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "subset?(vars(cons((t, s), P1)), vars(P))")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (case
                                                                                                                                                                                 "subset?(vars(P), FV)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-1
                                                                                                                                                                                    -2
                                                                                                                                                                                    -3
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "subset?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (reveal
                                                                                                                                                                                   -11)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                     (-1
                                                                                                                                                                                      1))
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "var_inputs?")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "P"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   ("t"
                                                                                                                                                                                    "s"
                                                                                                                                                                                    "P1"))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "up"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "choose_eq_vars")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "subset?")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst?)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "vars"
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       ("member"
                                                                                                                                                                                                        "union"))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (use
                                                                                                                                                                             "apply_ac_is_nice_input")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("7"
                                                                                                                                                                        (reveal
                                                                                                                                                                         -11)
                                                                                                                                                                        (("7"
                                                                                                                                                                          (use
                                                                                                                                                                           "apply_ac_vars_ctx")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "subset?(union(vars(cons((t, s), P1)), vars(G)), union(vars(P), vars(G)))")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (case
                                                                                                                                                                                 "subset?(union(vars(P), vars(G)), FV)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-1
                                                                                                                                                                                    -2
                                                                                                                                                                                    -3
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "subset?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (reveal
                                                                                                                                                                                   -11)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                     (-1
                                                                                                                                                                                      1))
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       ("var_inputs?"
                                                                                                                                                                                        "P"
                                                                                                                                                                                        "G"))
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -2
                                                                                                                                                                                             :dir
                                                                                                                                                                                             rl)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1
                                                                                                                                                                                               :dir
                                                                                                                                                                                               rl)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 (-8
                                                                                                                                                                                                  -9
                                                                                                                                                                                                  1))
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "subset?")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (skeep)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             ("member"
                                                                                                                                                                                                              "union")
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (case
                                                                                                                                                                                 "subset?(vars(cons((t, s), P1)), vars(P))")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-1
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "subset?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             ("member"
                                                                                                                                                                                              "union")
                                                                                                                                                                                             (-2
                                                                                                                                                                                              1))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     ("t"
                                                                                                                                                                                      "s"
                                                                                                                                                                                      "P1"
                                                                                                                                                                                      "up"))
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "up")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "choose_eq_vars")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "subset?")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (skeep)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "vars"
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         ("member"
                                                                                                                                                                                                          "union")
                                                                                                                                                                                                         -1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (use
                                                                                                                                                                             "apply_ac_is_nice_input")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("8"
                                                                                                                                                                        (reveal
                                                                                                                                                                         -10)
                                                                                                                                                                        (("8"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-1
                                                                                                                                                                            1))
                                                                                                                                                                          (("8"
                                                                                                                                                                            (expand
                                                                                                                                                                             ("var_inputs?"
                                                                                                                                                                              "PV"
                                                                                                                                                                              "FV"))
                                                                                                                                                                            (("8"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("8"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              1))
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "apply_ac_is_nice_input")
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           4)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "apply_ac"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -8)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -10
                                                                                                                                   -11
                                                                                                                                   -12
                                                                                                                                   -13
                                                                                                                                   -14)
                                                                                                                                  (("2"
                                                                                                                                    (reveal
                                                                                                                                     -9)
                                                                                                                                    (("2"
                                                                                                                                      (name-replace
                                                                                                                                       "ac_results"
                                                                                                                                       "first_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV))")
                                                                                                                                      (("2"
                                                                                                                                        (name-replace
                                                                                                                                         "ac_results_subs"
                                                                                                                                         "inst_step(PV, G, ac_results)")
                                                                                                                                        (("2"
                                                                                                                                          (reveal
                                                                                                                                           -1
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (rewrite
                                                                                                                                             "input_apply_ac_mem")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "G1"
                                                                                                                                               "PI"
                                                                                                                                               "sig1")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "ac_results_subs")
                                                                                                                                                (("2"
                                                                                                                                                  (use
                                                                                                                                                   "inst_step_mem2")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "PC")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "ac_results"
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "first_proj_mem")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "ac_sol")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "PC")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             (-1
                                                                                                                                                              -5
                                                                                                                                                              2))
                                                                                                                                                            (("2"
                                                                                                                                                              (use
                                                                                                                                                               "var_inp_inst_step_fail")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (hide-all-but
                                                                                                                           (-15
                                                                                                                            1))
                                                                                                                          (("3"
                                                                                                                            (expand
                                                                                                                             ("G"
                                                                                                                              "t"
                                                                                                                              "s"
                                                                                                                              "P1"
                                                                                                                              "sig"
                                                                                                                              "V"
                                                                                                                              "PV"))
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "up"
                                                                                                                               1)
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "var_inputs?")
                                                                                                                                (("3"
                                                                                                                                  (flatten)
                                                                                                                                  (("3"
                                                                                                                                    (replace
                                                                                                                                     -1
                                                                                                                                     :dir
                                                                                                                                     rl)
                                                                                                                                    (("3"
                                                                                                                                      (replace
                                                                                                                                       -3
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("3"
                                                                                                                                        (expand
                                                                                                                                         "P"
                                                                                                                                         1)
                                                                                                                                        (("3"
                                                                                                                                          (replace
                                                                                                                                           -2
                                                                                                                                           :dir
                                                                                                                                           rl)
                                                                                                                                          (("3"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("3"
                                                                                                                                              (reveal
                                                                                                                                               2)
                                                                                                                                              (("3"
                                                                                                                                                (use
                                                                                                                                                 "choose_eq_nice_input2")
                                                                                                                                                (("3"
                                                                                                                                                  (assert)
                                                                                                                                                  (("3"
                                                                                                                                                    (expand
                                                                                                                                                     "P")
                                                                                                                                                    (("3"
                                                                                                                                                      (assert)
                                                                                                                                                      (("3"
                                                                                                                                                        (reveal
                                                                                                                                                         -3)
                                                                                                                                                        (("3"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide
                                                                                                                         4)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -3
                                                                                                                           -4
                                                                                                                           -5
                                                                                                                           -10
                                                                                                                           -11
                                                                                                                           -12
                                                                                                                           2
                                                                                                                           -9
                                                                                                                           -6)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "var_inp_cond?"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (split)
                                                                                                                                (("1"
                                                                                                                                  (reveal
                                                                                                                                   -12)
                                                                                                                                  (("1"
                                                                                                                                    (use
                                                                                                                                     "solve_ac_match_condition")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "first_proj_mem"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             1
                                                                                                                                             "ac_sol")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "PC")
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "inp_")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               ("nice_input?"
                                                                                                                                                "s"
                                                                                                                                                "PV"))
                                                                                                                                              (("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "up"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "P"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (use
                                                                                                                                                       "choose_eq_vars_rhs2")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("3"
                                                                                                                                          (case
                                                                                                                                           "subset?(vars(t, s), vars(P))")
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "subset?(vars(P), list2set[variable](lst_V))")
                                                                                                                                            (("1"
                                                                                                                                              (hide-all-but
                                                                                                                                               (-1
                                                                                                                                                -2
                                                                                                                                                1))
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "subset?")
                                                                                                                                                (("1"
                                                                                                                                                  (skeep)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide-all-but
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 ("P"
                                                                                                                                                  "lst_V"))
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "inp_`2 = inp`2")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "inp")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "nice_input?")
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             (-4
                                                                                                                                                              1))
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "subset?")
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (rewrite
                                                                                                                                                                       "mem_list2set"
                                                                                                                                                                       :dir
                                                                                                                                                                       rl)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "finset2list_mem")
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (reveal
                                                                                                                                                     -5)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "var_inputs?")
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               ("t"
                                                                                                                                                "s"))
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "up"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (use
                                                                                                                                                   "choose_eq_vars")
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (case
                                                                                                                                                       "choose_eq(P)`1 = (choose_eq(P)`1`1, choose_eq(P)`1`2)")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (decompose-equality
                                                                                                                                                         1)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "var_inputs?"
                                                                                                                                   -6)
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       ("PV"
                                                                                                                                        "FV"))
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (expand
                                                                                                                                   "var_inputs?")
                                                                                                                                  (("3"
                                                                                                                                    (flatten)
                                                                                                                                    (("3"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("4"
                                                                                                                                  (expand
                                                                                                                                   "var_inputs?"
                                                                                                                                   -6)
                                                                                                                                  (("4"
                                                                                                                                    (flatten)
                                                                                                                                    (("4"
                                                                                                                                      (expand
                                                                                                                                       "G"
                                                                                                                                       1)
                                                                                                                                      (("4"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("5"
                                                                                                                                  (reveal
                                                                                                                                   -11)
                                                                                                                                  (("5"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      1))
                                                                                                                                    (("5"
                                                                                                                                      (expand
                                                                                                                                       "lst_V"
                                                                                                                                       -1)
                                                                                                                                      (("5"
                                                                                                                                        (expand
                                                                                                                                         "disjoint?")
                                                                                                                                        (("5"
                                                                                                                                          (expand
                                                                                                                                           "empty?")
                                                                                                                                          (("5"
                                                                                                                                            (skeep)
                                                                                                                                            (("5"
                                                                                                                                              (inst?)
                                                                                                                                              (("5"
                                                                                                                                                (expand
                                                                                                                                                 ("member"
                                                                                                                                                  "intersection"))
                                                                                                                                                (("5"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("5"
                                                                                                                                                    (assert)
                                                                                                                                                    (("5"
                                                                                                                                                      (rewrite
                                                                                                                                                       "mem_list2set"
                                                                                                                                                       :dir
                                                                                                                                                       rl)
                                                                                                                                                      (("5"
                                                                                                                                                        (rewrite
                                                                                                                                                         "finset2list_mem")
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("6"
                                                                                                                                  (case
                                                                                                                                   "subset?(vars(lhs(PC)), vars(P))")
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "subset?(vars(P), FV)")
                                                                                                                                    (("1"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        1))
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "subset?")
                                                                                                                                        (("1"
                                                                                                                                          (skeep)
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (inst?)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (expand
                                                                                                                                       "var_inputs?")
                                                                                                                                      (("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-8
                                                                                                                                            -14
                                                                                                                                            1))
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "P")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (case
                                                                                                                                     "subset?(vars(lhs(PC)), vars(t, s))")
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "subset?(vars(t, s), vars(P))")
                                                                                                                                      (("1"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-1
                                                                                                                                          -2
                                                                                                                                          1))
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "subset?")
                                                                                                                                          (("1"
                                                                                                                                            (skeep)
                                                                                                                                            (("1"
                                                                                                                                              (inst?)
                                                                                                                                              (("1"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (use
                                                                                                                                           "choose_eq_vars")
                                                                                                                                          (("2"
                                                                                                                                            (flatten)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "(t, s) = choose_eq(P)`1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (expand
                                                                                                                                                 ("t"
                                                                                                                                                  "s"))
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "up")
                                                                                                                                                  (("2"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     1)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (reveal
                                                                                                                                       -12)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "lst_V"
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (use
                                                                                                                                           "solve_ac_vars_lhs")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "first_proj_mem")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 1
                                                                                                                                                 "ac_sol")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "PC"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("7"
                                                                                                                                  (expand
                                                                                                                                   "var_inputs?"
                                                                                                                                   -6)
                                                                                                                                  (("7"
                                                                                                                                    (flatten)
                                                                                                                                    (("7"
                                                                                                                                      (assert)
                                                                                                                                      (("7"
                                                                                                                                        (expand
                                                                                                                                         ("sig_"
                                                                                                                                          "sig"))
                                                                                                                                        (("7"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("8"
                                                                                                                                  (assert)
                                                                                                                                  (("8"
                                                                                                                                    (reveal
                                                                                                                                     -12)
                                                                                                                                    (("8"
                                                                                                                                      (expand
                                                                                                                                       "lst_V"
                                                                                                                                       -1)
                                                                                                                                      (("8"
                                                                                                                                        (use
                                                                                                                                         "solve_ac_vars_subset")
                                                                                                                                        (("8"
                                                                                                                                          (assert)
                                                                                                                                          (("8"
                                                                                                                                            (expand
                                                                                                                                             ("PC"
                                                                                                                                              "lst_V1")
                                                                                                                                             1)
                                                                                                                                            (("8"
                                                                                                                                              (assert)
                                                                                                                                              (("8"
                                                                                                                                                (case
                                                                                                                                                 "subset?(vars(t, s), vars(P))")
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "subset?(vars(P), inp`4)")
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      -2
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "subset?")
                                                                                                                                                      (("1"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (expand
                                                                                                                                                     "var_inputs?"
                                                                                                                                                     -8)
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         (-9
                                                                                                                                                          1))
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "P")
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -1
                                                                                                                                                             :dir
                                                                                                                                                             rl)
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "inp")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "nice_input?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (hide-all-but
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (use
                                                                                                                                                     "choose_eq_vars")
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (case
                                                                                                                                                         "(t, s) = choose_eq(P)`1")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (expand
                                                                                                                                                           ("t"
                                                                                                                                                            "s"))
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "up")
                                                                                                                                                            (("2"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               1)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("9"
                                                                                                                                  (reveal
                                                                                                                                   -15)
                                                                                                                                  (("9"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      1))
                                                                                                                                    (("9"
                                                                                                                                      (skolem
                                                                                                                                       1
                                                                                                                                       "x")
                                                                                                                                      (("9"
                                                                                                                                        (inst?)
                                                                                                                                        (("9"
                                                                                                                                          (flatten)
                                                                                                                                          (("9"
                                                                                                                                            (assert)
                                                                                                                                            (("9"
                                                                                                                                              (rewrite
                                                                                                                                               "mem_list2set"
                                                                                                                                               :dir
                                                                                                                                               rl)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("10"
                                                                                                                                  (reveal
                                                                                                                                   -12)
                                                                                                                                  (("10"
                                                                                                                                    (expand
                                                                                                                                     "lst_V"
                                                                                                                                     -1)
                                                                                                                                    (("10"
                                                                                                                                      (use
                                                                                                                                       "solve_ac_vars3")
                                                                                                                                      (("10"
                                                                                                                                        (expand
                                                                                                                                         ("V"
                                                                                                                                          "lst_V1"))
                                                                                                                                        (("10"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("11"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("11"
                                                                                                                                    (typepred
                                                                                                                                     "inp")
                                                                                                                                    (("11"
                                                                                                                                      (expand
                                                                                                                                       "sig"
                                                                                                                                       1)
                                                                                                                                      (("11"
                                                                                                                                        (expand
                                                                                                                                         "V")
                                                                                                                                        (("11"
                                                                                                                                          (expand
                                                                                                                                           "nice_input?")
                                                                                                                                          (("11"
                                                                                                                                            (flatten)
                                                                                                                                            (("11"
                                                                                                                                              (hide-all-but
                                                                                                                                               (-3
                                                                                                                                                1))
                                                                                                                                              (("11"
                                                                                                                                                (expand
                                                                                                                                                 "contained?"
                                                                                                                                                 -1)
                                                                                                                                                (("11"
                                                                                                                                                  (flatten)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (use
                                                                                                                         "lst2set_is_finite[variable]")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-11
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "var_inputs?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               ("lst_V"
                                                                                                "lst_V_"))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "select_greater"
                                                                                                   -7)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "V_"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          1))
                                                                                        (("3"
                                                                                          (reveal
                                                                                           -21
                                                                                           -22)
                                                                                          (("3"
                                                                                            (typepred
                                                                                             "inp")
                                                                                            (("3"
                                                                                              (expand
                                                                                               "up")
                                                                                              (("3"
                                                                                                (case
                                                                                                 "subset?(vars(P), list2set[variable](lst_V))")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "subset?(vars(t, s), vars(P))")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -2
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "subset?")
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     -1
                                                                                                     -2
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (use
                                                                                                       "choose_eq_vars")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "(t, s) = choose_eq(P)`1")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (decompose-equality
                                                                                                             1)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   -2
                                                                                                   -3
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "nice_input?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "P")
                                                                                                        (("2"
                                                                                                          (reveal
                                                                                                           -10)
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              -5
                                                                                                              -11
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "var_inputs?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-11
                                                                                                                    -2
                                                                                                                    -12
                                                                                                                    1))
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "subset?")
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "mem_list2set"
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -4
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "finset2list_mem")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]"
     nominal_AC_term_adt nil)
    (ac_app? adt-recognizer-decl "[nominal_AC_term -> boolean]"
     nominal_AC_term_adt nil)
    (solve_ac const-decl "list[ac_sol]" aux_nominal_AC_unification nil)
    (ac_sol type-eq-decl nil aux_nominal_AC_unification nil)
    (string type-eq-decl nil strings nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (input_apply_ac_mem formula-decl nil nominal_AC_ac_step nil)
    (inst_step def-decl "list[[fresh_context, unif_prb, sub]]"
     nominal_AC_inst_step nil)
    (pre_nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (inst_step_mem formula-decl nil nominal_AC_inst_step nil)
    (first_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (renaming? const-decl "bool" nominal_AC_substitution nil)
    (renaming type-eq-decl nil nominal_AC_substitution nil)
    (var_inp_cond? const-decl "bool" nominal_AC_variant_inputs nil)
    (list2set def-decl "set[T]" list2set nil)
    (choose_eq_nice_input2 formula-decl nil nominal_AC_ac_step nil)
    (inst_step_mem2 formula-decl nil nominal_AC_inst_step nil)
    (PC skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (ac_results skolem-const-decl "list[unif_prb]"
     nominal_AC_variant_inputs nil)
    (var_inp_inst_step_fail formula-decl nil nominal_AC_variant_inputs
     nil)
    (ac_results_subs skolem-const-decl
     "list[[fresh_context, unif_prb, sub]]" nominal_AC_variant_inputs
     nil)
    (G1 skolem-const-decl "fresh_context" nominal_AC_variant_inputs
     nil)
    (PI skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (sig1 skolem-const-decl "sub" nominal_AC_variant_inputs nil)
    (sig skolem-const-decl "sub" nominal_AC_variant_inputs nil)
    (new_V skolem-const-decl "finite_set[variable]"
     nominal_AC_variant_inputs nil)
    (var_inp_inst_step formula-decl nil nominal_AC_variant_inputs nil)
    (apply_sub_eq formula-decl nil nominal_AC_unification nil)
    (equal_syn_subset formula-decl nil nominal_AC_substitution nil)
    (P skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (var_inp_inst_step_sub2 formula-decl nil nominal_AC_variant_inputs
     nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (mem_list2set formula-decl nil list_aux_equational_reasoning nil)
    (finset2list_mem formula-decl nil list_aux_equational_reasoning nil)
    (lst_V skolem-const-decl "list[variable]" nominal_AC_variant_inputs
     nil)
    (solve_ac_sec_proj_vars formula-decl nil aux_nominal_AC_unification
     nil)
    (lst_V_ skolem-const-decl "list[variable]"
     nominal_AC_variant_inputs nil)
    (V_ skolem-const-decl "finite_set[variable]"
     nominal_AC_variant_inputs nil)
    (new_V_ skolem-const-decl "finite_set[variable]"
     nominal_AC_variant_inputs nil)
    (V skolem-const-decl "finite_set[variable]"
     nominal_AC_variant_inputs nil)
    (select_greater const-decl "nat" list_aux_equational_reasoning_more nil)
    (solve_ac_sec_proj_vars_select_gt2 formula-decl nil
     aux_nominal_AC_unification nil)
    (apply_ac_vars formula-decl nil nominal_AC_ac_step nil)
    (s skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]"
     nominal_AC_variant_inputs nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (up skolem-const-decl "unif_pair" nominal_AC_variant_inputs nil)
    (apply_ac_is_nice_input formula-decl nil nominal_AC_ac_step nil)
    (apply_ac_vars_ctx formula-decl nil nominal_AC_ac_step nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (append def-decl "list[T]" list_props nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (solve_ac_vars3 formula-decl nil aux_nominal_AC_unification nil)
    (lst_V1 skolem-const-decl "list[variable]"
     nominal_AC_variant_inputs nil)
    (solve_ac_vars_subset formula-decl nil aux_nominal_AC_unification
     nil)
    (sig_ skolem-const-decl "sub" nominal_AC_variant_inputs nil)
    (args type-eq-decl nil nominal_AC_term_properties nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (lhs const-decl "args" nominal_AC_unification nil)
    (solve_ac_vars_lhs formula-decl nil aux_nominal_AC_unification nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (choose_eq_vars_rhs2 formula-decl nil nominal_AC_ac_step nil)
    (solve_ac_match_condition formula-decl nil
     aux_nominal_AC_unification nil)
    (lst2set_is_finite formula-decl nil list_aux_equational_reasoning nil)
    (inst_step def-decl "[fresh_context, unif_prb, sub, bool]"
     nominal_AC_inst_step nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (solve_ac_ren formula-decl nil aux_nominal_AC_unification nil)
    (ac_results_ skolem-const-decl "list[unif_prb]"
     nominal_AC_variant_inputs nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties
     nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (every adt-def-decl "boolean" list_adt nil)
    (finset2list def-decl "list[T]" list_aux_equational_reasoning nil)
    (choose_eq_nice_input formula-decl nil nominal_AC_ac_step nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (subset? const-decl "bool" sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (G skolem-const-decl "fresh_context" nominal_AC_variant_inputs nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_variant_inputs nil)
    (inp skolem-const-decl "nice_input" nominal_AC_variant_inputs nil)
    (PV skolem-const-decl "finite_set[variable]"
     nominal_AC_variant_inputs nil)
    (member def-decl "bool" list_props nil)
    (apply_ac const-decl "list[nice_input]" nominal_AC_ac_step nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step
     nil))
   nil)
  (var_inp_ac-1 nil 3896855062
   ("" (skolem 1 ("FV" "inp" "inp1_" "inp_"))
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "G" "inp_`1")
          (("" (name-replace "P" "inp_`2")
            (("" (name-replace "sig_" "inp_`3")
              (("" (name-replace "V_" "inp_`4")
                (("" (name-replace "PV" "inp_`5")
                  (("" (name-replace "up" "choose_eq(P)`1")
                    (("" (name-replace "P1" "choose_eq(P)`2")
                      (("" (name-replace "t" "up`1")
                        (("" (name-replace "s" "up`2")
                          (("" (expand "apply_ac" -3)
                            (("" (lift-if)
                              ((""
                                (split -3)
                                (("1" (flatten) nil nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (split -2)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "member" -2)
                                        (("1"
                                          (expand "member" -2)
                                          (("1"
                                            (inst
                                             2
                                             "(G, P1, inp`3, inp`4, PV)")
                                            (("1"
                                              (prop)
                                              (("1"
                                                (expand "apply_ac" 1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "member" 1)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (replace -2 1)
                                                (("2"
                                                  (expand
                                                   "var_inputs?")
                                                  (("2"
                                                    (reveal
                                                     -1
                                                     -2
                                                     -3
                                                     -4
                                                     -5
                                                     -6
                                                     -7
                                                     -8
                                                     -9)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace -15)
                                                          (("2"
                                                            (replace
                                                             -8)
                                                            (("2"
                                                              (hide-all-but
                                                               (-3
                                                                -21
                                                                1
                                                                2))
                                                              (("2"
                                                                (use
                                                                 "choose_eq_vars")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (prop)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (hide
                                                                         -2)
                                                                        (("2"
                                                                          (expand
                                                                           "subset?")
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (lemma
                                               "choose_eq_nice_input")
                                              (("2"
                                                (inst
                                                 -1
                                                 "inp`1"
                                                 "inp`2"
                                                 "inp`5"
                                                 "inp`4"
                                                 "inp`3")
                                                (("2"
                                                  (expand
                                                   "var_inputs?"
                                                   -6)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (reveal
                                                         -6
                                                         -7
                                                         -8
                                                         -9
                                                         -10)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "P1")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (typepred
                                                                   "inp")
                                                                  (("2"
                                                                    (case
                                                                     "inp = (inp`1, inp`2, inp`3, inp`4, inp`5)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -1
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (decompose-equality
                                                                       1)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (name-replace
                                         "lst_V_"
                                         "finset2list[variable](V_)")
                                        (("2"
                                          (name-replace
                                           "ac_results_"
                                           "first_proj(solve_ac(G, s, t, lst_V_, ac_sym(t), PV))")
                                          (("2"
                                            (name-replace
                                             "new_V_"
                                             "vars(sec_proj(solve_ac(G, s, t, lst_V_, ac_sym(t), PV)))")
                                            (("2"
                                              (use
                                               "input_apply_ac_mem")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skolem
                                                   -1
                                                   ("G1_ "
                                                    "PI_"
                                                    "sig1_"))
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (use
                                                       "inst_step_mem")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skolem
                                                           -1
                                                           "PC_")
                                                          (("2"
                                                            (hide
                                                             -3
                                                             -4
                                                             -5
                                                             -6
                                                             -7)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "ac_results_"
                                                                 -1)
                                                                (("2"
                                                                  (rewrite
                                                                   "first_proj_mem"
                                                                   -1)
                                                                  (("2"
                                                                    (skolem
                                                                     -1
                                                                     "ac_sol_")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (lemma
                                                                         "solve_ac_renaming2")
                                                                        (("2"
                                                                          (reveal
                                                                           -10)
                                                                          (("2"
                                                                            (hide
                                                                             -9)
                                                                            (("2"
                                                                              (name-replace
                                                                               "lst_V"
                                                                               "finset2list[variable](inp`4)")
                                                                              (("2"
                                                                                (inst
                                                                                 -3
                                                                                 "G"
                                                                                 "PV"
                                                                                 "ac_sol_"
                                                                                 "ac_sym(t)"
                                                                                 "lst_V"
                                                                                 "lst_V_"
                                                                                 "s"
                                                                                 "t")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       -3)
                                                                                      (("1"
                                                                                        (skolem
                                                                                         -1
                                                                                         ("rho"
                                                                                          "PC"
                                                                                          "lst_V1"))
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -4)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -7
                                                                                               :dir
                                                                                               rl
                                                                                               :hide?
                                                                                               t)
                                                                                              (("1"
                                                                                                (name-replace
                                                                                                 "G1"
                                                                                                 "inst_step(PV, G, PC, null, null)`1")
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "PI"
                                                                                                   "inst_step(PV, G, PC, null, null)`2")
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "sig1"
                                                                                                     "inst_step(PV, G, PC, null, null)`3")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -14
                                                                                                       -15
                                                                                                       2
                                                                                                       -5)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -5)
                                                                                                        (("1"
                                                                                                          (name-replace
                                                                                                           "V"
                                                                                                           "inp`4")
                                                                                                          (("1"
                                                                                                            (reveal
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (name-replace
                                                                                                               "new_V"
                                                                                                               "vars(sec_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV)))")
                                                                                                              (("1"
                                                                                                                (name-replace
                                                                                                                 "sig"
                                                                                                                 "inp`3")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "var_inp_cond?(G, P, sig, V, PV, sig_, FV, rho, new_V)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     3
                                                                                                                     "(G1, append(PI, apply_sub(sig1, P1)), append(sig1, sig), new_V, PV)")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "apply_ac"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -8)
                                                                                                                          (("1"
                                                                                                                            (name-replace
                                                                                                                             "ac_results"
                                                                                                                             "first_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV))")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (name-replace
                                                                                                                                 "ac_results_subs"
                                                                                                                                 "inst_step(PV, G, ac_results)")
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "input_apply_ac_mem"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "G1"
                                                                                                                                     "PI"
                                                                                                                                     "sig1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "ac_results_subs"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "inst_step_mem2")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             1
                                                                                                                                             "PC")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (reveal
                                                                                                                                                   -6)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "ac_results"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (hide
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (postpone)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (postpone)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (postpone)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (postpone)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-11
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "var_inputs?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               ("lst_V"
                                                                                                "lst_V_"))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "select_greater"
                                                                                                   -7)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "V_"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          1))
                                                                                        (("3"
                                                                                          (reveal
                                                                                           -21
                                                                                           -22)
                                                                                          (("3"
                                                                                            (typepred
                                                                                             "inp")
                                                                                            (("3"
                                                                                              (expand
                                                                                               "up")
                                                                                              (("3"
                                                                                                (case
                                                                                                 "subset?(vars(P), list2set[variable](lst_V))")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "subset?(vars(t, s), vars(P))")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -2
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "subset?")
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     -1
                                                                                                     -2
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (use
                                                                                                       "choose_eq_vars")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "(t, s) = choose_eq(P)`1")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (decompose-equality
                                                                                                             1)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   -2
                                                                                                   -3
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "nice_input?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "P")
                                                                                                        (("2"
                                                                                                          (reveal
                                                                                                           -10)
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              -5
                                                                                                              -11
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "var_inputs?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    -10
                                                                                                                    -11
                                                                                                                    1))
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "subset?")
                                                                                                                    (("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -4
                                                                                                                             1
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "mem_list2set"
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "finset2list_mem")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)))

