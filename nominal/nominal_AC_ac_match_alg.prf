(nominal_AC_ac_match_alg
 (ac_match_TCC1 0
  (ac_match_TCC3-1 nil 3850901211
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (lemma "nice_input_subterms")
            (("" (inst?)
              (("" (inst -1 "P")
                (("" (assert)
                  (("" (typepred "input")
                    (("" (prop)
                      (("1" (case "input = (G, P, sigma, V, PV)")
                        (("1" (replace -1) (("1" (propax) nil nil))
                          nil)
                         ("2" (decompose-equality 1) nil nil))
                        nil)
                       ("2" (use "choose_eq_subterms")
                        (("2" (assert) nil nil)) nil)
                       ("3" (use "choose_eq_vars_rhs")
                        (("3" (assert) nil nil)) nil)
                       ("4" (expand "nice_input?" -1)
                        (("4" (flatten)
                          (("4" (hide-all-but (-7 -11 -16 1 2))
                            (("4" (use "choose_eq_no_pair")
                              (("4" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (choose_eq_subterms formula-decl nil nominal_AC_ac_step nil)
    (choose_eq_vars_rhs formula-decl nil nominal_AC_ac_step nil)
    (choose_eq_no_pair formula-decl nil nominal_AC_ac_step nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input_subterms formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_TCC2 0
  (ac_match_TCC1-3 "" 3823722604
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (replace -2 :dir rl)
            (("" (use "lex3_lt")
              (("" (assert)
                (("" (hide 3)
                  (("" (case "card(vars(P1)) <= card(vars(P))")
                    (("1" (assert)
                      (("1" (flatten)
                        (("1" (assert)
                          (("1" (rewrite "lex2_lt")
                            (("1" (flatten)
                              (("1"
                                (lemma "choose_eq_max_size")
                                (("1"
                                  (inst -1 "P")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (replace -9 :dir rl)
                                      (("1"
                                        (replace -8 :dir rl)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (split -2)
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (flatten)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (use "choose_eq_vars")
                        (("2" (flatten)
                          (("2" (use "card_subset[variable]")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((lex3_lt formula-decl nil lex3 nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (card_subset formula-decl nil finite_sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (choose_eq_max_size formula-decl nil nominal_AC_ac_step nil)
    (lex2_lt formula-decl nil lex2 nil)
    (<= const-decl "bool" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil"))
  (ac_match_TCC1-2 "" 3822388628
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (hide -1 -2 -3 -4 -5)
            (("" (rewrite "lex4_lt")
              (("" (flatten)
                (("" (hide 4)
                  (("" (rewrite "card_strict_subset")
                    (("" (hide 2 3 4)
                      (("" (expand "strict_subset?")
                        (("" (prop)
                          (("1" (replace -3)
                            (("1" (lemma "vars_not_ac_apply_sub")
                              (("1"
                                (inst -1 "sigma1" "unif_prb1")
                                (("1"
                                  (case
                                   "subset?(union(vars_not_ac(img(sigma1)), vars_not_ac(unif_prb1)), vars_not_ac(unif_prb))")
                                  (("1"
                                    (lemma
                                     "subset_transitive[variable]")
                                    (("1"
                                      (inst
                                       -1
                                       "vars_not_ac(apply_sub(sigma1, unif_prb1))"
                                       "union(vars_not_ac(img(sigma1)), vars_not_ac(unif_prb1))"
                                       "vars_not_ac(unif_prb)")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide -1 2)
                                    (("2"
                                      (expand "subset?" 1)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (expand "member" -1)
                                          (("2"
                                            (expand "union" -1)
                                            (("2"
                                              (prop)
                                              (("1"
                                                (case
                                                 "img(sigma1) = singleton(t)")
                                                (("1"
                                                  (replace -1 -2)
                                                  (("1"
                                                    (rewrite
                                                     "vars_not_ac_singleton")
                                                    (("1"
                                                      (lemma
                                                       "vars_not_ac_unif_prb_mem")
                                                      (("1"
                                                        (inst? -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide 2)
                                                            (("1"
                                                              (inst
                                                               1
                                                               "unif_pair")
                                                              (("1"
                                                                (prop)
                                                                (("1"
                                                                  (reveal
                                                                   -6)
                                                                  (("1"
                                                                    (expand
                                                                     "vars_not_ac"
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "member"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "union")
                                                                        (("1"
                                                                          (prop)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (reveal
                                                                   -4)
                                                                  (("2"
                                                                    (replace
                                                                     -1
                                                                     1)
                                                                    (("2"
                                                                      (rewrite
                                                                       "choose_unif_pair1")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -2 1)
                                                  (("2"
                                                    (lemma
                                                     "img_basic_sub")
                                                    (("2"
                                                      (inst? -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite
                                                 "vars_not_ac_unif_prb_mem")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (lemma
                                                     "choose_unif_pair2")
                                                    (("2"
                                                      (reveal -4)
                                                      (("2"
                                                        (replace -1 -4)
                                                        (("2"
                                                          (inst
                                                           -2
                                                           "unif_pair!1"
                                                           "unif_prb")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "vars_not_ac_unif_prb_mem")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "x"
                                                                 "unif_prb")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (inst
                                                                       1
                                                                       "unif_pair!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2"
                            (case "member(V(s), vars_not_ac(unif_prb))")
                            (("1"
                              (case "NOT member(V(s), vars_not_ac(new_unif_prb))")
                              (("1"
                                (replace -2 -1 :dir rl)
                                (("1" (propax) nil nil))
                                nil)
                               ("2"
                                (replace -6 -1)
                                (("2"
                                  (lemma "vars_not_ac_vars")
                                  (("2"
                                    (inst
                                     -1
                                     "V(s)"
                                     "apply_sub(sigma1, unif_prb1)")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (lemma "apply_sub_elim_var")
                                        (("2"
                                          (inst
                                           -1
                                           "V(s)"
                                           "sigma1"
                                           "unif_prb1")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (prop)
                                              (("1"
                                                (replace -5 1)
                                                (("1"
                                                  (lemma
                                                   "dom_basic_sub")
                                                  (("1"
                                                    (inst? -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -1 1)
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "member"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "singleton")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -2 -3 -4 -5)
                                                (("2"
                                                  (replace -2 -1)
                                                  (("2"
                                                    (lemma
                                                     "img_basic_sub")
                                                    (("2"
                                                      (inst? -1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace
                                                           -1
                                                           -2)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (rewrite
                                                               "vars_singleton")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (reveal -1 -4)
                              (("2"
                                (lemma "vars_not_ac_unif_prb_mem")
                                (("2"
                                  (inst? -1)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (inst 1 "unif_pair")
                                      (("2"
                                        (hide 2)
                                        (("2"
                                          (prop)
                                          (("1"
                                            (expand "vars_not_ac" 1)
                                            (("1"
                                              (expand "member" 1)
                                              (("1"
                                                (expand "union" 1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (replace
                                                       -2
                                                       2
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (reveal -6)
                                                        (("1"
                                                          (expand
                                                           "vars_not_ac"
                                                           2)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide-all-but
                                                               2)
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace -1 1)
                                            (("2"
                                              (rewrite
                                               "choose_unif_pair1")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((apply_sub_elim_var formula-decl nil nominal_AC_unification nil)
    (vars_singleton formula-decl nil nominal_AC_term_properties nil)
    (dom_basic_sub formula-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (img_basic_sub formula-decl nil nominal_AC_substitution nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (size def-decl "nat" nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (constant type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil))
   shostak
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil"))
  (ac_match_TCC1-1 nil 3822387991 ("" (termination-tcc) nil nil) nil nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil")))
 (ac_match_TCC3 0
  (ac_match_TCC3-1 nil 3888090595
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (skeep)
              (("" (skeep)
                (("" (lemma "nice_input_apply_sub")
                  ((""
                    (inst -1 "G" "P" "P1" "PV" "V" "X" "pi" "s"
                     "sigma")
                    (("" (assert)
                      (("" (replace -12 :dir rl)
                        (("" (replace -13 :dir rl)
                          (("" (assert)
                            (("" (prop)
                              (("1"
                                (hide -8 -9 3 4 5)
                                (("1"
                                  (typepred "input")
                                  (("1"
                                    (case
                                     "input = (G, P, sigma, V, PV)")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -1)
                                        (("1" (propax) nil)))))
                                     ("2"
                                      (decompose-equality 1)
                                      nil)))))))
                               ("2"
                                (rewrite "member_unif_prb_equiv" 1)
                                (("2"
                                  (inst 1 "up")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (use "choose_eq_mem1")
                                      (("2" (assert) nil)))))))))
                               ("3"
                                (expand "rhs" 1)
                                (("3"
                                  (rewrite "sec_proj_mem" 1)
                                  (("3"
                                    (inst 1 "up")
                                    (("3"
                                      (assert)
                                      (("3"
                                        (use "choose_eq_mem1")
                                        (("3" (assert) nil)))))))))))
                               ("4"
                                (use "choose_eq2_subset")
                                (("4"
                                  (assert)
                                  nil))))))))))))))))))))))))))))))
    nil)
   ((nice_input_apply_sub formula-decl nil nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (* adt-constructor-decl "[[perm, variable] -> (var?)]" nominal_AC_term_adt
       nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.new_sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input"))
  (ac_match_TCC5-1 nil 3850901211
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (skeep)
              (("" (skeep)
                (("" (lemma "nice_input_apply_sub")
                  ((""
                    (inst -1 "G" "P" "P1" "PV" "V" "X" "pi" "s"
                     "sigma")
                    (("" (assert)
                      (("" (replace -12 :dir rl)
                        (("" (replace -13 :dir rl)
                          (("" (assert)
                            (("" (prop)
                              (("1"
                                (hide -8 -9 3 4 5)
                                (("1"
                                  (typepred "input")
                                  (("1"
                                    (case
                                     "input = (G, P, sigma, V, PV)")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (decompose-equality 1)
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (rewrite "member_unif_prb_equiv" 1)
                                (("2"
                                  (inst 1 "up")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (use "choose_eq_mem1")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (expand "rhs" 1)
                                (("3"
                                  (rewrite "sec_proj_mem" 1)
                                  (("3"
                                    (inst 1 "up")
                                    (("3"
                                      (assert)
                                      (("3"
                                        (use "choose_eq_mem1")
                                        (("3" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("4"
                                (use "choose_eq2_subset")
                                (("4" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (* adt-constructor-decl "[[perm, variable] -> (var?)]" nominal_AC_term_adt
       nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input_apply_sub formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.new_sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_TCC4 0
  (ac_match_TCC2-1 nil 3822387991
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (skeep)
              (("" (skeep)
                (("" (rewrite "lex3_lt")
                  (("" (flatten)
                    (("" (hide 5)
                      (("" (use "card_strict_subset[variable]")
                        (("" (assert)
                          (("" (hide 5)
                            (("" (replace -2 1 :dir rl)
                              ((""
                                (expand "strict_subset?" 1)
                                ((""
                                  (use "apply_sub_vars")
                                  ((""
                                    (replace -17 :dir rl)
                                    ((""
                                      (hide -2 -3 -4 -5 -6)
                                      ((""
                                        (use "choose_eq_vars")
                                        ((""
                                          (flatten)
                                          ((""
                                            (replace -5 :dir rl)
                                            ((""
                                              (prop)
                                              (("1"
                                                (expand "subset?" 1)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (expand "subset?")
                                                    (("1"
                                                      (inst -4 "x")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           ("member"
                                                            "union")
                                                           -4)
                                                          (("1"
                                                            (prop)
                                                            (("1"
                                                              (use
                                                               "img_basic_sub_var")
                                                              (("1"
                                                                (replace
                                                                 -11
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (rewrite
                                                                   "ext_vars"
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?"
                                                                     -1)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "x")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (rewrite
                                                                           "vars_unif_prb"
                                                                           1)
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "s")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "member_unif_prb_equiv"
                                                                                 1)
                                                                                (("1"
                                                                                  (inst
                                                                                   1
                                                                                   "up")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "choose_eq_mem1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst
                                                               -3
                                                               "x")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (replace -15 -1)
                                                (("2"
                                                  (lemma
                                                   "apply_sub_elim_var3")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "P1"
                                                     "X"
                                                     "reverse(pi)"
                                                     "s")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace
                                                         -10
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (rewrite
                                                             "vars_unif_prb")
                                                            (("2"
                                                              (inst
                                                               1
                                                               "t")
                                                              (("2"
                                                                (prop)
                                                                (("1"
                                                                  (use
                                                                   "choose_eq_mem1")
                                                                  (("1"
                                                                    (rewrite
                                                                     "member_unif_prb_equiv")
                                                                    (("1"
                                                                      (inst
                                                                       1
                                                                       "up")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-1
                                                                          1
                                                                          2
                                                                          -10
                                                                          -6))
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((lex3_lt formula-decl nil lex3 nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (strict_subset_is_strict_order name-judgement
     "(strict_order?[set[T]])" sets_lemmas nil)
    (apply_sub_vars formula-decl nil nominal_AC_unification nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (img_basic_sub_var formula-decl nil nominal_AC_substitution nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (vars_unif_prb formula-decl nil nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (subset? const-decl "bool" sets nil)
    (apply_sub_elim_var3 formula-decl nil nominal_AC_unification nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (singleton const-decl "(singleton?)" sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (empty? const-decl "bool" sets nil)
    (append def-decl "list[T]" list_props nil)
    (member def-decl "bool" list_props nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (strict_subset? const-decl "bool" sets nil)
    (card_strict_subset formula-decl nil finite_sets nil))
   nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.new_sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil")))
 (ac_match_TCC5 0
  (ac_match_TCC7-1 nil 3850901211
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (lemma "nice_input_subterms")
              (("" (inst -1 "G" "P" "P1" "PV" "V" "sigma")
                (("" (split -1)
                  (("1" (expand "nice_input?")
                    (("1" (flatten)
                      (("1" (assert)
                        (("1" (replace -22 3)
                          (("1" (hide 2)
                            (("1" (expand "subset?" 2)
                              (("1"
                                (skeep)
                                (("1"
                                  (rewrite "vars_append_context")
                                  (("1"
                                    (expand ("member" "union") -23)
                                    (("1"
                                      (prop)
                                      (("1"
                                        (hide-all-but
                                         (-1 -16 -12 -20 1 2))
                                        (("1"
                                          (use "vars_fc")
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   ("member"
                                                    "singleton")
                                                   -1)
                                                  (("1"
                                                    (replace
                                                     -1
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (typepred
                                                       "input")
                                                      (("1"
                                                        (reveal -14)
                                                        (("1"
                                                          (case
                                                           "subset?(vars(P), V)")
                                                          (("1"
                                                            (expand
                                                             "subset?"
                                                             -1)
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (use
                                                                   "choose_eq_vars")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (replace
                                                                       -8
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (expand
                                                                         "subset?")
                                                                        (("1"
                                                                          (inst
                                                                           -2
                                                                           "x")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "nice_input?")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 -6 2))
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "input")
                    (("2" (case "input = (G, P, sigma, V, PV)")
                      (("1" (replace -1) (("1" (propax) nil nil)) nil)
                       ("2" (decompose-equality 1) nil nil))
                      nil))
                    nil)
                   ("3" (use "choose_eq_subterms")
                    (("3" (assert) nil nil)) nil)
                   ("4" (use "choose_eq_vars_rhs")
                    (("4" (assert) nil nil)) nil)
                   ("5" (use "choose_eq_no_pair")
                    (("5" (assert)
                      (("5" (typepred "input")
                        (("5" (expand "nice_input?")
                          (("5" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_subterms formula-decl nil nominal_AC_ac_step nil)
    (subset? const-decl "bool" sets nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (DS const-decl "list[atom]" atoms nil)
    (fc def-decl "fresh_context" nominal_AC_freshness nil)
    (every adt-def-decl "boolean" list_adt nil)
    (vars_append_context formula-decl nil nominal_AC_freshness nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (vars_fc formula-decl nil nominal_AC_freshness nil)
    (singleton const-decl "(singleton?)" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (choose_eq_subterms formula-decl nil nominal_AC_ac_step nil)
    (choose_eq_vars_rhs formula-decl nil nominal_AC_ac_step nil)
    (choose_eq_no_pair formula-decl nil nominal_AC_ac_step nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_TCC6 0
  (ac_match_TCC3-1 nil 3822387991
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (hide 2)
              (("" (replace -2 :dir rl)
                (("" (rewrite "lex3_lt")
                  (("" (flatten)
                    (("" (case "card(vars(P1)) <= card(vars(P))")
                      (("1" (assert)
                        (("1" (use "choose_eq_max_size" ("P" "P"))
                          (("1" (assert)
                            (("1" (replace -9 :dir rl)
                              (("1"
                                (flatten)
                                (("1"
                                  (rewrite "lex2_lt")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (split -2)
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 3 4)
                        (("2" (use "card_subset[variable]")
                          (("2" (assert)
                            (("2" (use "choose_eq_vars")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((lex3_lt formula-decl nil lex3 nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (choose_eq_max_size formula-decl nil nominal_AC_ac_step nil)
    (lex2_lt formula-decl nil lex2 nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (card_subset formula-decl nil finite_sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil")))
 (ac_match_TCC7 0
  (ac_match_TCC9-1 nil 3850901211
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (lemma "nice_input_subterms")
          (("" (inst -1 "G" "P" "P1" "PV" "V" "sigma")
            (("" (assert)
              (("" (prop)
                (("1" (typepred "input")
                  (("1" (case "input = (G, P, sigma, V, PV)")
                    (("1" (replace -1) (("1" (propax) nil nil)) nil)
                     ("2" (decompose-equality 1) nil nil))
                    nil))
                  nil)
                 ("2" (use "choose_eq_subterms")
                  (("2" (assert) nil nil)) nil)
                 ("3" (use "choose_eq_vars_rhs")
                  (("3" (assert) nil nil)) nil)
                 ("4" (use "choose_eq_no_pair")
                  (("4" (assert)
                    (("4" (typepred "input")
                      (("4" (expand "nice_input?" -1)
                        (("4" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_subterms formula-decl nil nominal_AC_ac_step nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (choose_eq_no_pair formula-decl nil nominal_AC_ac_step nil)
    (choose_eq_vars_rhs formula-decl nil nominal_AC_ac_step nil)
    (choose_eq_subterms formula-decl nil nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_TCC8 0
  (ac_match_TCC4-1 nil 3822387991
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (rewrite "lex3_lt")
          (("" (flatten)
            (("" (case "card(vars(P1)) <= card(vars(P))")
              (("1" (assert)
                (("1" (rewrite "lex2_lt")
                  (("1" (flatten)
                    (("1" (replace -3 :dir rl)
                      (("1" (use "choose_eq_max_size" ("P" "P"))
                        (("1" (assert)
                          (("1" (replace -9 :dir rl)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1"
                                  (flatten)
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 3 4)
                (("2" (use "card_subset[variable]")
                  (("2" (assert)
                    (("2" (use "choose_eq_vars")
                      (("2" (flatten) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((lex3_lt formula-decl nil lex3 nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (lex2_lt formula-decl nil lex2 nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (choose_eq_max_size formula-decl nil nominal_AC_ac_step nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (card_subset formula-decl nil finite_sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil")))
 (ac_match_TCC9 0
  (ac_match_TCC11-1 nil 3850901211
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (lemma "nice_input_decompose")
              (("" (inst -1 "G" "P" "P1" "PV" "V" "s" "sigma" "t")
                (("" (assert)
                  (("" (split -1)
                    (("1" (lemma "nominal_AC_term_app_eta")
                      (("1" (inst -1 "t")
                        (("1" (assert)
                          (("1" (replace -1 -12 :dir rl)
                            (("1" (decompose-equality -12) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (case "input = (G, P, sigma, V, PV)")
                      (("1" (typepred "input")
                        (("1" (replace -2) (("1" (propax) nil nil))
                          nil))
                        nil)
                       ("2" (decompose-equality 1) nil nil))
                      nil)
                     ("3" (use "choose_eq_mem1")
                      (("3" (assert)
                        (("3" (rewrite "member_unif_prb_equiv")
                          (("3" (inst 1 "up") (("3" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("4" (expand "rhs" 1)
                      (("4" (rewrite "sec_proj_mem")
                        (("4" (inst 1 "up")
                          (("4" (assert)
                            (("4" (use "choose_eq_mem1")
                              (("4" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("5" (expand "same_func?" 1)
                      (("5" (expand "func?" 1)
                        (("5" (expand ("ord" "sym"))
                          (("5" (lemma "nominal_AC_term_app_eta")
                            (("5" (inst -1 "t")
                              (("5"
                                (replace -1 -11 :dir rl)
                                (("5"
                                  (decompose-equality -11)
                                  (("5" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("6" (use "choose_eq2_subset")
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_decompose formula-decl nil nominal_AC_ac_step nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (same_func? const-decl "bool" nominal_AC_term_properties nil)
    (sym const-decl "string" nominal_AC_term_properties nil)
    (ord const-decl "upto(6)" nominal_AC_term_adt nil)
    (func? const-decl "bool" nominal_AC_term_properties nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nominal_AC_term_app_eta formula-decl nil nominal_AC_term_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (f_sym adt-accessor-decl "[(app?) -> f_symbol]" nominal_AC_term_adt nil)
    (app adt-constructor-decl "[[f_symbol, nominal_AC_term] -> (app?)]" nominal_AC_term_adt
     nil)
    (arg adt-accessor-decl "[(app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_TCC10 0
  (ac_match_TCC5-4 nil 3838285253
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (replace -2)
              (("" (case "f = f_sym(t) AND arg = arg(t)")
                (("1" (replace -16 :hide? t)
                  (("1" (replace -3 :dir rl)
                    (("1" (rewrite "lex3_lt")
                      (("1" (flatten)
                        (("1"
                          (case "card(vars(append(dec_P, P1))) <= card(vars(P))")
                          (("1" (assert)
                            (("1" (hide 2 -1 -4 -5 -6 -7 -8)
                              (("1"
                                (rewrite "lex2_lt")
                                (("1"
                                  (flatten)
                                  (("1"
                                    (use
                                     "choose_eq_max_size"
                                     ("P" "P"))
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -4)
                                        (("1"
                                          (replace -4 :dir rl)
                                          (("1"
                                            (replace -5 :dir rl)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (case
                                                 "max_size(dec_P) < max_size(P)")
                                                (("1"
                                                  (split -3)
                                                  (("1"
                                                    (hide 3)
                                                    (("1"
                                                      (rewrite
                                                       "max_size_append"
                                                       2)
                                                      (("1"
                                                        (expand
                                                         "max"
                                                         2)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (case
                                                         "max_size(append(dec_P, P1)) = max_size(P)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "num_max_size"
                                                             2)
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (rewrite
                                                                 "num_size_append")
                                                                (("1"
                                                                  (lemma
                                                                   "num_size0")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "dec_P"
                                                                     "max_size(P)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "num_max_size"
                                                                             -4)
                                                                            (("1"
                                                                              (replace
                                                                               -3
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 3)
                                                          (("2"
                                                            (rewrite
                                                             "max_size_append")
                                                            (("2"
                                                              (expand
                                                               "max"
                                                               1)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 4 3)
                                                  (("2"
                                                    (hide -2)
                                                    (("2"
                                                      (lemma
                                                       "max_size_decompose")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "arg(s)"
                                                         "arg")
                                                        (("2"
                                                          (case
                                                           "size(arg, arg(s)) < size(up)")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-7
                                                              -8
                                                              -9
                                                              -10
                                                              1))
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 3 4)
                            (("2" (use "card_subset[variable]")
                              (("2"
                                (assert)
                                (("2"
                                  (use "choose_eq_vars")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -2)
                                      (("2"
                                        (replace -10 :dir rl)
                                        (("2"
                                          (expand "subset?" 1)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (rewrite
                                               "vars_unif_prb_append")
                                              (("2"
                                                (prop)
                                                (("1"
                                                  (replace -18 -1)
                                                  (("1"
                                                    (use
                                                     "decompose_vars")
                                                    (("1"
                                                      (expand
                                                       "subset?"
                                                       -1)
                                                      (("1"
                                                        (inst -1 "x")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide -2)
                                                            (("1"
                                                              (case
                                                               "subset?(vars(t, s), vars(P))")
                                                              (("1"
                                                                (expand
                                                                 "subset?")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (hide
                                                                       -2)
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-1
                                                                          -13
                                                                          -14
                                                                          1))
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 -5
                                                                 -6
                                                                 -7
                                                                 -8
                                                                 -9)
                                                                (("2"
                                                                  (use
                                                                   "choose_eq_vars")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "subset?" -2)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 3)
                  (("2" (lemma "nominal_AC_term_app_eta")
                    (("2" (inst -1 "t")
                      (("1" (replace -1 -11 :dir rl)
                        (("1" (decompose-equality -11)
                          (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil)
                 ("3" (assert) nil nil) ("4" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]" nominal_AC_ac_match_alg
     nil)
    (app adt-constructor-decl "[[f_symbol, nominal_AC_term] -> (app?)]" nominal_AC_term_adt
     nil)
    (nominal_AC_term_app_eta formula-decl nil nominal_AC_term_adt nil)
    (lex3_lt formula-decl nil lex3 nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (append def-decl "list[T]" list_props nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (max_size_decompose formula-decl nil nominal_AC_ac_step nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (size def-decl "nat" nominal_AC_term_properties nil)
    (max_size_append formula-decl nil nominal_AC_ac_step nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (num_size0 formula-decl nil nominal_AC_ac_step nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (num_size_append formula-decl nil nominal_AC_ac_step nil)
    (< const-decl "bool" reals nil)
    (choose_eq_max_size formula-decl nil nominal_AC_ac_step nil)
    (lex2_lt formula-decl nil lex2 nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (card_subset formula-decl nil finite_sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (subset? const-decl "bool" sets nil)
    (vars_unif_prb_append formula-decl nil nominal_AC_unification nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (decompose_vars formula-decl nil nominal_AC_unification nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (list type-decl nil list_adt nil) (perm type-eq-decl nil atoms nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (TRUE const-decl "bool" booleans nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (f_sym adt-accessor-decl "[(app?) -> f_symbol]" nominal_AC_term_adt nil)
    (arg adt-accessor-decl "[(app?) -> nominal_AC_term]" nominal_AC_term_adt nil))
   nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil"))
  (ac_match_TCC5-3 nil 3838285032
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (hide-all-but -3 -4)
              (("" (case "member(t, unif_prb) AND member(s, unif_prb)")
                (("1" (hide -1)
                  (("1" (hide-all-but 3)
                    (("1" (lemma "lex4_lt")
                      (("1" (inst?)
                        (("1" (assert)
                          (("1" (hide 2)
                            (("1" (flatten)
                              (("1"
                                (case
                                 "card(vars_not_ac(new_unif_prb)) <= card(vars_not_ac(unif_prb))")
                                (("1"
                                  (assert)
                                  (("1"
                                    (lemma "lex3_lt")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide 3)
                                          (("1"
                                            (hide -1 2)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (case
                                                 "card(vars_under2more(new_unif_prb)) <= card(vars_under2more(unif_prb))")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (lemma "lex2_lt")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide 3)
                                                          (("1"
                                                            (hide -1 2)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (case
                                                                 "card(admissible_subterms(new_unif_prb)) <= card(admissible_subterms(unif_prb))")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (reveal
                                                                       -7
                                                                       -8
                                                                       -9
                                                                       -10
                                                                       -11
                                                                       -12
                                                                       -13
                                                                       -14
                                                                       -15
                                                                       -16)
                                                                      (("1"
                                                                        (lemma
                                                                         "choose_unif_size")
                                                                        (("1"
                                                                          (reveal
                                                                           7)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "unif_prb")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -8)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "size"
                                                                                       2
                                                                                       1)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -7)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil)))))))))))))))))))))))))))))
                                                                 ("2"
                                                                  (hide
                                                                   2
                                                                   3)
                                                                  (("2"
                                                                    (reveal
                                                                     -6
                                                                     -7
                                                                     -8
                                                                     -9
                                                                     -10
                                                                     -11
                                                                     -13
                                                                     -14
                                                                     -15)
                                                                    (("2"
                                                                      (lemma
                                                                       "card_subset[nominal_AC_term]")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (expand
                                                                               "subset?"
                                                                               1)
                                                                              (("2"
                                                                                (skolem
                                                                                 1
                                                                                 "t3")
                                                                                (("2"
                                                                                  (prop)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -8)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "admissible_subterms"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "member"
                                                                                         1
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "member"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "admissible_subterms"
                                                                                             -1
                                                                                             1)
                                                                                            (("2"
                                                                                              (skolem
                                                                                               -1
                                                                                               "t3S")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (reveal
                                                                                                     -13)
                                                                                                    (("2"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "t")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -7
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "admissible_subterms"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "member"
                                                                                                                       1
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "prop_subterms"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member"
                                                                                                                           1
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "adm_subterms_subset")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "arg")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "subset?"
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "t3")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "member"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "subterms"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "union"
                                                                                                                                             1)
                                                                                                                                            (("1"
                                                                                                                                              (propax)
                                                                                                                                              nil)))))))))))))))))
                                                                                                                             ("2"
                                                                                                                              (lemma
                                                                                                                               "adm_subterms_size")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "t3"
                                                                                                                                 "arg")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      -2))
                                                                                                                                    (("2"
                                                                                                                                      (grind)
                                                                                                                                      nil)))))))))
                                                                                                                             ("3"
                                                                                                                              (expand
                                                                                                                               "admissible_subterms"
                                                                                                                               -4)
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "member"
                                                                                                                                 -4
                                                                                                                                 1)
                                                                                                                                (("3"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (replace
                                                                                                         -2)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "s")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "admissible_subterms"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "member"
                                                                                                                       1
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "prop_subterms"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "member"
                                                                                                                           1
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "nominal_AC_term_app_eta")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "s")
                                                                                                                              (("2"
                                                                                                                                (prop)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "adm_subterms_subset")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "arg(s)")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "subset?"
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "t3")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             ("member"
                                                                                                                                              "subterms")
                                                                                                                                             1)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "union"
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil)))))))))))))))
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    -2
                                                                                                                                    -4))
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "adm_subterms_size")
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil)))))))
                                                                                                                                 ("3"
                                                                                                                                  (expand
                                                                                                                                   "admissible_subterms"
                                                                                                                                   -4)
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "member"
                                                                                                                                     -4
                                                                                                                                     1)
                                                                                                                                    (("3"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))))))))))))))))))))))))))))
                                                                                                       ("3"
                                                                                                        (hide
                                                                                                         1
                                                                                                         2)
                                                                                                        (("3"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "t3S")
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            (("3"
                                                                                                              (lemma
                                                                                                               "choose_unif_pair_mem2_alt")
                                                                                                              (("3"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "t3S"
                                                                                                                 "unif_prb")
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                 ("2"
                                                  (hide 2 3)
                                                  (("2"
                                                    (lemma
                                                     "card_subset[variable]")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide 2)
                                                          (("2"
                                                            (lemma
                                                             "vars_under2more_subterms_subset")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (expand
                                                                     "subset?"
                                                                     1)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (reveal
                                                                         -6
                                                                         -7
                                                                         -8
                                                                         -9
                                                                         -10
                                                                         -11
                                                                         -12
                                                                         -13
                                                                         -14
                                                                         -15)
                                                                        (("2"
                                                                          (rewrite
                                                                           "subterms_mem_unif_prb")
                                                                          (("2"
                                                                            (rewrite
                                                                             "subterms_mem_unif_prb")
                                                                            (("2"
                                                                              (skolem
                                                                               -11
                                                                               "t2")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -8
                                                                                   -13)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member"
                                                                                     -13)
                                                                                    (("2"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -8)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "t")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -5)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "subterms"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     ("member"
                                                                                                      "union")
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil)))))))))))))))
                                                                                       ("2"
                                                                                        (replace
                                                                                         -8)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             1
                                                                                             "s")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "nominal_AC_term_app_eta")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "s")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1
                                                                                                     1
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "subterms"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         ("member"
                                                                                                          "union")
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil)))))))))))))))))))
                                                                                       ("3"
                                                                                        (hide
                                                                                         1
                                                                                         2)
                                                                                        (("3"
                                                                                          (inst
                                                                                           1
                                                                                           "t2")
                                                                                          (("3"
                                                                                            (assert)
                                                                                            (("3"
                                                                                              (lemma
                                                                                               "choose_unif_pair_mem2_alt")
                                                                                              (("3"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "t2"
                                                                                                 "unif_prb")
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                 ("2"
                                  (hide 2 3)
                                  (("2"
                                    (lemma "card_subset[variable]")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (hide 2)
                                          (("2"
                                            (expand "subset?" 1)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (rewrite
                                                 "vars_not_ac_unif_prb_mem2")
                                                (("2"
                                                  (rewrite
                                                   "vars_not_ac_unif_prb_mem2")
                                                  (("2"
                                                    (skolem -1 "t2")
                                                    (("2"
                                                      (prop)
                                                      (("2"
                                                        (reveal
                                                         -3
                                                         -4
                                                         -5
                                                         -6
                                                         -7
                                                         -8
                                                         -9
                                                         -10
                                                         -11
                                                         -12)
                                                        (("2"
                                                          (replace
                                                           -8
                                                           -11)
                                                          (("2"
                                                            (expand
                                                             "member"
                                                             -11)
                                                            (("2"
                                                              (prop)
                                                              (("1"
                                                                (replace
                                                                 -8)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     1
                                                                     "t")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -5)
                                                                        (("1"
                                                                          (expand
                                                                           "vars_not_ac"
                                                                           1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil)))))))))))))
                                                               ("2"
                                                                (replace
                                                                 -8)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     1
                                                                     "s")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (lemma
                                                                         "nominal_AC_term_app_eta")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "s")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (replace
                                                                               -1
                                                                               1
                                                                               :dir
                                                                               rl)
                                                                              (("2"
                                                                                (expand
                                                                                 "vars_not_ac"
                                                                                 1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))))
                                                               ("3"
                                                                (inst
                                                                 3
                                                                 "t2")
                                                                (("3"
                                                                  (assert)
                                                                  (("3"
                                                                    (lemma
                                                                     "choose_unif_pair_mem2_alt")
                                                                    (("3"
                                                                      (inst
                                                                       -1
                                                                       "t2"
                                                                       "unif_prb")
                                                                      (("3"
                                                                        (assert)
                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))
                 ("2" (hide-all-but (-1 -2 -3 1))
                  (("2" (reveal -6)
                    (("2" (reveal 1)
                      (("2" (prop)
                        (("1" (lemma "choose_unif_pair_mem1_alt")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (expand "member" 1)
                                (("1" (propax) nil)))))))))
                         ("2" (lemma "choose_unif_pair_mem1_alt")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (expand "member" 1)
                                (("2"
                                  (propax)
                                  nil))))))))))))))))))))))))))))))
    nil)
   nil nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil"))
  (ac_match_TCC5-2 nil 3838284974
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (hide-all-but 3)
              (("" (lemma "lex4_lt")
                (("" (inst?)
                  (("" (assert)
                    (("" (hide 2)
                      (("" (flatten)
                        (("" (hide 1)
                          ((""
                            (case "vars_not_ac(new_unif_prb) = vars_not_ac(unif_prb)")
                            (("1" (assert)
                              (("1"
                                (hide -1)
                                (("1"
                                  (lemma "lex3_lt")
                                  (("1"
                                    (inst?)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (case
                                             "card(vars_under2more(new_unif_prb)) <= card(vars_under2more(unif_prb))")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma "lex2_lt")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 3 2)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (case
                                                           "card(admissible_subterms(new_unif_prb)) <= card(admissible_subterms(unif_prb))")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide
                                                               -1
                                                               -2
                                                               1)
                                                              (("1"
                                                                (reveal
                                                                 -7
                                                                 -8
                                                                 -9
                                                                 -10
                                                                 -11
                                                                 -12
                                                                 -13
                                                                 -14
                                                                 -15)
                                                                (("1"
                                                                  (reveal
                                                                   -9)
                                                                  (("1"
                                                                    (replace
                                                                     -10)
                                                                    (("1"
                                                                      (lemma
                                                                       "choose_unif_size")
                                                                      (("1"
                                                                        (reveal
                                                                         7)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "unif_prb")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2
                                                                                   :dir
                                                                                   rl)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3
                                                                                     :dir
                                                                                     rl)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -2
                                                                                       -3)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "size"
                                                                                         2
                                                                                         1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "size"
                                                                                           2
                                                                                           1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "nominal_AC_term_pair_eta")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "s")
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil)))))))))))))))))))))))))))))))))))))))
                                                           ("2"
                                                            (hide 2 3)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (lemma
                                                                 "card_subset[nominal_AC_term]")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "subset?"
                                                                         1)
                                                                        (("2"
                                                                          (skolem
                                                                           1
                                                                           "t3")
                                                                          (("2"
                                                                            (prop)
                                                                            (("2"
                                                                              (reveal
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11
                                                                               -12
                                                                               -13
                                                                               -14
                                                                               -15)
                                                                              (("2"
                                                                                (expand
                                                                                 "admissible_subterms"
                                                                                 -10)
                                                                                (("2"
                                                                                  (expand
                                                                                   "member"
                                                                                   -10
                                                                                   1)
                                                                                  (("2"
                                                                                    (skolem
                                                                                     -10
                                                                                     "t3S")
                                                                                    (("2"
                                                                                      (prop)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "admissible_subterms"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "member"
                                                                                           1
                                                                                           1)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -9)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member"
                                                                                               -10)
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -8)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "t")
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "choose_unif_pair_mem1_alt")
                                                                                                          (("1"
                                                                                                            (reveal
                                                                                                             10)
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "member"
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil)))))))))))))
                                                                                                         ("2"
                                                                                                          (replace
                                                                                                           -6)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "adm_subterms_pair")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               ("member"
                                                                                                                "union")
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil)))))))))))))))
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -8)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "s")
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "choose_unif_pair_mem1_alt")
                                                                                                          (("1"
                                                                                                            (reveal
                                                                                                             10)
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "member"
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil)))))))))))))
                                                                                                         ("2"
                                                                                                          (lemma
                                                                                                           "nominal_AC_term_pair_eta")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "s")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1
                                                                                                               1
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "adm_subterms_pair")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   ("member"
                                                                                                                    "union")
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil)))))))))))))))))))
                                                                                                 ("3"
                                                                                                  (hide
                                                                                                   1
                                                                                                   2)
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "member"
                                                                                                     -1)
                                                                                                    (("3"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -9)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "t")
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "choose_unif_pair_mem1_alt")
                                                                                                                (("1"
                                                                                                                  (reveal
                                                                                                                   12)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member"
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil)))))))))))))
                                                                                                               ("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -6)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "adm_subterms_pair")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       ("member"
                                                                                                                        "union")
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil)))))))))))))))))
                                                                                                       ("2"
                                                                                                        (replace
                                                                                                         -9)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "s")
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "choose_unif_pair_mem1_alt")
                                                                                                                (("1"
                                                                                                                  (reveal
                                                                                                                   12)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member"
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil)))))))))))))
                                                                                                               ("2"
                                                                                                                (lemma
                                                                                                                 "nominal_AC_term_pair_eta")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1
                                                                                                                     :dir
                                                                                                                     rl)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "adm_subterms_pair")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         ("member"
                                                                                                                          "union")
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil)))))))))))))))))))
                                                                                                       ("3"
                                                                                                        (hide
                                                                                                         1
                                                                                                         2)
                                                                                                        (("3"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "t3S")
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            (("3"
                                                                                                              (lemma
                                                                                                               "choose_unif_pair_mem2_alt")
                                                                                                              (("3"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "t3S"
                                                                                                                 "unif_prb")
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                             ("2"
                                              (hide 2 3)
                                              (("2"
                                                (lemma
                                                 "card_subset[variable]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lemma
                                                       "vars_under2more_subterms_subset")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (hide 2 3)
                                                            (("2"
                                                              (expand
                                                               "subset?"
                                                               1)
                                                              (("2"
                                                                (skolem
                                                                 1
                                                                 "t3")
                                                                (("2"
                                                                  (prop)
                                                                  (("2"
                                                                    (reveal
                                                                     -6
                                                                     -7
                                                                     -8
                                                                     -9
                                                                     -10
                                                                     -11
                                                                     -12
                                                                     -13
                                                                     -14)
                                                                    (("2"
                                                                      (rewrite
                                                                       "subterms_mem_unif_prb")
                                                                      (("2"
                                                                        (skolem
                                                                         -10
                                                                         "t3S")
                                                                        (("2"
                                                                          (prop)
                                                                          (("2"
                                                                            (replace
                                                                             -9)
                                                                            (("2"
                                                                              (expand
                                                                               "member"
                                                                               -11)
                                                                              (("2"
                                                                                (prop)
                                                                                (("1"
                                                                                  (replace
                                                                                   -8)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "subterms_mem_unif_prb")
                                                                                      (("1"
                                                                                        (inst
                                                                                         1
                                                                                         "t")
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -6
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "subterms"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 ("member"
                                                                                                  "union")
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil)))))))
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "choose_unif_pair_mem1_alt")
                                                                                            (("2"
                                                                                              (reveal
                                                                                               9)
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -2
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "member"
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil)))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (replace
                                                                                   -8)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "subterms_mem_unif_prb")
                                                                                      (("2"
                                                                                        (inst
                                                                                         1
                                                                                         "s")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "subterms"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 ("member"
                                                                                                  "union")
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil)))))
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "choose_unif_pair_mem1_alt")
                                                                                              (("2"
                                                                                                (reveal
                                                                                                 9)
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "member"
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil)))))))))))))))))))))))))
                                                                                 ("3"
                                                                                  (hide
                                                                                   1
                                                                                   2)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "member"
                                                                                     -1)
                                                                                    (("3"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -9)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "subterms_mem_unif_prb")
                                                                                            (("1"
                                                                                              (inst
                                                                                               1
                                                                                               "t")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (prop)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -6)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "subterms"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         ("member"
                                                                                                          "union")
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil)))))))
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "choose_unif_pair_mem1_alt")
                                                                                                    (("2"
                                                                                                      (reveal
                                                                                                       11)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -2
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "member"
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil)))))))))))))))))))))))))
                                                                                       ("2"
                                                                                        (replace
                                                                                         -9)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "subterms_mem_unif_prb")
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "s")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "subterms"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     ("member"
                                                                                                      "union")
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil)))))
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "choose_unif_pair_mem1_alt")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (reveal
                                                                                                       11)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "member"
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil)))))))))))))))))))))))
                                                                                       ("3"
                                                                                        (lemma
                                                                                         "choose_unif_pair_mem2_alt")
                                                                                        (("3"
                                                                                          (rewrite
                                                                                           "subterms_mem_unif_prb")
                                                                                          (("3"
                                                                                            (inst
                                                                                             3
                                                                                             "t3S")
                                                                                            (("3"
                                                                                              (assert)
                                                                                              (("3"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "t3S"
                                                                                                 "unif_prb")
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                             ("2" (hide 2)
                              (("2"
                                (reveal -2 -3 -4 -5 -8 -9 -10)
                                (("2"
                                  (rewrite "subset_antisymmetric")
                                  (("1"
                                    (hide 2)
                                    (("1"
                                      (expand "subset?" 1)
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (replace -8)
                                          (("1"
                                            (case
                                             "subset?(vars_not_ac((t, s)), vars_not_ac(unif_prb))")
                                            (("1"
                                              (expand "vars_not_ac" -2)
                                              (("1"
                                                (expand
                                                 ("member" "union")
                                                 -2)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (replace -7)
                                                    (("1"
                                                      (expand
                                                       "subset?"
                                                       -2)
                                                      (("1"
                                                        (inst -2 "x")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "vars_not_ac"
                                                             -1)
                                                            (("1"
                                                              (expand
                                                               ("member"
                                                                "union")
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 "vars_not_ac"
                                                                 1
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   ("member"
                                                                    "union")
                                                                   1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (reveal
                                                                       -7)
                                                                      (("1"
                                                                        (reveal
                                                                         -8)
                                                                        (("1"
                                                                          (use
                                                                           "nominal_AC_term_pair_eta")
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand
                                                                               "vars_not_ac"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   ("member"
                                                                                    "union")
                                                                                   1)
                                                                                  (("1"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "nominal_AC_term_pair_eta")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "t")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "t1 = term1(t)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -5)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))))
                                                                             ("2"
                                                                              (expand
                                                                               "vars_not_ac"
                                                                               2)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   ("member"
                                                                                    "union")
                                                                                   2)
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil)))))))))))))))))))))))))))))))))
                                                   ("2"
                                                    (expand
                                                     "vars_not_ac"
                                                     -1)
                                                    (("2"
                                                      (expand
                                                       ("member"
                                                        "union")
                                                       -1)
                                                      (("2"
                                                        (prop)
                                                        (("1"
                                                          (replace -8)
                                                          (("1"
                                                            (expand
                                                             "subset?"
                                                             -2)
                                                            (("1"
                                                              (inst
                                                               -2
                                                               "x")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (hide
                                                                   -8
                                                                   2)
                                                                  (("1"
                                                                    (expand
                                                                     "vars_not_ac"
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       ("member"
                                                                        "union")
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         ("member"
                                                                          "union")
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "vars_not_ac"
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "union"
                                                                             1)
                                                                            (("1"
                                                                              (prop)
                                                                              (("1"
                                                                                (reveal
                                                                                 -8)
                                                                                (("1"
                                                                                  (expand
                                                                                   "vars_not_ac"
                                                                                   1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member"
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "union"
                                                                                         1)
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (case
                                                                                             "t2 = term2(t)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))
                                                                               ("2"
                                                                                (reveal
                                                                                 -9)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "nominal_AC_term_pair_eta")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -1
                                                                                     "s")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1
                                                                                       2
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "vars_not_ac"
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "member"
                                                                                           2)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "union"
                                                                                             2)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              nil)))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (rewrite
                                                           "vars_not_ac_unif_prb_mem2")
                                                          (("2"
                                                            (skolem
                                                             -1
                                                             "t3")
                                                            (("2"
                                                              (prop)
                                                              (("2"
                                                                (rewrite
                                                                 "vars_not_ac_unif_prb_mem2")
                                                                (("2"
                                                                  (inst
                                                                   1
                                                                   "t3")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (lemma
                                                                       "choose_unif_pair_mem2_alt")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "t3"
                                                                         "unif_prb")
                                                                        (("2"
                                                                          (assert)
                                                                          nil)))))))))))))))))))))))))))))
                                             ("2"
                                              (hide -8 -1 2)
                                              (("2"
                                                (expand "subset?" 1)
                                                (("2"
                                                  (skolem 1 "X")
                                                  (("2"
                                                    (prop)
                                                    (("2"
                                                      (expand
                                                       "vars_not_ac"
                                                       -1)
                                                      (("2"
                                                        (expand
                                                         ("member"
                                                          "union")
                                                         -1)
                                                        (("2"
                                                          (prop)
                                                          (("1"
                                                            (rewrite
                                                             "vars_not_ac_unif_prb_mem2")
                                                            (("1"
                                                              (inst
                                                               1
                                                               "t")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "choose_unif_pair_mem1_alt")
                                                                  (("1"
                                                                    (reveal
                                                                     7)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "t"
                                                                       "unif_prb")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "member"
                                                                           2)
                                                                          (("1"
                                                                            (propax)
                                                                            nil)))))))))))))))))
                                                           ("2"
                                                            (rewrite
                                                             "vars_not_ac_unif_prb_mem2")
                                                            (("2"
                                                              (inst
                                                               1
                                                               "s")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (lemma
                                                                   "choose_unif_pair_mem1_alt")
                                                                  (("2"
                                                                    (reveal
                                                                     7)
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "member"
                                                                           2)
                                                                          (("2"
                                                                            (propax)
                                                                            nil)))))))))))))))))))))))))))))))))))))))))
                                   ("2"
                                    (expand "subset?" 1)
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (rewrite
                                         "vars_not_ac_unif_prb_mem2")
                                        (("2"
                                          (skolem -1 "t3")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (prop)
                                              (("2"
                                                (lemma
                                                 "choose_unif_pair_mem_alt")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (prop)
                                                      (("1"
                                                        (replace
                                                         -4
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (hide -4)
                                                          (("1"
                                                            (expand
                                                             "member"
                                                             -1)
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (replace
                                                                 -5
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (reveal
                                                                     -7)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "vars_not_ac"
                                                                         -4)
                                                                        (("1"
                                                                          (expand
                                                                           ("member"
                                                                            "union")
                                                                           -4)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (rewrite
                                                                               "vars_not_ac_unif_prb_mem2")
                                                                              (("1"
                                                                                (inst
                                                                                 1
                                                                                 "t1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "member_unif_prb_equiv"
                                                                                     1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "unif_pair1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -10)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "member"
                                                                                             1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil)))))))))))))))))
                                                                             ("2"
                                                                              (rewrite
                                                                               "vars_not_ac_unif_prb_mem2")
                                                                              (("2"
                                                                                (inst
                                                                                 1
                                                                                 "t2")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "member_unif_prb_equiv"
                                                                                     1)
                                                                                    (("2"
                                                                                      (inst
                                                                                       1
                                                                                       "unif_pair2")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -10)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member"
                                                                                               1)
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil)))))))))))))))))))))))))))))))))
                                                               ("2"
                                                                (replace
                                                                 -6
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (reveal
                                                                     -8)
                                                                    (("2"
                                                                      (lemma
                                                                       "nominal_AC_term_pair_eta")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "s")
                                                                        (("2"
                                                                          (replace
                                                                           -1
                                                                           -5
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (expand
                                                                             "vars_not_ac"
                                                                             -5)
                                                                            (("2"
                                                                              (expand
                                                                               ("member"
                                                                                "union")
                                                                               -5)
                                                                              (("2"
                                                                                (prop)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2
                                                                                   -3
                                                                                   -4)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vars_not_ac_unif_prb_mem2")
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "term1(s)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -8
                                                                                           1)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "member_unif_prb_equiv"
                                                                                             1)
                                                                                            (("1"
                                                                                              (inst
                                                                                               1
                                                                                               "unif_pair1")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "member"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil)))))))))))))))))))
                                                                                 ("2"
                                                                                  (rewrite
                                                                                   "vars_not_ac_unif_prb_mem2")
                                                                                  (("2"
                                                                                    (inst
                                                                                     1
                                                                                     "term2(s)")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "member_unif_prb_equiv"
                                                                                         1)
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "unif_pair2")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -11)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))
                                                       ("2"
                                                        (replace
                                                         -5
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (rewrite
                                                           "vars_not_ac_unif_prb_mem2")
                                                          (("2"
                                                            (inst
                                                             1
                                                             "t3")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (replace
                                                                 -10)
                                                                (("2"
                                                                  (expand
                                                                   "member"
                                                                   1)
                                                                  (("2"
                                                                    (prop)
                                                                    (("2"
                                                                      (expand
                                                                       "member"
                                                                       3)
                                                                      (("2"
                                                                        (propax)
                                                                        nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil"))
  (ac_match_TCC5-1 nil 3838284778 ("" (termination-tcc) nil nil) nil nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil")))
 (ac_match_TCC11 0
  (ac_match_TCC12-1 nil 3885208057
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (lemma "nice_input_dec_abs")
              ((""
                (inst -1 "G" "P" "P1" "PV" "V" "null" "s" "sigma" "t")
                (("" (prop)
                  (("1" (rewrite "ext_identity")
                    (("1" (assert)
                      (("1" (case "bd = body(t)")
                        (("1" (replace -1 :dir rl)
                          (("1" (assert) nil nil)) nil)
                         ("2" (hide-all-but (-11 1))
                          (("2" (use "nominal_AC_term_abs_eta")
                            (("2" (replace -1 -2 :dir rl)
                              (("2" (decompose-equality -2) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "input")
                    (("2" (case "input = (G, P, sigma, V, PV)")
                      (("1" (replace -1 :dir rl)
                        (("1" (propax) nil nil)) nil)
                       ("2" (decompose-equality 1) nil nil))
                      nil))
                    nil)
                   ("3" (rewrite "member_unif_prb_equiv")
                    (("3" (inst 1 "up")
                      (("3" (assert)
                        (("3" (use "choose_eq_mem1")
                          (("3" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("4" (expand "rhs" 1)
                    (("4" (rewrite "sec_proj_mem")
                      (("4" (inst 1 "up")
                        (("4" (assert)
                          (("4" (use "choose_eq_mem1")
                            (("4" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("5" (assert) nil nil)
                   ("6" (use "choose_eq2_subset")
                    (("6" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_dec_abs formula-decl nil nominal_AC_ac_step nil)
    (abs adt-constructor-decl "[[atom, nominal_AC_term] -> (abs?)]" nominal_AC_term_adt nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ext_identity formula-decl nil nominal_AC_term_properties nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_TCC12 0
  (ac_match_TCC13-1 nil 3885208057
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (rewrite "lex3_lt")
              (("" (flatten)
                (("" (replace -2 :dir rl)
                  (("" (case "card(vars(new_P)) <= card(vars(P))")
                    (("1" (assert)
                      (("1" (rewrite "lex2_lt")
                        (("1" (flatten)
                          (("1" (hide -2 -3 -4 -5 -6)
                            (("1" (use "choose_eq_max_size" ("P" "P"))
                              (("1"
                                (assert)
                                (("1"
                                  (replace -4 :dir rl)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (replace -4 :dir rl)
                                      (("1"
                                        (case
                                         "max_size(dec_P) < max_size(P)")
                                        (("1"
                                          (split -3)
                                          (("1"
                                            (hide 4)
                                            (("1"
                                              (replace -14 3)
                                              (("1"
                                                (rewrite
                                                 "max_size_append")
                                                (("1"
                                                  (expand "max" 3)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (hide 3)
                                              (("2"
                                                (case
                                                 "max_size(new_P) = max_size(P)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "num_max_size"
                                                     3)
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (replace -16 3)
                                                        (("1"
                                                          (rewrite
                                                           "num_size_append"
                                                           3)
                                                          (("1"
                                                            (lemma
                                                             "num_size0")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "dec_P"
                                                               "max_size(P)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "num_max_size"
                                                                       -4)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 3 4)
                                                  (("2"
                                                    (replace -15 1)
                                                    (("2"
                                                      (rewrite
                                                       "max_size_append")
                                                      (("2"
                                                        (expand
                                                         "max"
                                                         1)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 3 4 5)
                                          (("2"
                                            (replace -1 1)
                                            (("2"
                                              (replace -12 1)
                                              (("2"
                                                (use
                                                 "max_size_decompose")
                                                (("2"
                                                  (hide -3)
                                                  (("2"
                                                    (hide-all-but
                                                     (-1
                                                      -6
                                                      -7
                                                      -8
                                                      -9
                                                      1))
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (use "card_subset[variable]")
                      (("2" (assert)
                        (("2" (hide 2 4 5)
                          (("2" (replace -15 1)
                            (("2" (expand "subset?" 1)
                              (("2"
                                (skeep)
                                (("2"
                                  (rewrite "vars_unif_prb_append" -1)
                                  (("2"
                                    (prop)
                                    (("1"
                                      (replace -15 -1)
                                      (("1"
                                        (use "decompose_vars")
                                        (("1"
                                          (expand "subset?" -1)
                                          (("1"
                                            (inst -1 "x")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (rewrite
                                                 "vars_unif_prb"
                                                 1)
                                                (("1"
                                                  (expand "vars" -1)
                                                  (("1"
                                                    (expand
                                                     ("member" "union")
                                                     -1)
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (inst 1 "t")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (prop)
                                                            (("1"
                                                              (rewrite
                                                               "member_unif_prb_equiv")
                                                              (("1"
                                                                (inst
                                                                 1
                                                                 "up")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (use
                                                                     "choose_eq_mem1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (replace
                                                               -12
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "vars"
                                                                 1)
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (inst 1 "s")
                                                        (("2"
                                                          (prop)
                                                          (("1"
                                                            (rewrite
                                                             "member_unif_prb_equiv")
                                                            (("1"
                                                              (inst
                                                               1
                                                               "up")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (use
                                                                   "choose_eq_mem1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "vars"
                                                             1)
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (use "choose_eq_vars")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (replace -10 :dir rl)
                                            (("2"
                                              (expand "subset?" -1)
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((lex3_lt formula-decl nil lex3 nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (atom type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (perm type-eq-decl nil atoms nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (card_subset formula-decl nil finite_sets nil)
    (subset? const-decl "bool" sets nil)
    (vars_unif_prb_append formula-decl nil nominal_AC_unification nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (vars_unif_prb formula-decl nil nominal_AC_unification nil)
    (decompose_vars formula-decl nil nominal_AC_unification nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (choose_eq_max_size formula-decl nil nominal_AC_ac_step nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (size def-decl "nat" nominal_AC_term_properties nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (max_size_decompose formula-decl nil nominal_AC_ac_step nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (max_size_append formula-decl nil nominal_AC_ac_step nil)
    (num_size_append formula-decl nil nominal_AC_ac_step nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (num_size0 formula-decl nil nominal_AC_ac_step nil)
    (< const-decl "bool" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (lex2_lt formula-decl nil lex2 nil)
    (<= const-decl "bool" reals nil))
   nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil")))
 (ac_match_TCC13 0
  (ac_match_TCC14-1 nil 3885208057
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (skeep)
              (("" (hide -1 -2 -3 -4 -5)
                (("" (lemma "nice_input_dec_abs")
                  ((""
                    (inst -1 "G" "P" "P1" "PV" "V" "pi" "s" "sigma"
                     "t")
                    (("" (assert)
                      (("" (case "body(t) = bd")
                        (("1" (replace -1)
                          (("1" (assert)
                            (("1" (split -2)
                              (("1"
                                (replace -14 :dir rl)
                                (("1"
                                  (replace -14 :dir rl)
                                  (("1"
                                    (expand "nice_input?")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide
                                           -1
                                           -2
                                           -3
                                           -4
                                           -6
                                           -7
                                           -8
                                           -9)
                                          (("1"
                                            (replace -11 3)
                                            (("1"
                                              (rewrite
                                               "vars_append_context")
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (expand
                                                     ("member" "union")
                                                     -16)
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (replace
                                                         -11
                                                         -1)
                                                        (("1"
                                                          (case
                                                           "subset?(vars(P), V)")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (use
                                                                   "vars_fresh?")
                                                                  (("1"
                                                                    (expand
                                                                     "subset?"
                                                                     -1)
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (rewrite
                                                                           "vars_unif_prb"
                                                                           1)
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "s")
                                                                            (("1"
                                                                              (expand
                                                                               "vars"
                                                                               1)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "member_unif_prb_equiv"
                                                                                 1)
                                                                                (("1"
                                                                                  (inst
                                                                                   1
                                                                                   "up")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "choose_eq_mem1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (reveal
                                                             -11
                                                             -13)
                                                            (("2"
                                                              (hide-all-but
                                                               (-1
                                                                -2
                                                                1))
                                                              (("2"
                                                                (typepred
                                                                 "input")
                                                                (("2"
                                                                  (expand
                                                                   "nice_input?")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (inst -2 "x")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (reveal -2 -3 -4 -5 -6)
                                (("2"
                                  (hide-all-but (-1 -2 -3 -4 -5 1))
                                  (("2"
                                    (typepred "input")
                                    (("2"
                                      (case
                                       "input = (G, P, sigma, V, PV)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replace -1)
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (decompose-equality 1)
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (rewrite "member_unif_prb_equiv")
                                (("3"
                                  (inst 1 "up")
                                  (("3"
                                    (assert)
                                    (("3"
                                      (use "choose_eq_mem1")
                                      (("3" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("4"
                                (expand "rhs" 1)
                                (("4"
                                  (rewrite "sec_proj_mem" 1)
                                  (("4"
                                    (inst 1 "up")
                                    (("4"
                                      (assert)
                                      (("4"
                                        (use "choose_eq_mem1")
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("5"
                                (use "choose_eq2_subset")
                                (("5" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -1)
                          (("2" (lemma "nominal_AC_term_abs_eta")
                            (("2" (inst -1 "t")
                              (("2"
                                (replace -1 -6 :dir rl)
                                (("2" (decompose-equality -6) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_dec_abs formula-decl nil nominal_AC_ac_step nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (abs adt-constructor-decl "[[atom, nominal_AC_term] -> (abs?)]" nominal_AC_term_adt nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (vars_append_context formula-decl nil nominal_AC_freshness nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (vars_fresh? formula-decl nil nominal_AC_freshness nil)
    (vars_unif_prb formula-decl nil nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_TCC14 0
  (ac_match_TCC15-1 nil 3885208057
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (skeep)
              (("" (replace -2 :dir rl)
                (("" (hide -1 -2 -3 -4 -5)
                  (("" (rewrite "lex3_lt")
                    (("" (flatten)
                      (("" (case "card(vars(new_P)) <= card(vars(P))")
                        (("1" (assert)
                          (("1" (rewrite "lex2_lt")
                            (("1" (flatten)
                              (("1"
                                (hide 2 3 -15 -12)
                                (("1"
                                  (use "choose_eq_max_size" ("P" "P"))
                                  (("1"
                                    (assert)
                                    (("1"
                                      (replace -3 :dir rl)
                                      (("1"
                                        (replace -4 :dir rl)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (case
                                             "max_size(dec_P) < max_size(P)")
                                            (("1"
                                              (split -3)
                                              (("1"
                                                (hide 3)
                                                (("1"
                                                  (replace -15 2)
                                                  (("1"
                                                    (rewrite
                                                     "max_size_append")
                                                    (("1"
                                                      (expand "max" 2)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (case
                                                   "max_size(new_P) = max_size(P)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "num_max_size")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (replace
                                                           -2
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (replace
                                                             -17
                                                             3)
                                                            (("1"
                                                              (rewrite
                                                               "num_size_append"
                                                               3)
                                                              (("1"
                                                                (lemma
                                                                 "num_size0")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "dec_P"
                                                                   "max_size(P)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 3 4)
                                                    (("2"
                                                      (replace -16 1)
                                                      (("2"
                                                        (rewrite
                                                         "max_size_append")
                                                        (("2"
                                                          (expand
                                                           "max"
                                                           1)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -2 4 3)
                                              (("2"
                                                (use
                                                 "max_size_decompose")
                                                (("2"
                                                  (replace -2)
                                                  (("2"
                                                    (hide-all-but
                                                     (-1
                                                      -6
                                                      -7
                                                      -8
                                                      -9
                                                      1
                                                      -13))
                                                    (("2"
                                                      (use
                                                       "max_size_decompose_ext")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (replace
                                                           -7
                                                           :dir
                                                           rl)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (use "card_subset[variable]")
                          (("2" (assert)
                            (("2" (hide 2 4 5 6)
                              (("2"
                                (replace -13)
                                (("2"
                                  (expand "subset?")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (rewrite
                                       "vars_unif_prb_append"
                                       -1)
                                      (("2"
                                        (prop)
                                        (("1"
                                          (replace -13 -1)
                                          (("1"
                                            (use "decompose_vars")
                                            (("1"
                                              (expand "subset?" -1)
                                              (("1"
                                                (inst -1 "x")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "vars" -1)
                                                    (("1"
                                                      (expand
                                                       ("member"
                                                        "union")
                                                       -1)
                                                      (("1"
                                                        (prop)
                                                        (("1"
                                                          (rewrite
                                                           "vars_unif_prb"
                                                           1)
                                                          (("1"
                                                            (inst
                                                             1
                                                             "t")
                                                            (("1"
                                                              (expand
                                                               "vars"
                                                               1)
                                                              (("1"
                                                                (prop)
                                                                (("1"
                                                                  (rewrite
                                                                   "member_unif_prb_equiv")
                                                                  (("1"
                                                                    (inst
                                                                     1
                                                                     "up")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (use
                                                                         "choose_eq_mem1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (replace
                                                                   -7
                                                                   1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "ext_vars"
                                                           -1)
                                                          (("2"
                                                            (rewrite
                                                             "vars_unif_prb"
                                                             1)
                                                            (("2"
                                                              (inst
                                                               1
                                                               "s")
                                                              (("2"
                                                                (expand
                                                                 "vars"
                                                                 1)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (rewrite
                                                                     "member_unif_prb_equiv")
                                                                    (("2"
                                                                      (inst
                                                                       1
                                                                       "up")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (use
                                                                           "choose_eq_mem1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (use "choose_eq_vars")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "subset?" -1)
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((card_subset formula-decl nil finite_sets nil)
    (subset? const-decl "bool" sets nil)
    (vars_unif_prb_append formula-decl nil nominal_AC_unification nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (vars_unif_prb formula-decl nil nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (decompose_vars formula-decl nil nominal_AC_unification nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (choose_eq_max_size formula-decl nil nominal_AC_ac_step nil)
    (max_size_decompose_ext formula-decl nil nominal_AC_ac_step nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (size def-decl "nat" nominal_AC_term_properties nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (max_size_decompose formula-decl nil nominal_AC_ac_step nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (max_size_append formula-decl nil nominal_AC_ac_step nil)
    (num_size_append formula-decl nil nominal_AC_ac_step nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (num_size0 formula-decl nil nominal_AC_ac_step nil)
    (< const-decl "bool" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (lex2_lt formula-decl nil lex2 nil)
    (<= const-decl "bool" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (lex3_lt formula-decl nil lex3 nil))
   nil
   (ac_match termination
    "nominal_AC_ac_match_alg.ac_match(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nil")))
 (ac_match_TCC15 0
  (ac_match_TCC13-1 nil 3850901211
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (typepred "input")
            (("" (expand "nice_input?" -1)
              (("" (replace -2 :dir rl :hide? t)
                (("" (replace -2 :dir rl :hide? t)
                  (("" (replace -2 :dir rl :hide? t)
                    (("" (replace -2 :dir rl :hide? t)
                      (("" (replace -2 :dir rl :hide? t)
                        (("" (prop)
                          (("" (expand "nice_input?" 2)
                            (("" (assert)
                              ((""
                                (hide -1 -5 -6 -8)
                                ((""
                                  (case
                                   "subset?(vars(cons((t,s), P1)), vars(P))")
                                  (("1"
                                    (prop)
                                    (("1"
                                      (hide-all-but (-1 -2 1))
                                      (("1"
                                        (expand "disjoint?")
                                        (("1"
                                          (expand "empty?")
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but (-1 -4 1))
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (inst?)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (use "choose_eq_well_formed")
                                      (("3"
                                        (assert)
                                        (("3"
                                          (replace -8 :dir rl)
                                          (("3"
                                            (replace -9 :dir rl)
                                            (("3"
                                              (flatten)
                                              (("3"
                                                (rewrite
                                                 "well_formed_unif_prb"
                                                 1)
                                                (("3"
                                                  (skolem 1 "t1")
                                                  (("3"
                                                    (flatten)
                                                    (("3"
                                                      (expand
                                                       "member"
                                                       -3)
                                                      (("3"
                                                        (expand
                                                         "well_formed?"
                                                         -1)
                                                        (("3"
                                                          (flatten)
                                                          (("3"
                                                            (split -4)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (rewrite
                                                                 "well_formed_unif_prb"
                                                                 -4)
                                                                (("2"
                                                                  (inst
                                                                   -4
                                                                   "t1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (hide -1 -2 -3 -4 -5)
                                      (("4"
                                        (expand "match_problem?")
                                        (("4"
                                          (skolem 1 "x")
                                          (("4"
                                            (flatten)
                                            (("4"
                                              (inst -2 "x")
                                              (("4"
                                                (assert)
                                                (("4"
                                                  (rewrite "vars_args")
                                                  (("4"
                                                    (rewrite
                                                     "vars_args")
                                                    (("4"
                                                      (skolem -1 "t1")
                                                      (("4"
                                                        (flatten)
                                                        (("4"
                                                          (inst 2 "t1")
                                                          (("4"
                                                            (assert)
                                                            (("4"
                                                              (expand
                                                               "rhs")
                                                              (("4"
                                                                (expand
                                                                 "sec_proj"
                                                                 -1)
                                                                (("4"
                                                                  (expand
                                                                   "member"
                                                                   -1)
                                                                  (("4"
                                                                    (prop)
                                                                    (("1"
                                                                      (rewrite
                                                                       "sec_proj_mem"
                                                                       2)
                                                                      (("1"
                                                                        (inst
                                                                         2
                                                                         "up")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (use
                                                                             "choose_eq_mem1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (use
                                                                       "choose_eq2_subset")
                                                                      (("2"
                                                                        (rewrite
                                                                         "sec_proj_mem")
                                                                        (("2"
                                                                          (rewrite
                                                                           "sec_proj_mem")
                                                                          (("2"
                                                                            (skolem
                                                                             -2
                                                                             "up1")
                                                                            (("2"
                                                                              (inst
                                                                               2
                                                                               "up1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "subset?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "up1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 3)
                                    (("2"
                                      (use "choose_eq_vars")
                                      (("2"
                                        (replace -7 :dir rl)
                                        (("2"
                                          (replace -8 :dir rl)
                                          (("2"
                                            (hide-all-but
                                             (-1 -9 -10 1))
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand "subset?")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "vars"
                                                           -1)
                                                          (("2"
                                                            (expand
                                                             ("member"
                                                              "union"))
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (args type-eq-decl nil nominal_AC_term_properties nil)
    (every adt-def-decl "boolean" list_adt nil)
    (vars_args formula-decl nil nominal_AC_term_properties nil)
    (member def-decl "bool" list_props nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (subset? const-decl "bool" nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (match_problem? const-decl "bool" nominal_AC_unification nil)
    (choose_eq_well_formed formula-decl nil nominal_AC_ac_step nil)
    (member def-decl "bool" nominal_AC_unification nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (well_formed_unif_prb formula-decl nil nominal_AC_unification nil)
    (empty? const-decl "bool" sets nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Union_surjective name-judgement
     "(surjective?[setofsets[T], set[T]])" sets_lemmas nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (num_arg def-decl "nat" nominal_AC_term_properties nil)
    (get_args const-decl "args" nominal_AC_term_properties nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (Union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (intersection const-decl "set" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match subtype
    "(nominal_AC_ac_match_alg.G, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), nominal_AC_ac_match_alg.P1), nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_TCC16 0
  (ac_match_TCC7-1 "" 3837279656
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (rewrite "every_nth")
              (("" (skeep)
                (("" (name-replace "new_inp" "nth(input_lst, i)")
                  (("" (reveal -1)
                    (("" (case "member(new_inp, input_lst)")
                      (("1"
                        (case "nice_input?(G, cons((t, s), P1), sigma, V, PV)")
                        (("1" (case "nice_input?(new_inp)")
                          (("1" (assert)
                            (("1" (replace -6 :dir rl)
                              (("1"
                                (name-replace "P2" "new_inp`2")
                                (("1"
                                  (lemma "choose_eq_max_size")
                                  (("1"
                                    (inst -1 "P")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (hide
                                         -6
                                         -7
                                         -8
                                         -9
                                         -10
                                         -2
                                         -3
                                         -4
                                         -5)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (replace -3 :dir rl)
                                            (("1"
                                              (replace -4 :dir rl)
                                              (("1"
                                                (lemma "apply_ac_vars")
                                                (("1"
                                                  (reveal -1 -2 -3)
                                                  (("1"
                                                    (replace
                                                     -14
                                                     :hide?
                                                     t)
                                                    (("1"
                                                      (inst
                                                       -4
                                                       "(G, cons((t, s), P1), sigma, V, PV)"
                                                       "new_inp")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (reveal -12)
                                                          (("1"
                                                            (replace
                                                             -1
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (expand
                                                               "apply_ac"
                                                               -4)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (split
                                                                   -4)
                                                                  (("1"
                                                                    (expand
                                                                     "member"
                                                                     -1)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (split
                                                                       -2)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "member"
                                                                           -2)
                                                                          (("1"
                                                                            (expand
                                                                             "member"
                                                                             -2)
                                                                            (("1"
                                                                              (case
                                                                               "P1 = new_inp`2")
                                                                              (("1"
                                                                                (replace
                                                                                 -1
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -9
                                                                                    -10
                                                                                    -11
                                                                                    -12
                                                                                    1
                                                                                    2))
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "lex3_lt")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (case
                                                                                         "card(vars(P1)) <= card(vars(P))")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "lex2_lt")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           3
                                                                                           4)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -3)
                                                                                            (("2"
                                                                                              (use
                                                                                               "card_subset[variable]")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "choose_eq_vars")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-2
                                                                                  1))
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (name-replace
                                                                           "lst_V"
                                                                           "finset2list[variable](V)")
                                                                          (("2"
                                                                            (name-replace
                                                                             "ac_results"
                                                                             "first_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV))")
                                                                            (("2"
                                                                              (name-replace
                                                                               "new_V"
                                                                               "vars(sec_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV)))")
                                                                              (("2"
                                                                                (name-replace
                                                                                 "ac_results_subs"
                                                                                 "inst_step(PV, G, ac_results)")
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "input_apply_ac_mem")
                                                                                  (("2"
                                                                                    (skolem
                                                                                     -1
                                                                                     ("G1"
                                                                                      "PI"
                                                                                      "sig1"))
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -3)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -4
                                                                                           -5
                                                                                           -6)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("2"
                                                                                              (case
                                                                                               "subset?(vars(P2), vars(P))")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "lex3_lt")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "vars(P2) = vars(P)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "vars(P2) = vars(cons((t, s), P1))")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "max_size(PI) < max_size(P)")
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -11
                                                                                                               -18
                                                                                                               -19
                                                                                                               -20
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "apply_sub(sig1, P1) = P1")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "lex2_lt")
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -13)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -10
                                                                                                                             2
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "max_size_append"
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "max"
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "max_size(P2) = max_size(P)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "num_max_size"
                                                                                                                               3)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -12
                                                                                                                                   3
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "num_size_append")
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "num_size0")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "PI"
                                                                                                                                         "max_size(P)")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "num_max_size"
                                                                                                                                                 -4)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             4)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -11
                                                                                                                               1
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "max_size_append"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "max"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -11
                                                                                                                   -12
                                                                                                                   3)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "apply_ac_apply_sub_no_effect")
                                                                                                                    (("2"
                                                                                                                      (reveal
                                                                                                                       -11
                                                                                                                       -12
                                                                                                                       -13
                                                                                                                       -14)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -5
                                                                                                                         "G1"
                                                                                                                         "PI"
                                                                                                                         "(G, cons((t, s), P1), sigma, V, PV)"
                                                                                                                         "sig1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               -12
                                                                                                               -3
                                                                                                               -10
                                                                                                               2
                                                                                                               4)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "apply_ac_max_size_le")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "G1"
                                                                                                                   "PI"
                                                                                                                   "(G, cons((t, s), P1), sigma, V, PV)"
                                                                                                                   "sig1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (reveal
                                                                                                                       -9
                                                                                                                       -10
                                                                                                                       -11
                                                                                                                       -12)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (hide-all-but
                                                                                                                           (-5
                                                                                                                            -15
                                                                                                                            -14
                                                                                                                            -17
                                                                                                                            -18
                                                                                                                            1))
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "size"
                                                                                                                             -2)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -11
                                                                                                             2
                                                                                                             4
                                                                                                             -5
                                                                                                             -10
                                                                                                             -16
                                                                                                             -17
                                                                                                             -18)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "subset_antisymmetric")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -2
                                                                                                                   -3
                                                                                                                   -4
                                                                                                                   -5
                                                                                                                   -7
                                                                                                                   -8)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "choose_eq_vars")
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -4
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -5
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("2"
                                                                                                                          (prop)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "subset?")
                                                                                                                            (("2"
                                                                                                                              (skeep)
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                (("2"
                                                                                                                                  (inst?)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "vars"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         ("member"
                                                                                                                                          "union")
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       5)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "card_strict_subset[variable]")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             5)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "strict_subset?"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 4)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -8
                                                                                                   -9)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "subset?(vars(cons((t, s), P1)), vars(P))")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -8
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "subset?")
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       (-8
                                                                                                        -9
                                                                                                        -10
                                                                                                        -11
                                                                                                        -11
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "choose_eq_vars")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -3
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -4
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "subset?")
                                                                                                                (("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "vars"
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             ("member"
                                                                                                                              "union"))
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 3)
                            (("2"
                              (hide -4 -5 -6 -7 -8 -9 -9 -10 -11 -12)
                              (("2"
                                (replace -7 -2)
                                (("2"
                                  (expand "apply_ac" -2)
                                  (("2"
                                    (lift-if)
                                    (("2"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (expand "member" -1)
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (split -2)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "member" -2)
                                              (("1"
                                                (expand "member" -2)
                                                (("1"
                                                  (lemma
                                                   "apply_ac_TCC1")
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "(G, cons((t, s), P1), sigma, V, PV)"
                                                     "G"
                                                     "cons((t, s), P1)"
                                                     "sigma"
                                                     "V"
                                                     "PV")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "t"
                                                         "s")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "P1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (name-replace
                                               "lst_V"
                                               "finset2list[variable](V)")
                                              (("2"
                                                (name-replace
                                                 "ac_results"
                                                 "first_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV))")
                                                (("2"
                                                  (name-replace
                                                   "new_V"
                                                   "vars(sec_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV)))")
                                                  (("2"
                                                    (name-replace
                                                     "ac_results_subs"
                                                     "inst_step(PV, G, ac_results)")
                                                    (("2"
                                                      (reveal
                                                       -1
                                                       -2
                                                       -3
                                                       -4)
                                                      (("2"
                                                        (lemma
                                                         "apply_ac_TCC4")
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "(G, cons((t, s), P1), sigma, V, PV)"
                                                           "G"
                                                           "cons((t, s), P1)"
                                                           "sigma"
                                                           "V"
                                                           "PV")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "t"
                                                               "s")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "P1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "lst_V"
                                                                     "ac_results"
                                                                     "new_V"
                                                                     "ac_results_subs")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (rewrite
                                                                         "every_nth")
                                                                        (("2"
                                                                          (rewrite
                                                                           "member_nth2[pre_nice_input]"
                                                                           -6)
                                                                          (("2"
                                                                            (skolem
                                                                             -6
                                                                             "n")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "n")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 3)
                          (("2" (lemma "ac_match_TCC15")
                            (("2"
                              (inst -1 "(G, P, sigma, V, PV)" "G" "P"
                               "sigma" "V" "PV")
                              (("1"
                                (assert)
                                (("1"
                                  (inst -1 "up" "P1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (inst -1 "t" "s")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst -1 "f" "ac_arg")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (typepred "input")
                                (("2"
                                  (case "input = (G, P, sigma, V, PV)")
                                  (("1"
                                    (replace -1)
                                    (("1" (propax) nil nil))
                                    nil)
                                   ("2"
                                    (decompose-equality 1)
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 3)
                        (("2" (replace -1 :dir rl)
                          (("2" (rewrite "member_nth_lst" 1) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((every_nth formula-decl nil list_props nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (< def-decl "bool" ordinals nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (lex3 const-decl "ordinal" lex3 nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (every adt-def-decl "boolean" list_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (below type-eq-decl nil naturalnumbers nil)
    (nth def-decl "T" list_props nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (member def-decl "bool" list_props nil)
    (G skolem-const-decl "fresh_context" nominal_AC_ac_match_alg nil)
    (P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (sigma skolem-const-decl "sub" nominal_AC_ac_match_alg nil)
    (V skolem-const-decl "finite_set[variable]" nominal_AC_ac_match_alg nil)
    (PV skolem-const-decl "finite_set[variable]" nominal_AC_ac_match_alg nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (ac_match_TCC15 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (choose_eq_max_size formula-decl nil nominal_AC_ac_step nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (apply_ac const-decl "list[nice_input]" nominal_AC_ac_step nil)
    (card_subset formula-decl nil finite_sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (lex2_lt formula-decl nil lex2 nil)
    (<= const-decl "bool" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (lex3_lt formula-decl nil lex3 nil)
    (finset2list def-decl "list[T]" list_aux_equational_reasoning nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (pre_nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (input_apply_ac_mem formula-decl nil nominal_AC_ac_step nil)
    (subset? const-decl "bool" sets nil)
    (strict_subset_is_strict_order name-judgement
     "(strict_order?[set[T]])" sets_lemmas nil)
    (strict_subset? const-decl "bool" sets nil)
    (card_strict_subset formula-decl nil finite_sets nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (apply_ac_max_size_le formula-decl nil nominal_AC_ac_step nil)
    (apply_ac_apply_sub_no_effect formula-decl nil nominal_AC_ac_step nil)
    (max_size_append formula-decl nil nominal_AC_ac_step nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (num_size0 formula-decl nil nominal_AC_ac_step nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (num_size_append formula-decl nil nominal_AC_ac_step nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (subset_antisymmetric formula-decl nil sets_lemmas nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (nominal_AC_inst_step def-decl "list[[fresh_context, unif_prb, sub]]"
     nominal_AC_inst_step nil)
    (first_proj def-decl "list[T1]" list_aux_equational_reasoning2 nil)
    (string type-eq-decl nil strings nil)
    (ac_sol type-eq-decl nil aux_nominal_AC_unification nil)
    (solve_ac const-decl "list[ac_sol]" aux_nominal_AC_unification nil)
    (ac_app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" nominal_AC_term_adt nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (apply_ac_vars formula-decl nil nominal_AC_ac_step nil)
    (apply_ac_TCC1 subtype-tcc nil nominal_AC_ac_step nil)
    (member_nth2 formula-decl nil list_aux_equational_reasoning nil)
    (input_apply_ac def-decl "list[pre_nice_input]" nominal_AC_ac_step nil)
    (apply_ac_TCC4 subtype-tcc nil nominal_AC_ac_step nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (member_nth_lst formula-decl nil list_aux_equational_reasoning nil))
   shostak
   (ac_match termination-subtype "nominal_AC_ac_match_alg.input_lst"
    "[{z: nominal_AC_ac_step.nice_input | ordinals.<(lex3.lex3(finite_sets[variable].card(nominal_AC_unification.vars(z`2)), nominal_AC_ac_step.max_size(z`2), nominal_AC_ac_step.num_max_size(z`2)), lex3.lex3(finite_sets[variable].card(nominal_AC_unification.vars(nominal_AC_ac_match_alg.input`2)), nominal_AC_ac_step.max_size(nominal_AC_ac_match_alg.input`2), nominal_AC_ac_step.num_max_size(nominal_AC_ac_match_alg.input`2)))} -> list_adt[[nominal_AC_freshness.fresh_context, nominal_AC_substitution.sub]].list]"))
  (ac_match_TCC9-1 nil 3822387991
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (hide 2)
            (("" (skeep)
              (("" (hide-all-but (1 2))
                ((""
                  (lemma
                   "every_nth[[list[unif_pair], list[basic_sub], finite_set[variable]]]")
                  (("" (inst? -1)
                    (("" (assert)
                      (("" (hide 3)
                        (("" (skeep)
                          (("" (lemma "lex4_lt")
                            (("" (inst? -1)
                              ((""
                                (assert)
                                ((""
                                  (hide 2)
                                  ((""
                                    (name-replace
                                     "ac_sol"
                                     "nth(input_lst, i)")
                                    ((""
                                      (flatten)
                                      ((""
                                        (lemma
                                         "nominal_AC_apply_nominal_AC_ac_step_sigma_null")
                                        ((""
                                          (hide 1 2)
                                          ((""
                                            (reveal -1 -11)
                                            ((""
                                              (inst
                                               -3
                                               "ac_sol"
                                               "null"
                                               "sigma"
                                               "unif_prb"
                                               "vars2avoid")
                                              ((""
                                                (prop)
                                                (("1"
                                                  (hide -1)
                                                  (("1"
                                                    (skolem
                                                     -1
                                                     "ac_sol1")
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (reveal 1 2)
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (hide
                                                             -2
                                                             -3
                                                             -4)
                                                            (("1"
                                                              (hide
                                                               -2
                                                               -3)
                                                              (("1"
                                                                (lemma
                                                                 "nominal_AC_apply_nominal_AC_ac_step_vars_not_ac_cor")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "ac_sol1"
                                                                   "null"
                                                                   "unif_prb"
                                                                   "vars2avoid")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (hide
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (lemma
                                                                         "lex3_lt")
                                                                        (("1"
                                                                          (inst?
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (hide
                                                                               2)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (case
                                                                                   "vars_under2more(ac_sol1`1) = image(mimic_var(ac_sol1`2), vars_under2more(unif_prb))")
                                                                                  (("1"
                                                                                    (case
                                                                                     "card(vars_under2more(ac_sol1`1)) <= card(vars_under2more(unif_prb))")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "nominal_AC_apply_nominal_AC_ac_step_adm_subterms_leq")
                                                                                        (("1"
                                                                                          (hide
                                                                                           1)
                                                                                          (("1"
                                                                                            (inst?
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "append_null")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "lex2_lt")
                                                                                                    (("1"
                                                                                                      (inst?
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "nominal_AC_apply_nominal_AC_ac_step_adm_subterms")
                                                                                                                  (("1"
                                                                                                                    (inst?
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "append_null")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -2
                                                                                                                             -3
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "size"
                                                                                                                               1
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "size"
                                                                                                                                 1
                                                                                                                                 3)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "size_ge1")
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2
                                                                                       3)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "card_image[variable, variable]")
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (case
                                                                                       "strict_subset?(vars_under2more(ac_sol1`1), image(mimic_var(ac_sol1`2), vars_under2more(unif_prb)))")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "card_strict_subset[variable]")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "vars_under2more(ac_sol1`1)"
                                                                                           "image(mimic_var(ac_sol1`2), vars_under2more(unif_prb))")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -2
                                                                                               -3
                                                                                               1)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "card_image[variable, variable]")
                                                                                                (("1"
                                                                                                  (inst?
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "nominal_AC_apply_nominal_AC_ac_step_vars_under2more")
                                                                                        (("2"
                                                                                          (inst?
                                                                                           -1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "append_null")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "strict_subset?"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "append_null")
                                                                                                (("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "choose_unif_correct")
                                                                                                    (("2"
                                                                                                      (inst?
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "all_ac_prb?"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "no_var_pair?"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (skolem
                                                                                                               1
                                                                                                               "t1")
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "member_unif_prb_equiv")
                                                                                                                  (("1"
                                                                                                                    (skolem
                                                                                                                     -2
                                                                                                                     "unif_pair1")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "unif_pair1")
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (reveal
                                                                                                           -15
                                                                                                           -17
                                                                                                           -18
                                                                                                           -20
                                                                                                           -21)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (reveal
                                                                                                                   -19)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "ac_prb?"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "nominal_AC_term_ac_app_eta")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "t")
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -3
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -4
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -6
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -3
                                                                                                                                   -4
                                                                                                                                   -5
                                                                                                                                   -6)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 1)
                                                  (("2"
                                                    (replace -2)
                                                    (("2"
                                                      (lemma
                                                       "member_nth_lst[ac_sol_simp]")
                                                      (("2"
                                                        (inst? -1)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((unif_prb type-eq-decl nil nominal_AC_unification nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (size def-decl "nat" nominal_AC_unification nil)
    (no_var_pair? const-decl "bool" nominal_AC_unification nil)
    (ac_prb? const-decl "bool" nominal_AC_unification nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (all_ac_prb? const-decl "bool" nominal_AC_unification nil)
    (nominal_AC_term_ac_app_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (size_ge1 formula-decl nil nominal_AC_term_properties nil)
    (member_nth_lst formula-decl nil list_aux_equational_reasoning nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (constant type-eq-decl nil nominal_AC_term_properties nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil))
   nil
   (ac_match termination-subtype "nominal_AC_ac_match_alg.input_lst"
    "[{z: nominal_AC_ac_step.nice_input | ordinals.<(lex3.lex3(finite_sets[variable].card(nominal_AC_unification.vars(z`2)), nominal_AC_ac_step.max_size(z`2), nominal_AC_ac_step.num_max_size(z`2)), lex3.lex3(finite_sets[variable].card(nominal_AC_unification.vars(nominal_AC_ac_match_alg.input`2)), nominal_AC_ac_step.max_size(nominal_AC_ac_match_alg.input`2), nominal_AC_ac_step.num_max_size(nominal_AC_ac_match_alg.input`2)))} -> list_adt[[nominal_AC_freshness.fresh_context, nominal_AC_substitution.sub]].list]")))
 (ac_match_TCC17 0
  (ac_match_TCC6-1 nil 3822387991
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (typepred "input")
          (("" (expand "nice_input?" -1)
            (("" (replace -3)
              (("" (flatten)
                (("" (replace -11 :dir rl)
                  (("" (expand "well_formed?" -7)
                    (("" (inst -7 "t")
                      (("" (assert)
                        (("" (use "choose_eq_mem1")
                          (("" (assert)
                            (("" (replace -15 :dir rl)
                              ((""
                                (rewrite "member_unif_prb_equiv")
                                ((""
                                  (inst 1 "up")
                                  (("" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil))
   nil
   (ac_match cases "nominal_AC_ac_match_alg.t"
    "nominal_AC_term[atom: TYPE+, perm: TYPE+, variable: TYPE+, f_symbol: TYPE, ac_symbol: TYPE]: DATATYPE
 BEGIN
  at(a: atom): atom?
  *(p: perm, V: variable): var?
  unit: unit?
  pair(term1: nominal_AC_term, term2: nominal_AC_term): pair?
  app(f_sym: f_symbol, arg: nominal_AC_term): app?
  ac_app(ac_sym: ac_symbol, ac_arg: nominal_AC_term): ac_app?
  abs(abstr: atom, body: nominal_AC_term): abs?
 END nominal_AC_term")))
 (ac_match_sound_inst 0
  (ac_match_sound_inst-1 nil 3887101182
   ("" (skolem 1 ("Del" "del" " input"))
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "G" "input`1")
          (("" (name-replace "P" "input`2")
            (("" (name-replace "sig" "input`3")
              (("" (name-replace "V" "input`4")
                (("" (name-replace "PV" "input`5")
                  (("" (name-replace "up" "choose_eq(P)`1")
                    (("" (name-replace "P1" "choose_eq(P)`2")
                      (("" (name-replace "t" "up`1")
                        (("" (name-replace "s" "up`2")
                          (("" (hide -1)
                            ((""
                              (name-replace "sig_"
                               "cons((V(t), ext(reverse(p(t)))(s)), null)")
                              ((""
                                (name-replace
                                 "G_"
                                 "nominal_AC_fresh_subs?(sig_, G)`1")
                                ((""
                                  (name-replace
                                   "b"
                                   "nominal_AC_fresh_subs?(sig_, G)`2")
                                  ((""
                                    (name-replace
                                     "new_G"
                                     "append(G_, G)")
                                    ((""
                                      (name-replace
                                       "new_sig"
                                       "append(sig_, sig)")
                                      ((""
                                        (name-replace
                                         "new_P"
                                         "apply_sub(sig_, P1)")
                                        ((""
                                          (expand "is_sol?")
                                          ((""
                                            (flatten)
                                            ((""
                                              (assert)
                                              ((""
                                                (delete -7)
                                                ((""
                                                  (prop)
                                                  (("1"
                                                    (expand "new_G" -3)
                                                    (("1"
                                                      (rewrite
                                                       "nominal_AC_fresh_subs_append_context")
                                                      (("1"
                                                        (prop)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "new_P" -4)
                                                    (("2"
                                                      (rewrite
                                                       "choose_eq_unifies"
                                                       1)
                                                      (("2"
                                                        (expand
                                                         "more_general?"
                                                         -5)
                                                        (("2"
                                                          (skolem
                                                           -5
                                                           "del1")
                                                          (("2"
                                                            (prop)
                                                            (("1"
                                                              (reveal
                                                               -7
                                                               -8
                                                               -10)
                                                              (("1"
                                                                (replace
                                                                 -3)
                                                                (("1"
                                                                  (expand
                                                                   "unifies?"
                                                                   1)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -2)
                                                                      (("1"
                                                                        (lemma
                                                                         "equal_sub_change_eq_terms")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "Del"
                                                                           "del"
                                                                           "s"
                                                                           "append(del1, new_sig)"
                                                                           "t")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (hide
                                                                               2)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "subs_append2")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "subs_append2")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "new_sig"
                                                                                     1)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "subs_append2")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "subs_append2")
                                                                                        (("1"
                                                                                          (case
                                                                                           "disjoint?(dom(sig), vars(t, s))")
                                                                                          (("1"
                                                                                            (case
                                                                                             "subs(sig)(t) = t")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "subs(sig)(s) = s")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "nominal_AC_term_times_eta")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "t")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (reveal
                                                                                                           -7)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "subs_inst_correct")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "Del"
                                                                                                               "V(t)"
                                                                                                               "p(t)"
                                                                                                               "s"
                                                                                                               "del1")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (use
                                                                                                   "subs_no_effect_t")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       (-2
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "disjoint?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "empty?")
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 ("member"
                                                                                                                  "intersection"))
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (use
                                                                                               "subs_no_effect_t")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (hide-all-but
                                                                                                   (-1
                                                                                                    1))
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "disjoint?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "empty?")
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             (-1
                                                                                              -2
                                                                                              -3
                                                                                              1))
                                                                                            (("2"
                                                                                              (reveal
                                                                                               -19
                                                                                               -20)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "subset?(vars(t, s), vars(P))")
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "input")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "nice_input?")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -12)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -11)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             -3
                                                                                                             -4
                                                                                                             -5
                                                                                                             -6
                                                                                                             -7
                                                                                                             -8
                                                                                                             -9
                                                                                                             -11
                                                                                                             -12
                                                                                                             -13
                                                                                                             -14
                                                                                                             -15)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "disjoint?")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "empty?")
                                                                                                                (("1"
                                                                                                                  (skeep)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (use
                                                                                                   "choose_eq_vars")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -7)
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (reveal
                                                               -9)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (rewrite
                                                                   "unifies?_equiv"
                                                                   1)
                                                                  (("2"
                                                                    (skolem
                                                                     1
                                                                     "up1")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (rewrite
                                                                         "unifies?_equiv"
                                                                         -6)
                                                                        (("2"
                                                                          (inst
                                                                           -6
                                                                           "apply_sub(sig_, up1)")
                                                                          (("2"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand
                                                                               "unifies?")
                                                                              (("1"
                                                                                (expand
                                                                                 "apply_sub"
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "new_sig"
                                                                                   -7)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "subs_unify_alg_aux")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "Del"
                                                                                       "del"
                                                                                       "del1"
                                                                                       "up1`2"
                                                                                       "sig"
                                                                                       "sig_"
                                                                                       "up1`1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1
                                                                                           -7
                                                                                           2)
                                                                                          (("1"
                                                                                            (case
                                                                                             "disjoint?(dom(sig), vars(P))")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -6
                                                                                                 -7)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "disjoint?")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "empty?")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -2
                                                                                                         "x")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           ("member"
                                                                                                            "intersection")
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             ("member"
                                                                                                              "intersection")
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "choose_eq_vars")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -4)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "subset?"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "vars_unif_prb"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "member"
                                                                                                                               -3)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "union"
                                                                                                                                 -3)
                                                                                                                                (("1"
                                                                                                                                  (prop)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "up1`1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "member_unif_prb_equiv")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "up1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "up1`2")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "member_unif_prb_equiv")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "up1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "sig_"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "idempotent_cons")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (case
                                                                                                 "subset?(vars(img(sig_)), vars(P))")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (-1
                                                                                                    -2
                                                                                                    1))
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     ("disjoint?"
                                                                                                      "subset?"))
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   -1
                                                                                                   -6
                                                                                                   -7
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "subset?"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sig_"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "img_basic_sub_var")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subset?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "x")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "ext_vars")
                                                                                                                    (("2"
                                                                                                                      (reveal
                                                                                                                       -17
                                                                                                                       -20)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "choose_eq_vars")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -3)
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (hide-all-but
                                                                                                                               (-2
                                                                                                                                -3
                                                                                                                                -5
                                                                                                                                1))
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -5
                                                                                               -6
                                                                                               2)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "input")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "nice_input?")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       ("sig"
                                                                                                        "P"))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (hide-all-but
                                                                                                           (-2
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (rewrite
                                                                               "apply_sub_unif_pair")
                                                                              (("2"
                                                                                (inst
                                                                                 1
                                                                                 "up1")
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (expand
                                                     "more_general?")
                                                    (("3"
                                                      (skolem
                                                       -5
                                                       "del1")
                                                      (("3"
                                                        (expand
                                                         "new_sig"
                                                         -5)
                                                        (("3"
                                                          (inst
                                                           1
                                                           "append(del1, sig_)")
                                                          (("3"
                                                            (rewrite
                                                             "append_assoc")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (nominal_AC_fresh_subs_append_context formula-decl nil nominal_AC_fresh_subs nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (unifies?_equiv formula-decl nil nominal_AC_unification nil)
    (apply_sub const-decl "unif_pair" nominal_AC_unification nil)
    (apply_sub_unif_pair formula-decl nil nominal_AC_unification nil)
    (P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (sig skolem-const-decl "sub" nominal_AC_ac_match_alg nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (vars_unif_prb formula-decl nil nominal_AC_unification nil)
    (sig_ skolem-const-decl
     "(cons?[[variable, nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]])"
     nominal_AC_ac_match_alg nil)
    (idempotent_cons formula-decl nil nominal_AC_substitution nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (img_basic_sub_var formula-decl nil nominal_AC_substitution nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (subs_unify_alg_aux formula-decl nil nominal_AC_substitution nil)
    (unifies? const-decl "bool" nominal_AC_unification nil)
    (disjoint? const-decl "bool" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (empty? const-decl "bool" sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (singleton const-decl "(singleton?)" sets nil)
    (union const-decl "set" sets nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (subs_inst_correct formula-decl nil nominal_AC_substitution nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (subset? const-decl "bool" sets nil)
    (new_sig skolem-const-decl
     "list[[variable, nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]]"
     nominal_AC_ac_match_alg nil)
    (subs_append2 formula-decl nil nominal_AC_substitution nil)
    (equal_sub_change_eq_terms formula-decl nil nominal_AC_substitution nil)
    (more_general? const-decl "bool" nominal_AC_substitution nil)
    (new_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (append_assoc formula-decl nil list_props nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (append def-decl "list[T]" list_props nil)
    (nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil))
   shostak))
 (ac_match_sound_abs 0
  (ac_match_sound_abs-1 nil 3887188142
   ("" (skolem 1 ("Del" "del" "input"))
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "G" "input`1")
          (("" (name-replace "P" "input`2")
            (("" (name-replace "sig" "input`3")
              (("" (name-replace "V" "input`4")
                (("" (name-replace "PV" "input`5")
                  (("" (name-replace "up" "choose_eq(P)`1")
                    (("" (name-replace "P1" "choose_eq(P)`2")
                      (("" (name-replace "t" "up`1")
                        (("" (name-replace "s" "up`2")
                          (("" (hide -1)
                            ((""
                              (name-replace "b"
                               "fresh?(abstr(t), body(s))`2")
                              ((""
                                (name-replace
                                 "G_"
                                 "fresh?(abstr(t), body(s))`1")
                                ((""
                                  (name-replace
                                   "pi"
                                   "cons((abstr(t), abstr(s)), null)")
                                  ((""
                                    (name-replace
                                     "dec_P"
                                     "decompose(body(t), ext(pi)(body(s)))`1")
                                    ((""
                                      (name-replace
                                       "new_P"
                                       "append(dec_P, P1)")
                                      ((""
                                        (name-replace
                                         "new_G"
                                         "append(G_, G)")
                                        ((""
                                          (hide 2)
                                          ((""
                                            (expand "is_sol?")
                                            ((""
                                              (flatten)
                                              ((""
                                                (assert)
                                                ((""
                                                  (expand "new_G" -5)
                                                  ((""
                                                    (rewrite
                                                     "nominal_AC_fresh_subs_append_context")
                                                    ((""
                                                      (flatten)
                                                      ((""
                                                        (assert)
                                                        ((""
                                                          (rewrite
                                                           "choose_eq_unifies"
                                                           2)
                                                          ((""
                                                            (prop)
                                                            (("1"
                                                              (reveal
                                                               -8
                                                               -9
                                                               -10
                                                               -11)
                                                              (("1"
                                                                (replace
                                                                 -4)
                                                                (("1"
                                                                  (hide
                                                                   -9
                                                                   -10
                                                                   -12
                                                                   -13)
                                                                  (("1"
                                                                    (expand
                                                                     "new_P"
                                                                     -9)
                                                                    (("1"
                                                                      (rewrite
                                                                       "unifies?_append")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (hide
                                                                           -10)
                                                                          (("1"
                                                                            (expand
                                                                             "dec_P"
                                                                             -9)
                                                                            (("1"
                                                                              (reveal
                                                                               -9)
                                                                              (("1"
                                                                                (reveal
                                                                                 1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "decompose_correct_abs2")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "Del"
                                                                                     "abstr(t)"
                                                                                     "abstr(s)"
                                                                                     "body(s)"
                                                                                     "del"
                                                                                     "body(t)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "nominal_AC_term_abs_eta")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "t")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "nominal_AC_term_abs_eta")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "s")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "up = (t, s)")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (decompose-equality
                                                                                                               1)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "decompose_ext")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "pi"
                                                                                                 "body(s)"
                                                                                                 "body(t)")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (hide
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               -5
                                                                                               -10
                                                                                               3)
                                                                                              (("3"
                                                                                                (reveal
                                                                                                 -12
                                                                                                 -4)
                                                                                                (("3"
                                                                                                  (use
                                                                                                   "nominal_AC_fresh_subs_fresh")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    (("3"
                                                                                                      (reveal
                                                                                                       -15)
                                                                                                      (("3"
                                                                                                        (use
                                                                                                         "fresh?_is_fresh")
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "new_P"
                                                               -7)
                                                              (("2"
                                                                (rewrite
                                                                 "unifies?_append")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (expand
                                                                     "P1"
                                                                     -8)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (fresh? def-decl "[fresh_context, bool]" nominal_AC_freshness nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (append def-decl "list[T]" list_props nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (unifies?_append formula-decl nil nominal_AC_unification nil)
    (decompose_correct_abs2 formula-decl nil nominal_AC_unification nil)
    (nominal_AC_fresh_subs_fresh formula-decl nil nominal_AC_fresh_subs nil)
    (fresh?_is_fresh formula-decl nil nominal_AC_freshness nil)
    (decompose_ext formula-decl nil nominal_AC_unification nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (dec_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (nominal_AC_fresh_subs_append_context formula-decl nil nominal_AC_fresh_subs nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil))
   shostak))
 (ac_match_sound 0
  (ac_match_sound-2 nil 3888090888
   (""
    (measure-induct
     "lex3(card(vars(input`2)), max_size(input`2), num_max_size(input`2))"
     "input")
    (("" (skolem 1 "input")
      (("" (prop)
        (("" (skolem 1 ("Del" "G1" "del" "sig1"))
          (("" (flatten)
            (("" (hide -1)
              (("" (name-replace "G" "input`1")
                (("" (name-replace "P" "input`2")
                  (("" (name-replace "sig" "input`3")
                    (("" (name-replace "V" "input`4")
                      (("" (name-replace "PV" "input`5")
                        (("" (reveal -1 -2 -3 -4)
                          (("" (expand "ac_match" -7)
                            (("" (lift-if)
                              ((""
                                (replace -1)
                                ((""
                                  (replace -2)
                                  ((""
                                    (replace -3)
                                    ((""
                                      (replace -4)
                                      ((""
                                        (replace -5)
                                        ((""
                                          (split -7)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "member" -2)
                                              (("1"
                                                (expand "member" -2)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (replace -2)
                                                    (("1"
                                                      (replace -3)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (name-replace
                                               "up"
                                               "choose_eq(P)`1")
                                              (("2"
                                                (name-replace
                                                 "P1"
                                                 "choose_eq(P)`2")
                                                (("2"
                                                  (name-replace
                                                   "t"
                                                   "up`1")
                                                  (("2"
                                                    (name-replace
                                                     "s"
                                                     "up`2")
                                                    (("2"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (split -2)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (reveal
                                                               -9)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "(G, P1, sig, V, PV)")
                                                                (("1"
                                                                  (replace
                                                                   -7)
                                                                  (("1"
                                                                    (prop)
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "is_sol?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (delete
                                                                                 -5
                                                                                 -18)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1
                                                                                   -3
                                                                                   -4)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -5
                                                                                     -6
                                                                                     -7
                                                                                     -8
                                                                                     -9)
                                                                                    (("1"
                                                                                      (reveal
                                                                                       -6
                                                                                       -7
                                                                                       -8
                                                                                       -9)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "choose_eq_unifies"
                                                                                         2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "unifies?"
                                                                                               2)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -6)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "nominal_AC_term_at_eta")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "equal?_ref")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "ac_match_TCC2")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "input"
                                                                         "G"
                                                                         "P"
                                                                         "sig"
                                                                         "V"
                                                                         "PV")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (reveal
                                                                             -2
                                                                             -3
                                                                             -4
                                                                             -5)
                                                                            (("2"
                                                                              (inst
                                                                               -5
                                                                               "up"
                                                                               "P1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -5
                                                                                   "t"
                                                                                   "s")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -5
                                                                                       "a(t)")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "nominal_AC_term_at_eta")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "t")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (expand
                                                               "member"
                                                               -1)
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (hide 1)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (split
                                                                 -2)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (hide
                                                                       -3
                                                                       -4
                                                                       -5
                                                                       -6
                                                                       -7)
                                                                      (("1"
                                                                        (name-replace
                                                                         "sig_"
                                                                         "cons((V(t), ext(reverse(p(t)))(s)), null)")
                                                                        (("1"
                                                                          (name-replace
                                                                           "G_"
                                                                           "nominal_AC_fresh_subs?(sig_, G)`1")
                                                                          (("1"
                                                                            (name-replace
                                                                             "b"
                                                                             "nominal_AC_fresh_subs?(sig_, G)`2")
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (name-replace
                                                                                     "new_G"
                                                                                     "append(G_, G)")
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "new_P"
                                                                                       "apply_sub(sig_, P1)")
                                                                                      (("1"
                                                                                        (name-replace
                                                                                         "new_sig"
                                                                                         "append(sig_, sig)")
                                                                                        (("1"
                                                                                          (reveal
                                                                                           -16)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "(new_G, new_P, new_sig, V, PV)")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "Del"
                                                                                                 "G1"
                                                                                                 "del"
                                                                                                 "sig1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "ac_match_sound_inst")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "Del"
                                                                                                       "del"
                                                                                                       "(G, P, sig, V, PV)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (reveal
                                                                                                           -10
                                                                                                           -11
                                                                                                           -12
                                                                                                           -13)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (reveal
                                                                                                                       -3
                                                                                                                       -4
                                                                                                                       -5
                                                                                                                       -7)
                                                                                                                      (("1"
                                                                                                                        (reveal
                                                                                                                         -8)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -3)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -5)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -4)
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "input")
                                                                                                        (("2"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "input = (G, P, sig, V, PV)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (decompose-equality
                                                                                                               1)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "ac_match_TCC4")
                                                                                                (("2"
                                                                                                  (reveal
                                                                                                   -1
                                                                                                   -2
                                                                                                   -3
                                                                                                   -4
                                                                                                   -5
                                                                                                   -6
                                                                                                   -7
                                                                                                   -8
                                                                                                   -9
                                                                                                   -10
                                                                                                   -11
                                                                                                   -12
                                                                                                   -13
                                                                                                   -14
                                                                                                   -15)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -16
                                                                                                     "input"
                                                                                                     "G"
                                                                                                     "P"
                                                                                                     "sig"
                                                                                                     "V"
                                                                                                     "PV")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -16
                                                                                                         "up"
                                                                                                         "P1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -16
                                                                                                             "t"
                                                                                                             "s")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -16
                                                                                                                 "p(t)"
                                                                                                                 "V(t)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "nominal_AC_term_times_eta")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -17
                                                                                                                         "sig_")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -17
                                                                                                                             "G_"
                                                                                                                             "b")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -17
                                                                                                                                 "new_G"
                                                                                                                                 "new_sig"
                                                                                                                                 "new_P")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "member"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide
                                                                     1)
                                                                    (("2"
                                                                      (split
                                                                       -1)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (name-replace
                                                                             "new_G"
                                                                             "append(fc(DS(p(t), p(s)), V(t)), G)")
                                                                            (("1"
                                                                              (reveal
                                                                               -10)
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "(new_G, P1, sig, V, PV)")
                                                                                (("1"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "Del"
                                                                                     "G1"
                                                                                     "del"
                                                                                     "sig1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "is_sol?")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (delete
                                                                                               -5
                                                                                               -19)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "new_G"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "nominal_AC_fresh_subs_append_context")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "choose_eq_unifies")
                                                                                                  (("2"
                                                                                                    (reveal
                                                                                                     -5
                                                                                                     -6)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -2)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -11
                                                                                                           -12
                                                                                                           -13
                                                                                                           -14
                                                                                                           -15
                                                                                                           -17
                                                                                                           -9
                                                                                                           -4)
                                                                                                          (("2"
                                                                                                            (reveal
                                                                                                             -7
                                                                                                             -8)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "unifies?"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "new_G"
                                                                                                                     -5)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "nominal_AC_fresh_subs_append_context")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "subs_equal?")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "fc(DS(p(t), p(s)), V(t))"
                                                                                                                             "Del"
                                                                                                                             "s"
                                                                                                                             "del"
                                                                                                                             "t")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "equal?"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "a")
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "fc_member")
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "DS_member"
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "member"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "ac_match_TCC6")
                                                                                    (("2"
                                                                                      (hide
                                                                                       -11
                                                                                       3)
                                                                                      (("2"
                                                                                        (reveal
                                                                                         -2
                                                                                         -3
                                                                                         -4
                                                                                         -5
                                                                                         -6
                                                                                         2)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -6
                                                                                           "input"
                                                                                           "G"
                                                                                           "P"
                                                                                           "sig"
                                                                                           "V"
                                                                                           "PV")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -6
                                                                                               "up"
                                                                                               "P1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -6
                                                                                                   "t"
                                                                                                   "s")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -6
                                                                                                       "p(t)"
                                                                                                       "V(t)")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "nominal_AC_term_times_eta")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               -7)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "new_G")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "member"
                                                                           -1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (hide
                                                                 1)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "member"
                                                                       -2
                                                                       2)
                                                                      (("1"
                                                                        (split
                                                                         -2)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (reveal
                                                                             -9)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "(G, P1, sig, V, PV)")
                                                                              (("1"
                                                                                (prop)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "Del"
                                                                                   "G1"
                                                                                   "del"
                                                                                   "sig1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "is_sol?")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "choose_eq_unifies"
                                                                                             2)
                                                                                            (("1"
                                                                                              (reveal
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               -5)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -12
                                                                                                   -13
                                                                                                   -14
                                                                                                   -15
                                                                                                   -16)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "unifies?"
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "t = unit")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -10)
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "equal?_ref")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -12)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "ac_match_TCC8")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -1
                                                                                     "input"
                                                                                     "G"
                                                                                     "P"
                                                                                     "sig"
                                                                                     "V"
                                                                                     "PV")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "up"
                                                                                         "P1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (reveal
                                                                                             -3
                                                                                             -4
                                                                                             -5
                                                                                             -6)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -5
                                                                                                 "t"
                                                                                                 "s")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (expand
                                                                                 "member"
                                                                                 -2)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (name-replace
                                                                                   "f"
                                                                                   "f_sym(t)")
                                                                                  (("2"
                                                                                    (name-replace
                                                                                     "dec_P"
                                                                                     "decompose(arg(t), arg(s))`1")
                                                                                    (("2"
                                                                                      (name-replace
                                                                                       "new_P"
                                                                                       "append(dec_P, P1)")
                                                                                      (("2"
                                                                                        (reveal
                                                                                         -12)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "(G, new_P, sig, V, PV)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "Del"
                                                                                                 "G1"
                                                                                                 "del"
                                                                                                 "sig1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "is_sol?")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "new_P"
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "unifies?_append"
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -4
                                                                                                                 -5
                                                                                                                 -12
                                                                                                                 -13
                                                                                                                 -14
                                                                                                                 -15
                                                                                                                 -17
                                                                                                                 -18
                                                                                                                 -19
                                                                                                                 -20
                                                                                                                 -21)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "choose_eq_unifies"
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (reveal
                                                                                                                       -11
                                                                                                                       -12
                                                                                                                       -13
                                                                                                                       -14)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -4)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "decompose_correct_app")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "Del"
                                                                                                                               "f"
                                                                                                                               "arg(s)"
                                                                                                                               "del"
                                                                                                                               "arg(t)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "dec_P"
                                                                                                                                   -7)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -7)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "nominal_AC_term_app_eta")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "t")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "f")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -12
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "nominal_AC_term_app_eta")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "s")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "up = (t, s)")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (decompose-equality
                                                                                                                                                           1)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "ac_match_TCC10")
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -12
                                                                                                   3
                                                                                                   -5)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "input"
                                                                                                     "G"
                                                                                                     "P"
                                                                                                     "sig"
                                                                                                     "V"
                                                                                                     "PV")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -4
                                                                                                         -5
                                                                                                         -6
                                                                                                         -7
                                                                                                         -8
                                                                                                         -9
                                                                                                         -10)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -8
                                                                                                           "up"
                                                                                                           "P1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -8
                                                                                                               "t"
                                                                                                               "s")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -8
                                                                                                                   "f"
                                                                                                                   "arg(t)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -8)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "dec_P"
                                                                                                                         "new_P")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "f"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           "nominal_AC_term_app_eta")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (hide
                                                                             1)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (split
                                                                                   -2)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member"
                                                                                       -2)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (split
                                                                                       -3)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (name-replace
                                                                                             "dec_P"
                                                                                             "decompose(body(t), body(s))`1")
                                                                                            (("1"
                                                                                              (name-replace
                                                                                               "new_P"
                                                                                               "append(dec_P, P1)")
                                                                                              (("1"
                                                                                                (reveal
                                                                                                 -11)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "(G, new_P, sig, V, PV)")
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "Del"
                                                                                                       "G1"
                                                                                                       "del"
                                                                                                       "sig1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -12)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "is_sol?")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "new_P"
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "choose_eq_unifies"
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "unifies?_append"
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -12
                                                                                                                             -13
                                                                                                                             -14
                                                                                                                             -15
                                                                                                                             -16)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -1
                                                                                                                               -4
                                                                                                                               -5
                                                                                                                               -6)
                                                                                                                              (("1"
                                                                                                                                (reveal
                                                                                                                                 -9
                                                                                                                                 -10
                                                                                                                                 -11
                                                                                                                                 -12
                                                                                                                                 -13)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -5)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "decompose_correct_abs1")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "Del"
                                                                                                                                       "abstr(t)"
                                                                                                                                       "body(s)"
                                                                                                                                       "del"
                                                                                                                                       "body(t)")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -7)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "nominal_AC_term_abs_eta")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "t")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -10
                                                                                                                                                     -2)
                                                                                                                                                    (("1"
                                                                                                                                                      (lemma
                                                                                                                                                       "nominal_AC_term_abs_eta")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "s")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "up = (t, s)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               1)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (rewrite
                                                                                                                         "unifies?_append"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "P1"
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -11
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "ac_match_TCC12")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "input"
                                                                                                           "G"
                                                                                                           "P"
                                                                                                           "sig"
                                                                                                           "V"
                                                                                                           "PV")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "up"
                                                                                                               "P1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (reveal
                                                                                                                   -5
                                                                                                                   -6
                                                                                                                   -7
                                                                                                                   -8
                                                                                                                   -9
                                                                                                                   -10)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -7
                                                                                                                       "t"
                                                                                                                       "s")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -7
                                                                                                                           "abstr(t)"
                                                                                                                           "body(t)")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               -7)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "dec_P"
                                                                                                                                 "new_P")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (use
                                                                                                                                 "nominal_AC_term_abs_eta")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (name-replace
                                                                                             "b"
                                                                                             "fresh?(abstr(t), body(s))`2")
                                                                                            (("2"
                                                                                              (name-replace
                                                                                               "G_"
                                                                                               "fresh?(abstr(t), body(s))`1")
                                                                                              (("2"
                                                                                                (name-replace
                                                                                                 "pi"
                                                                                                 "cons((abstr(t), abstr(s)), null)")
                                                                                                (("2"
                                                                                                  (name-replace
                                                                                                   "dec_P"
                                                                                                   "decompose(body(t), ext(pi)(body(s)))`1")
                                                                                                  (("2"
                                                                                                    (name-replace
                                                                                                     "new_P"
                                                                                                     "append(dec_P, P1)")
                                                                                                    (("2"
                                                                                                      (name-replace
                                                                                                       "new_G"
                                                                                                       "append(G_, G)")
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (reveal
                                                                                                               -15)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "(new_G, new_P, sig, V, PV)")
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "Del"
                                                                                                                     "G1"
                                                                                                                     "del"
                                                                                                                     "sig1")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -12)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "ac_match_sound_abs")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "Del"
                                                                                                                             "del"
                                                                                                                             "input")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -7)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -8)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -9)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -10)
                                                                                                                                      (("1"
                                                                                                                                        (reveal
                                                                                                                                         -10
                                                                                                                                         -11
                                                                                                                                         -12
                                                                                                                                         -13)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -11
                                                                                                                                           -12
                                                                                                                                           -13
                                                                                                                                           -14
                                                                                                                                           -15)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -4)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -3)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "b"
                                                                                                                                                       -6)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (reveal
                                                                                                                                                           -5
                                                                                                                                                           -6
                                                                                                                                                           -7
                                                                                                                                                           -8
                                                                                                                                                           -9)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -5)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -4)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -3)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide
                                                                                                                     -2
                                                                                                                     4)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "ac_match_TCC14")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "input"
                                                                                                                         "G"
                                                                                                                         "P"
                                                                                                                         "sig"
                                                                                                                         "V"
                                                                                                                         "PV")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (reveal
                                                                                                                             -3
                                                                                                                             -4
                                                                                                                             -5
                                                                                                                             -6
                                                                                                                             -7
                                                                                                                             -8
                                                                                                                             -9
                                                                                                                             -10
                                                                                                                             -11
                                                                                                                             -12)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -16
                                                                                                                               -17
                                                                                                                               -18
                                                                                                                               -19
                                                                                                                               -20)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -11
                                                                                                                                 "up"
                                                                                                                                 "P1")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -11
                                                                                                                                     "t"
                                                                                                                                     "s")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -11
                                                                                                                                         "abstr(t)"
                                                                                                                                         "body(t)")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (split
                                                                                                                                             -11)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -1
                                                                                                                                               "G_"
                                                                                                                                               "b")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "new_G"
                                                                                                                                                   "pi"
                                                                                                                                                   "dec_P"
                                                                                                                                                   "new_P")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (lemma
                                                                                                                                               "nominal_AC_term_abs_eta")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "t")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "member"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (hide
                                                                                   1)
                                                                                  (("2"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "member"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (name-replace
                                                                                           "inp_lst"
                                                                                           "apply_ac(G, cons((t, s), P1), sig, V, PV)")
                                                                                          (("2"
                                                                                            (reveal
                                                                                             -1)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "mem_flatten_map2")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 -4
                                                                                                 "inp1")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "inp_lst"
                                                                                                     -4)
                                                                                                    (("2"
                                                                                                      (reveal
                                                                                                       -10)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "inp1")
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "Del"
                                                                                                             "G1"
                                                                                                             "del"
                                                                                                             "sig1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "inp1`5 = PV")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "apply_ac_sound")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "Del"
                                                                                                                       "del"
                                                                                                                       "(G, P, sig, V, PV)"
                                                                                                                       "inp1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (reveal
                                                                                                                           -6
                                                                                                                           -7)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (reveal
                                                                                                                                 -4
                                                                                                                                 -5)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "ac_prb?"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "pair?(t)")
                                                                                                                                          (("1"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -5
                                                                                                                                              2))
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "P")
                                                                                                                                              (("1"
                                                                                                                                                (typepred
                                                                                                                                                 "input")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "nice_input?")
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "well_formed_unif_prb"
                                                                                                                                                       -7)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -7
                                                                                                                                                         "t")
                                                                                                                                                        (("1"
                                                                                                                                                          (prop)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "well_formed?"
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (use
                                                                                                                                                             "choose_eq_mem1")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "member_unif_prb_equiv"
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   1
                                                                                                                                                                   "up")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (1
                                                                                                                                              2))
                                                                                                                                            (("2"
                                                                                                                                              (reveal
                                                                                                                                               3
                                                                                                                                               4
                                                                                                                                               5
                                                                                                                                               6
                                                                                                                                               7)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (case
                                                                                                                         "input = (G, P, sig, V, PV)")
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "input")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (decompose-equality
                                                                                                                           1)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "apply_ac_mem5")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "ac_match_TCC16")
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -12
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "input"
                                                                                                                 "G"
                                                                                                                 "P"
                                                                                                                 "sig"
                                                                                                                 "V"
                                                                                                                 "PV")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -9)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -7
                                                                                                                       -8
                                                                                                                       -9
                                                                                                                       -10
                                                                                                                       -11)
                                                                                                                      (("2"
                                                                                                                        (reveal
                                                                                                                         -5
                                                                                                                         -6
                                                                                                                         -7
                                                                                                                         -8)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -5
                                                                                                                           "up"
                                                                                                                           "P1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -5
                                                                                                                               "t"
                                                                                                                               "s")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -5
                                                                                                                                   "ac_sym(t)"
                                                                                                                                   "ac_arg(t)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (use
                                                                                                                                       "nominal_AC_term_ac_app_eta")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (reveal
                                                                                                                                           -8)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -7
                                                                                                                                             "inp_lst")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (rewrite
                                                                                                                                                 "every_nth")
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "inp1")
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "member_nth2")
                                                                                                                                                    (("2"
                                                                                                                                                      (skolem
                                                                                                                                                       -12
                                                                                                                                                       "i")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -8
                                                                                                                                                         "i")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (ac_match_TCC2 termination-tcc nil nominal_AC_ac_match_alg nil)
    (a adt-accessor-decl "[(atom?) -> atom]" nominal_AC_term_adt nil)
    (unifies? const-decl "bool" nominal_AC_unification nil)
    (nominal_AC_term_at_eta formula-decl nil nominal_AC_term_adt nil)
    (equal?_ref formula-decl nil nominal_AC_equality nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (atom? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (ac_match_TCC8 termination-tcc nil nominal_AC_ac_match_alg nil)
    (unit adt-constructor-decl "(unit?)" nominal_AC_term_adt nil)
    (unit? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (ac_match_TCC12 termination-tcc nil nominal_AC_ac_match_alg nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (decompose_correct_abs1 formula-decl nil nominal_AC_unification nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (ac_match_sound_abs formula-decl nil nominal_AC_ac_match_alg nil)
    (b skolem-const-decl "bool" nominal_AC_ac_match_alg nil)
    (ac_match_TCC14 termination-tcc nil nominal_AC_ac_match_alg nil)
    (fresh? def-decl "[fresh_context, bool]" nominal_AC_freshness nil)
    (apply_ac const-decl "list[nice_input]" nominal_AC_ac_step nil)
    (mem_flatten_map2 formula-decl nil list_aux_equational_reasoning2parameters nil)
    (apply_ac_mem5 formula-decl nil nominal_AC_ac_step nil)
    (pair? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (well_formed_unif_prb formula-decl nil nominal_AC_unification nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (well_formed? const-decl "bool" nominal_AC_term_properties nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (ac_prb? const-decl "bool" nominal_AC_unification nil)
    (apply_ac_sound formula-decl nil nominal_AC_ac_step nil)
    (ac_arg adt-accessor-decl "[(ac_app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" nominal_AC_term_adt nil)
    (ac_app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (nominal_AC_term_ac_app_eta formula-decl nil nominal_AC_term_adt nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member_nth2 formula-decl nil list_aux_equational_reasoning nil)
    (pre_nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (every_nth formula-decl nil list_props nil)
    (ac_match_TCC16 termination-tcc nil nominal_AC_ac_match_alg nil)
    (inp_lst skolem-const-decl "list[nice_input]" nominal_AC_ac_match_alg nil)
    (f_sym adt-accessor-decl "[(app?) -> f_symbol]" nominal_AC_term_adt nil)
    (app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (string type-eq-decl nil strings nil)
    (dec_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (nominal_AC_term_app_eta formula-decl nil nominal_AC_term_adt nil)
    (f skolem-const-decl "f_symbol" nominal_AC_ac_match_alg nil)
    (decompose_correct_app formula-decl nil nominal_AC_unification nil)
    (unifies?_append formula-decl nil nominal_AC_unification nil)
    (ac_match_TCC10 termination-tcc nil nominal_AC_ac_match_alg nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (arg adt-accessor-decl "[(app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (subs_equal? formula-decl nil nominal_AC_fresh_subs nil)
    (fc_member formula-decl nil nominal_AC_freshness nil)
    (member const-decl "bool" sets nil)
    (DS_member formula-decl nil atoms nil)
    (ds const-decl "set[atom]" atoms nil)
    (equal? def-decl "bool" nominal_AC_equality nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (nominal_AC_fresh_subs_append_context formula-decl nil nominal_AC_fresh_subs nil)
    (ac_match_TCC6 termination-tcc nil nominal_AC_ac_match_alg nil)
    (every adt-def-decl "boolean" list_adt nil)
    (fc def-decl "fresh_context" nominal_AC_freshness nil)
    (DS const-decl "list[atom]" atoms nil)
    (nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (G skolem-const-decl "fresh_context" nominal_AC_ac_match_alg nil)
    (P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (sig skolem-const-decl "sub" nominal_AC_ac_match_alg nil)
    (V skolem-const-decl "finite_set[variable]" nominal_AC_ac_match_alg nil)
    (PV skolem-const-decl "finite_set[variable]" nominal_AC_ac_match_alg nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (ac_match_sound_inst formula-decl nil nominal_AC_ac_match_alg nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_match_TCC4 termination-tcc nil nominal_AC_ac_match_alg nil)
    (append def-decl "list[T]" list_props nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (reverse def-decl "list[T]" list_props nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (member def-decl "bool" list_props nil)
    (ac_match def-decl "list[[fresh_context, sub]]" nominal_AC_ac_match_alg nil)
    (well_founded_le formula-decl nil ordinals nil)
    (< def-decl "bool" ordinals nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (lex3 const-decl "ordinal" lex3 nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   nil)
  (ac_match_sound-1 nil 3887056429
   (""
    (measure-induct
     "lex3(card(vars(input`2)), max_size(input`2), num_max_size(input`2))"
     "input")
    (("" (skolem 1 "input")
      (("" (prop)
        (("" (skolem 1 ("Del" "G1" "del" "sig1"))
          (("" (flatten)
            (("" (hide -1)
              (("" (name-replace "G" "input`1")
                (("" (name-replace "P" "input`2")
                  (("" (name-replace "sig" "input`3")
                    (("" (name-replace "V" "input`4")
                      (("" (name-replace "PV" "input`5")
                        (("" (reveal -1 -2 -3 -4)
                          (("" (expand "ac_match" -7)
                            (("" (lift-if)
                              ((""
                                (replace -1)
                                ((""
                                  (replace -2)
                                  ((""
                                    (replace -3)
                                    ((""
                                      (replace -4)
                                      ((""
                                        (replace -5)
                                        ((""
                                          (split -7)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "member" -2)
                                              (("1"
                                                (expand "member" -2)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (replace -2)
                                                    (("1"
                                                      (replace -3)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (name-replace
                                               "up"
                                               "choose_eq(P)`1")
                                              (("2"
                                                (name-replace
                                                 "P1"
                                                 "choose_eq(P)`2")
                                                (("2"
                                                  (name-replace
                                                   "t"
                                                   "up`1")
                                                  (("2"
                                                    (name-replace
                                                     "s"
                                                     "up`2")
                                                    (("2"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (split -2)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (reveal
                                                               -9)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "(G, P1, sig, V, PV)")
                                                                (("1"
                                                                  (replace
                                                                   -7)
                                                                  (("1"
                                                                    (prop)
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "is_sol?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (delete
                                                                                 -5
                                                                                 -18)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1
                                                                                   -3
                                                                                   -4)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -5
                                                                                     -6
                                                                                     -7
                                                                                     -8
                                                                                     -9)
                                                                                    (("1"
                                                                                      (reveal
                                                                                       -6
                                                                                       -7
                                                                                       -8
                                                                                       -9)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "choose_eq_unifies"
                                                                                         2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "unifies?"
                                                                                               2)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -6)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "nominal_AC_term_at_eta")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "equal?_ref")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "ac_match_TCC2")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "input"
                                                                         "G"
                                                                         "P"
                                                                         "sig"
                                                                         "V"
                                                                         "PV")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (reveal
                                                                             -2
                                                                             -3
                                                                             -4
                                                                             -5)
                                                                            (("2"
                                                                              (inst
                                                                               -5
                                                                               "up"
                                                                               "P1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -5
                                                                                   "t"
                                                                                   "s")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -5
                                                                                       "a(t)")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "nominal_AC_term_at_eta")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "t")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (expand
                                                               "member"
                                                               -1)
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (hide 1)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (split
                                                                 -2)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (hide
                                                                       -3
                                                                       -4
                                                                       -5
                                                                       -6
                                                                       -7)
                                                                      (("1"
                                                                        (name-replace
                                                                         "sig_"
                                                                         "cons((V(t), ext(reverse(p(t)))(s)), null)")
                                                                        (("1"
                                                                          (name-replace
                                                                           "G_"
                                                                           "nominal_AC_fresh_subs?(sig, G)`1")
                                                                          (("1"
                                                                            (name-replace
                                                                             "b"
                                                                             "nominal_AC_fresh_subs?(sig, G)`2")
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (name-replace
                                                                                     "new_G"
                                                                                     "append(G_, G)")
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "new_P"
                                                                                       "apply_sub(sig_, P1)")
                                                                                      (("1"
                                                                                        (name-replace
                                                                                         "new_sig"
                                                                                         "append(sig_, sig)")
                                                                                        (("1"
                                                                                          (reveal
                                                                                           -16)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "(new_G, new_P, new_sig, V, PV)")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "Del"
                                                                                                 "G1"
                                                                                                 "del"
                                                                                                 "sig1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "ac_match_sound_inst")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "Del"
                                                                                                       "del"
                                                                                                       "(G, P, sig, V, PV)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (reveal
                                                                                                           -10
                                                                                                           -11
                                                                                                           -12
                                                                                                           -13)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (reveal
                                                                                                                       -3
                                                                                                                       -4
                                                                                                                       -5
                                                                                                                       -7)
                                                                                                                      (("1"
                                                                                                                        (reveal
                                                                                                                         -8)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -3)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -5)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -4)
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "input")
                                                                                                        (("2"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "input = (G, P, sig, V, PV)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (decompose-equality
                                                                                                               1)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "ac_match_TCC4")
                                                                                                (("2"
                                                                                                  (reveal
                                                                                                   -1
                                                                                                   -2
                                                                                                   -3
                                                                                                   -4
                                                                                                   -5
                                                                                                   -6
                                                                                                   -7
                                                                                                   -8
                                                                                                   -9
                                                                                                   -10
                                                                                                   -11
                                                                                                   -12
                                                                                                   -13
                                                                                                   -14
                                                                                                   -15)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -16
                                                                                                     "input"
                                                                                                     "G"
                                                                                                     "P"
                                                                                                     "sig"
                                                                                                     "V"
                                                                                                     "PV")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -16
                                                                                                         "up"
                                                                                                         "P1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -16
                                                                                                             "t"
                                                                                                             "s")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -16
                                                                                                                 "p(t)"
                                                                                                                 "V(t)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "nominal_AC_term_times_eta")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -17
                                                                                                                         "sig_")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -17
                                                                                                                             "G_"
                                                                                                                             "b")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -17
                                                                                                                                 "new_G"
                                                                                                                                 "new_sig"
                                                                                                                                 "new_P")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "member"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide
                                                                     1)
                                                                    (("2"
                                                                      (split
                                                                       -1)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (name-replace
                                                                             "new_G"
                                                                             "append(fc(DS(p(t), p(s)), V(t)), G)")
                                                                            (("1"
                                                                              (reveal
                                                                               -10)
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "(new_G, P1, sig, V, PV)")
                                                                                (("1"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "Del"
                                                                                     "G1"
                                                                                     "del"
                                                                                     "sig1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "is_sol?")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (delete
                                                                                               -5
                                                                                               -19)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "new_G"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "nominal_AC_fresh_subs_append_context")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "choose_eq_unifies")
                                                                                                  (("2"
                                                                                                    (reveal
                                                                                                     -5
                                                                                                     -6)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -2)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -11
                                                                                                           -12
                                                                                                           -13
                                                                                                           -14
                                                                                                           -15
                                                                                                           -17
                                                                                                           -9
                                                                                                           -4)
                                                                                                          (("2"
                                                                                                            (reveal
                                                                                                             -7
                                                                                                             -8)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "unifies?"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "new_G"
                                                                                                                     -5)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "nominal_AC_fresh_subs_append_context")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "subs_equal?")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "fc(DS(p(t), p(s)), V(t))"
                                                                                                                             "Del"
                                                                                                                             "s"
                                                                                                                             "del"
                                                                                                                             "t")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "equal?"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "a")
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "fc_member")
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "DS_member"
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "member"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "ac_match_TCC6")
                                                                                    (("2"
                                                                                      (hide
                                                                                       -11
                                                                                       3)
                                                                                      (("2"
                                                                                        (reveal
                                                                                         -2
                                                                                         -3
                                                                                         -4
                                                                                         -5
                                                                                         -6
                                                                                         2)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -6
                                                                                           "input"
                                                                                           "G"
                                                                                           "P"
                                                                                           "sig"
                                                                                           "V"
                                                                                           "PV")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -6
                                                                                               "up"
                                                                                               "P1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -6
                                                                                                   "t"
                                                                                                   "s")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -6
                                                                                                       "p(t)"
                                                                                                       "V(t)")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "nominal_AC_term_times_eta")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               -7)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "new_G")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "member"
                                                                           -1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (hide
                                                                 1)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "member"
                                                                       -2
                                                                       2)
                                                                      (("1"
                                                                        (split
                                                                         -2)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (reveal
                                                                             -9)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "(G, P1, sig, V, PV)")
                                                                              (("1"
                                                                                (prop)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "Del"
                                                                                   "G1"
                                                                                   "del"
                                                                                   "sig1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "is_sol?")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "choose_eq_unifies"
                                                                                             2)
                                                                                            (("1"
                                                                                              (reveal
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               -5)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -12
                                                                                                   -13
                                                                                                   -14
                                                                                                   -15
                                                                                                   -16)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "unifies?"
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "t = unit")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -10)
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "equal?_ref")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -12)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "ac_match_TCC8")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -1
                                                                                     "input"
                                                                                     "G"
                                                                                     "P"
                                                                                     "sig"
                                                                                     "V"
                                                                                     "PV")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "up"
                                                                                         "P1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (reveal
                                                                                             -3
                                                                                             -4
                                                                                             -5
                                                                                             -6)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -5
                                                                                                 "t"
                                                                                                 "s")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (expand
                                                                                 "member"
                                                                                 -2)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (name-replace
                                                                                   "f"
                                                                                   "f_sym(t)")
                                                                                  (("2"
                                                                                    (name-replace
                                                                                     "dec_P"
                                                                                     "decompose(arg(t), arg(s))`1")
                                                                                    (("2"
                                                                                      (name-replace
                                                                                       "new_P"
                                                                                       "append(dec_P, P1)")
                                                                                      (("2"
                                                                                        (reveal
                                                                                         -12)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "(G, new_P, sig, V, PV)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "Del"
                                                                                                 "G1"
                                                                                                 "del"
                                                                                                 "sig1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "is_sol?")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "new_P"
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "unifies?_append"
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -4
                                                                                                                 -5
                                                                                                                 -12
                                                                                                                 -13
                                                                                                                 -14
                                                                                                                 -15
                                                                                                                 -17
                                                                                                                 -18
                                                                                                                 -19
                                                                                                                 -20
                                                                                                                 -21)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "choose_eq_unifies"
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (reveal
                                                                                                                       -11
                                                                                                                       -12
                                                                                                                       -13
                                                                                                                       -14)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -4)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "decompose_correct_app")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "Del"
                                                                                                                               "f"
                                                                                                                               "arg(s)"
                                                                                                                               "del"
                                                                                                                               "arg(t)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "dec_P"
                                                                                                                                   -7)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -7)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "nominal_AC_term_app_eta")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "t")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "f")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -12
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "nominal_AC_term_app_eta")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "s")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "up = (t, s)")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (decompose-equality
                                                                                                                                                           1)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "ac_match_TCC10")
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -12
                                                                                                   3
                                                                                                   -5)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "input"
                                                                                                     "G"
                                                                                                     "P"
                                                                                                     "sig"
                                                                                                     "V"
                                                                                                     "PV")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -4
                                                                                                         -5
                                                                                                         -6
                                                                                                         -7
                                                                                                         -8
                                                                                                         -9
                                                                                                         -10)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -8
                                                                                                           "up"
                                                                                                           "P1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -8
                                                                                                               "t"
                                                                                                               "s")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -8
                                                                                                                   "f"
                                                                                                                   "arg(t)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -8)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "dec_P"
                                                                                                                         "new_P")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "f"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           "nominal_AC_term_app_eta")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (hide
                                                                             1)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (split
                                                                                   -2)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member"
                                                                                       -2)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (split
                                                                                       -3)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (name-replace
                                                                                             "dec_P"
                                                                                             "decompose(body(t), body(s))`1")
                                                                                            (("1"
                                                                                              (name-replace
                                                                                               "new_P"
                                                                                               "append(dec_P, P1)")
                                                                                              (("1"
                                                                                                (reveal
                                                                                                 -11)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "(G, new_P, sig, V, PV)")
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "Del"
                                                                                                       "G1"
                                                                                                       "del"
                                                                                                       "sig1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -12)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "is_sol?")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "new_P"
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "choose_eq_unifies"
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "unifies?_append"
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -12
                                                                                                                             -13
                                                                                                                             -14
                                                                                                                             -15
                                                                                                                             -16)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -1
                                                                                                                               -4
                                                                                                                               -5
                                                                                                                               -6)
                                                                                                                              (("1"
                                                                                                                                (reveal
                                                                                                                                 -9
                                                                                                                                 -10
                                                                                                                                 -11
                                                                                                                                 -12
                                                                                                                                 -13)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -5)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "decompose_correct_abs1")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "Del"
                                                                                                                                       "abstr(t)"
                                                                                                                                       "body(s)"
                                                                                                                                       "del"
                                                                                                                                       "body(t)")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -7)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "nominal_AC_term_abs_eta")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "t")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -10
                                                                                                                                                     -2)
                                                                                                                                                    (("1"
                                                                                                                                                      (lemma
                                                                                                                                                       "nominal_AC_term_abs_eta")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "s")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "up = (t, s)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               1)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (rewrite
                                                                                                                         "unifies?_append"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "P1"
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -11
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "ac_match_TCC12")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "input"
                                                                                                           "G"
                                                                                                           "P"
                                                                                                           "sig"
                                                                                                           "V"
                                                                                                           "PV")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "up"
                                                                                                               "P1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (reveal
                                                                                                                   -5
                                                                                                                   -6
                                                                                                                   -7
                                                                                                                   -8
                                                                                                                   -9
                                                                                                                   -10)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -7
                                                                                                                       "t"
                                                                                                                       "s")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -7
                                                                                                                           "abstr(t)"
                                                                                                                           "body(t)")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               -7)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "dec_P"
                                                                                                                                 "new_P")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (use
                                                                                                                                 "nominal_AC_term_abs_eta")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (name-replace
                                                                                             "b"
                                                                                             "fresh?(abstr(t), body(s))`2")
                                                                                            (("2"
                                                                                              (name-replace
                                                                                               "G_"
                                                                                               "fresh?(abstr(t), body(s))`1")
                                                                                              (("2"
                                                                                                (name-replace
                                                                                                 "pi"
                                                                                                 "cons((abstr(t), abstr(s)), null)")
                                                                                                (("2"
                                                                                                  (name-replace
                                                                                                   "dec_P"
                                                                                                   "decompose(body(t), ext(pi)(body(s)))`1")
                                                                                                  (("2"
                                                                                                    (name-replace
                                                                                                     "new_P"
                                                                                                     "append(dec_P, P1)")
                                                                                                    (("2"
                                                                                                      (name-replace
                                                                                                       "new_G"
                                                                                                       "append(G_, G)")
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (reveal
                                                                                                               -15)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "(new_G, new_P, sig, V, PV)")
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "Del"
                                                                                                                     "G1"
                                                                                                                     "del"
                                                                                                                     "sig1")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -12)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "ac_match_sound_abs")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "Del"
                                                                                                                             "del"
                                                                                                                             "input")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -7)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -8)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -9)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -10)
                                                                                                                                      (("1"
                                                                                                                                        (reveal
                                                                                                                                         -10
                                                                                                                                         -11
                                                                                                                                         -12
                                                                                                                                         -13)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -11
                                                                                                                                           -12
                                                                                                                                           -13
                                                                                                                                           -14
                                                                                                                                           -15)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -4)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -3)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "b"
                                                                                                                                                       -6)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (reveal
                                                                                                                                                           -5
                                                                                                                                                           -6
                                                                                                                                                           -7
                                                                                                                                                           -8
                                                                                                                                                           -9)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -5)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -4)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -3)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide
                                                                                                                     -2
                                                                                                                     4)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "ac_match_TCC14")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "input"
                                                                                                                         "G"
                                                                                                                         "P"
                                                                                                                         "sig"
                                                                                                                         "V"
                                                                                                                         "PV")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (reveal
                                                                                                                             -3
                                                                                                                             -4
                                                                                                                             -5
                                                                                                                             -6
                                                                                                                             -7
                                                                                                                             -8
                                                                                                                             -9
                                                                                                                             -10
                                                                                                                             -11
                                                                                                                             -12)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -16
                                                                                                                               -17
                                                                                                                               -18
                                                                                                                               -19
                                                                                                                               -20)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -11
                                                                                                                                 "up"
                                                                                                                                 "P1")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -11
                                                                                                                                     "t"
                                                                                                                                     "s")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -11
                                                                                                                                         "abstr(t)"
                                                                                                                                         "body(t)")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (split
                                                                                                                                             -11)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -1
                                                                                                                                               "G_"
                                                                                                                                               "b")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "new_G"
                                                                                                                                                   "pi"
                                                                                                                                                   "dec_P"
                                                                                                                                                   "new_P")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (lemma
                                                                                                                                               "nominal_AC_term_abs_eta")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "t")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "member"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (hide
                                                                                   1)
                                                                                  (("2"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "member"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (name-replace
                                                                                           "inp_lst"
                                                                                           "apply_ac(G, cons((t, s), P1), sig, V, PV)")
                                                                                          (("2"
                                                                                            (reveal
                                                                                             -1)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "mem_flatten_map2")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 -4
                                                                                                 "inp1")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "inp_lst"
                                                                                                     -4)
                                                                                                    (("2"
                                                                                                      (reveal
                                                                                                       -10)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "inp1")
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "Del"
                                                                                                             "G1"
                                                                                                             "del"
                                                                                                             "sig1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "inp1`5 = PV")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "apply_ac_sound")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "Del"
                                                                                                                       "del"
                                                                                                                       "(G, P, sig, V, PV)"
                                                                                                                       "inp1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (reveal
                                                                                                                           -6
                                                                                                                           -7)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (reveal
                                                                                                                                 -4
                                                                                                                                 -5)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "ac_prb?"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "pair?(t)")
                                                                                                                                          (("1"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -5
                                                                                                                                              2))
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "P")
                                                                                                                                              (("1"
                                                                                                                                                (typepred
                                                                                                                                                 "input")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "nice_input?")
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "well_formed_unif_prb"
                                                                                                                                                       -7)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -7
                                                                                                                                                         "t")
                                                                                                                                                        (("1"
                                                                                                                                                          (prop)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "well_formed?"
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (use
                                                                                                                                                             "choose_eq_mem1")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "member_unif_prb_equiv"
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   1
                                                                                                                                                                   "up")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (1
                                                                                                                                              2))
                                                                                                                                            (("2"
                                                                                                                                              (reveal
                                                                                                                                               3
                                                                                                                                               4
                                                                                                                                               5
                                                                                                                                               6
                                                                                                                                               7)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (case
                                                                                                                         "input = (G, P, sig, V, PV)")
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "input")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (decompose-equality
                                                                                                                           1)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "apply_ac_mem5")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "ac_match_TCC16")
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -12
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "input"
                                                                                                                 "G"
                                                                                                                 "P"
                                                                                                                 "sig"
                                                                                                                 "V"
                                                                                                                 "PV")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -9)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -7
                                                                                                                       -8
                                                                                                                       -9
                                                                                                                       -10
                                                                                                                       -11)
                                                                                                                      (("2"
                                                                                                                        (reveal
                                                                                                                         -5
                                                                                                                         -6
                                                                                                                         -7
                                                                                                                         -8)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -5
                                                                                                                           "up"
                                                                                                                           "P1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -5
                                                                                                                               "t"
                                                                                                                               "s")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -5
                                                                                                                                   "ac_sym(t)"
                                                                                                                                   "ac_arg(t)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (use
                                                                                                                                       "nominal_AC_term_ac_app_eta")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (reveal
                                                                                                                                           -8)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -7
                                                                                                                                             "inp_lst")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (rewrite
                                                                                                                                                 "every_nth")
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "inp1")
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "member_nth2")
                                                                                                                                                    (("2"
                                                                                                                                                      (skolem
                                                                                                                                                       -12
                                                                                                                                                       "i")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -8
                                                                                                                                                         "i")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (DS const-decl "list[atom]" atoms nil)
    (fc def-decl "fresh_context" nominal_AC_freshness nil)
    (nominal_AC_fresh_subs_append_context formula-decl nil nominal_AC_fresh_subs nil)
    (ds const-decl "set[atom]" atoms nil)
    (DS_member formula-decl nil atoms nil)
    (fc_member formula-decl nil nominal_AC_freshness nil)
    (subs_equal? formula-decl nil nominal_AC_fresh_subs nil)
    (arg adt-accessor-decl "[(app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (unifies?_append formula-decl nil nominal_AC_unification nil)
    (decompose_correct_app formula-decl nil nominal_AC_unification nil)
    (nominal_AC_term_app_eta formula-decl nil nominal_AC_term_adt nil)
    (app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (f_sym adt-accessor-decl "[(app?) -> f_symbol]" nominal_AC_term_adt nil)
    (member_nth2 formula-decl nil list_aux_equational_reasoning nil)
    (nominal_AC_term_ac_app_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" nominal_AC_term_adt nil)
    (ac_arg adt-accessor-decl "[(ac_app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (apply_ac_sound formula-decl nil nominal_AC_ac_step nil)
    (ac_prb? const-decl "bool" nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (well_formed_unif_prb formula-decl nil nominal_AC_unification nil)
    (pair? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (apply_ac_mem5 formula-decl nil nominal_AC_ac_step nil)
    (mem_flatten_map2 formula-decl nil list_aux_equational_reasoning2parameters nil)
    (apply_ac const-decl "list[nice_input]" nominal_AC_ac_step nil)
    (fresh? def-decl "[fresh_context, bool]" nominal_AC_freshness nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (decompose_correct_abs1 formula-decl nil nominal_AC_unification nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (unit? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (unit adt-constructor-decl "(unit?)" nominal_AC_term_adt nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (atom? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (equal?_ref formula-decl nil nominal_AC_equality nil)
    (nominal_AC_term_at_eta formula-decl nil nominal_AC_term_adt nil)
    (unifies? const-decl "bool" nominal_AC_unification nil)
    (a adt-accessor-decl "[(atom?) -> atom]" nominal_AC_term_adt nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil))
   shostak))
 (ac_match_sound_cor_TCC1 0
  (ac_match_sound_cor_TCC1-1 nil 3887056350
   ("" (skeep)
    (("" (name-replace "P" "cons((t, s), null)")
      (("" (reveal -1)
        (("" (expand "nice_input?" 1)
          (("" (assert)
            (("" (prop)
              (("1" (rewrite "idempotent_null" 1) nil nil)
               ("2" (rewrite "dom_null")
                (("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
                nil)
               ("3" (hide-all-but 1)
                (("3" (expand "contained?")
                  (("3" (rewrite "dom_null")
                    (("3" (rewrite "img_null") (("3" (grind) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (replace -1 :dir rl)
                (("4" (expand "vars" 1 1)
                  (("4" (expand "vars" 1 2) (("4" (grind) nil nil))
                    nil))
                  nil))
                nil)
               ("5" (grind) nil nil)
               ("6" (hide-all-but 1) (("6" (grind) nil nil)) nil)
               ("7" (expand "P" 1)
                (("7" (rewrite "well_formed_unif_prb" 1)
                  (("7" (hide -3)
                    (("7" (skeep)
                      (("7" (expand "member" -1)
                        (("7" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("8" (rewrite "well_formed_null") nil nil)
               ("9" (replace -1 1 :dir rl)
                (("9" (expand "match_problem?" 1)
                  (("9" (skeep)
                    (("9" (expand "rhs" -1)
                      (("9" (hide -4) (("9" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (list type-decl nil list_adt nil) (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (idempotent_null formula-decl nil nominal_AC_substitution nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (emptyset const-decl "set" sets nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (dom_null formula-decl nil nominal_AC_substitution nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (img_null formula-decl nil nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (subset? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (well_formed? const-decl "bool" nominal_AC_term_properties nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (unifies? def-decl "bool" nominal_AC_unification nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (equal? const-decl "bool" nominal_AC_substitution nil)
    (more_general? const-decl "bool" nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (well_formed? const-decl "bool" nominal_AC_substitution nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (well_formed_unif_prb formula-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (member def-decl "bool" nominal_AC_unification nil)
    (P skolem-const-decl
     "(cons?[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol],
        nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]])"
     nominal_AC_ac_match_alg nil)
    (well_formed_null formula-decl nil nominal_AC_substitution nil)
    (match_problem? const-decl "bool" nominal_AC_unification nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil))
   nil
   (ac_match_sound_cor subtype
    "(list_adt[[atom, variable]].null, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].null), list_adt[basic_sub].null, nominal_AC_unification.vars(nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), nominal_AC_term_properties.vars(nominal_AC_ac_match_alg.s))"
    "nice_input")))
 (ac_match_sound_cor 0
  (ac_match_sound_cor-1 nil 3887478940
   ("" (skeep)
    (("" (use "ac_match_sound")
      (("" (assert) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((ac_match_sound formula-decl nil nominal_AC_ac_match_alg nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (ac_match_sound_equality_check_TCC1 0
  (ac_match_sound_equality_check_TCC1-1 nil 3897587941
   ("" (skeep)
    (("" (use "nice_input_initial_problem2") (("" (grind) nil nil))
      nil))
    nil)
   ((nice_input_initial_problem2 formula-decl nil nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (more_general? const-decl "bool" nominal_AC_substitution nil)
    (equal? const-decl "bool" nominal_AC_substitution nil)
    (unifies? def-decl "bool" nominal_AC_unification nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (match_problem? const-decl "bool" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (well_formed? const-decl "bool" nominal_AC_substitution nil)
    (singleton const-decl "(singleton?)" sets nil)
    (subterms def-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_term_properties nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (member def-decl "bool" nominal_AC_unification nil)
    (subterms def-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_unification nil)
    (subterms const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (emptyset const-decl "set" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (idempotent? const-decl "bool" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (well_formed? const-decl "bool" nominal_AC_term_properties nil)
    (subset? const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   nil
   (ac_match_sound_equality_check subtype
    "(list_adt[[atom, variable]].null, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].null), list_adt[basic_sub].null, nominal_AC_unification.vars(nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), nominal_AC_unification.vars(nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s))"
    "nice_input")))
 (ac_match_sound_equality_check 0
  (ac_match_sound_equality_check-1 nil 3897587942
   ("" (skeep)
    (("" (use "ac_match_sound")
      (("" (assert) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((ac_match_sound formula-decl nil nominal_AC_ac_match_alg nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (ac_match_vars_ctx 0
  (ac_match_vars_ctx-1 nil 3888665541
   (""
    (measure-induct
     "lex3(card(vars(input`2)), max_size(input`2), num_max_size(input`2))"
     "input")
    (("" (skolem 1 "inp")
      (("" (prop)
        (("" (skolem 1 ("G1" "sig1"))
          (("" (flatten)
            (("" (name-replace "G" "inp`1")
              (("" (name-replace "P" "inp`2")
                (("" (name-replace "sig" "inp`3")
                  (("" (name-replace "V" "inp`4")
                    (("" (name-replace "PV" "inp`5")
                      (("" (expand "ac_match" -5)
                        (("" (hide -4)
                          (("" (reveal -2 -3)
                            (("" (replace -1)
                              ((""
                                (replace -2)
                                ((""
                                  (replace -5)
                                  ((""
                                    (lift-if)
                                    ((""
                                      (split -6)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (expand "member" -2)
                                          (("1"
                                            (expand "member" -2)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (replace -2)
                                                (("1"
                                                  (expand "subset?" 1)
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (expand
                                                       ("member"
                                                        "union")
                                                       1)
                                                      (("1"
                                                        (prop)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (name-replace
                                           "up"
                                           "choose_eq(P)`1")
                                          (("2"
                                            (name-replace
                                             "P1"
                                             "choose_eq(P)`2")
                                            (("2"
                                              (name-replace "t" "up`1")
                                              (("2"
                                                (name-replace
                                                 "s"
                                                 "up`2")
                                                (("2"
                                                  (split -1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split -2)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace -7)
                                                          (("1"
                                                            (reveal -5)
                                                            (("1"
                                                              (replace
                                                               -7)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "(G, P1, sig, V, PV)")
                                                                (("1"
                                                                  (prop)
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "subset?(vars(P1), vars(P))")
                                                                        (("1"
                                                                          (hide-all-but
                                                                           (-1
                                                                            -2
                                                                            2))
                                                                          (("1"
                                                                            (expand
                                                                             "subset?")
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       ("member"
                                                                                        "union")
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         ("member "
                                                                                          "union")
                                                                                         1)
                                                                                        (("1"
                                                                                          (prop)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "P1")
                                                                            (("2"
                                                                              (use
                                                                               "choose_eq_vars")
                                                                              (("2"
                                                                                (flatten)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "ac_match_TCC2")
                                                                    (("2"
                                                                      (hide
                                                                       3
                                                                       -3)
                                                                      (("2"
                                                                        (reveal
                                                                         -2
                                                                         -3
                                                                         -4
                                                                         -5)
                                                                        (("2"
                                                                          (inst
                                                                           -5
                                                                           "inp"
                                                                           "G"
                                                                           "P"
                                                                           "sig"
                                                                           "V"
                                                                           "PV")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               -5
                                                                               "up"
                                                                               "P1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -5
                                                                                   "t"
                                                                                   "s")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (use
                                                                                           "nominal_AC_term_at_eta")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "member"
                                                           -1)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (name-replace
                                                             "sig_"
                                                             "cons((V(t), ext(reverse(p(t)))(s)), null)")
                                                            (("1"
                                                              (name-replace
                                                               "G_"
                                                               "nominal_AC_fresh_subs?(sig_, G)`1")
                                                              (("1"
                                                                (name-replace
                                                                 "b"
                                                                 "nominal_AC_fresh_subs?(sig_, G)`2")
                                                                (("1"
                                                                  (name-replace
                                                                   "new_G"
                                                                   "append(G_, G)")
                                                                  (("1"
                                                                    (name-replace
                                                                     "new_sig"
                                                                     "append(sig_, sig)")
                                                                    (("1"
                                                                      (name-replace
                                                                       "new_P"
                                                                       "apply_sub(sig_, P1)")
                                                                      (("1"
                                                                        (split
                                                                         -2)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (replace
                                                                                   -7)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -6)
                                                                                    (("1"
                                                                                      (reveal
                                                                                       -11)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "(new_G, new_P, new_sig, V, PV)")
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "subset?")
                                                                                                (("1"
                                                                                                  (skeep)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     ("member"
                                                                                                      "union")
                                                                                                     5)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "x")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             ("member"
                                                                                                              "union")
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -5
                                                                                                               -6
                                                                                                               -7
                                                                                                               -8
                                                                                                               -9)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "new_G"
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "new_P"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "G_"
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "subset?(vars(img(sig_)), vars(P))")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "subset?")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "vars_append_context")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   ("member"
                                                                                                                                    "union")
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (use
                                                                                                                                     "nominal_AC_fresh_subs?_var")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "subset?")
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             ("member "
                                                                                                                                              "union")
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (use
                                                                                                                                 "apply_sub_vars")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "subset?")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         ("member"
                                                                                                                                          "union")
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "P1"
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (use
                                                                                                                                             "choose_eq_vars")
                                                                                                                                            (("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "subset?"
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           4
                                                                                                                           6
                                                                                                                           7)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "subset?"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (skolem
                                                                                                                               1
                                                                                                                               "y")
                                                                                                                              (("2"
                                                                                                                                (prop)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "sig_"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (use
                                                                                                                                     "img_basic_sub_var")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "subset?"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (inst?)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (rewrite
                                                                                                                                             "ext_vars")
                                                                                                                                            (("2"
                                                                                                                                              (reveal
                                                                                                                                               -15
                                                                                                                                               -16
                                                                                                                                               -17
                                                                                                                                               -18)
                                                                                                                                              (("2"
                                                                                                                                                (use
                                                                                                                                                 "choose_eq_vars")
                                                                                                                                                (("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -6)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "subset?"
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "vars"
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               ("member"
                                                                                                                                                                "union")
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "ac_match_TCC4")
                                                                                            (("2"
                                                                                              (hide
                                                                                               4
                                                                                               6)
                                                                                              (("2"
                                                                                                (reveal
                                                                                                 -7
                                                                                                 -8
                                                                                                 -9
                                                                                                 -10)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -5
                                                                                                   "inp"
                                                                                                   "G"
                                                                                                   "P"
                                                                                                   "sig"
                                                                                                   "V"
                                                                                                   "PV")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -5
                                                                                                       "up"
                                                                                                       "P1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -5
                                                                                                           "t"
                                                                                                           "s")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -5
                                                                                                               "p(t)"
                                                                                                               "V(t)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "t = p(t)*V(t)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -6
                                                                                                                       "sig_")
                                                                                                                      (("1"
                                                                                                                        (reveal
                                                                                                                         -6
                                                                                                                         -7
                                                                                                                         -8
                                                                                                                         -9
                                                                                                                         -10
                                                                                                                         -11)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -12
                                                                                                                               "b")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -12
                                                                                                                                   "new_G"
                                                                                                                                   "new_sig"
                                                                                                                                   "new_P")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (use
                                                                                                                     "nominal_AC_term_times_eta")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (expand
                                                                                   "member"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (replace
                                                                             -6)
                                                                            (("2"
                                                                              (replace
                                                                               -5)
                                                                              (("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "G2"
                                                                                       "fc(DS(p(t), p(s)), V(t))")
                                                                                      (("1"
                                                                                        (name-replace
                                                                                         "G3"
                                                                                         "append(G2, G)")
                                                                                        (("1"
                                                                                          (reveal
                                                                                           -13)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "(G3, P1, sig, V, PV)")
                                                                                            (("1"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "subset?")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             ("member"
                                                                                                              "union")
                                                                                                             3)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               ("member"
                                                                                                                "union")
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -6
                                                                                                                   -7
                                                                                                                   -8
                                                                                                                   -9
                                                                                                                   -10)
                                                                                                                  (("1"
                                                                                                                    (split
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "G3")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vars_append_context")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           ("member"
                                                                                                                            "union")
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "G2")
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "vars_fc")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "subset?"
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (inst?)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         ("member"
                                                                                                                                          "singleton")
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (reveal
                                                                                                                                           -16
                                                                                                                                           -17
                                                                                                                                           -18
                                                                                                                                           -19)
                                                                                                                                          (("1"
                                                                                                                                            (use
                                                                                                                                             "choose_eq_vars")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -6)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "subset?"
                                                                                                                                                   -2)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -2
                                                                                                                                                     "x")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "vars"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           ("member"
                                                                                                                                                            "union")
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -3)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "P1"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "choose_eq_vars")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "subset?"
                                                                                                                             -2)
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "subset?"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (inst?)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "ac_match_TCC6")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "inp"
                                                                                                   "G"
                                                                                                   "P"
                                                                                                   "sig"
                                                                                                   "V"
                                                                                                   "PV")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (reveal
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -3
                                                                                                         "up"
                                                                                                         "P1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (reveal
                                                                                                             -11
                                                                                                             -12
                                                                                                             -13
                                                                                                             -14)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -7
                                                                                                                 "t"
                                                                                                                 "s")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -7
                                                                                                                     "p(t)"
                                                                                                                     "V(t)")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "t = p(t)*V(t)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             -8)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "G3")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (use
                                                                                                                             "nominal_AC_term_times_eta")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (split
                                                               -2)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (replace
                                                                   -7)
                                                                  (("1"
                                                                    (replace
                                                                     -6)
                                                                    (("1"
                                                                      (reveal
                                                                       -5)
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "(G, P1, sig, V, PV)")
                                                                        (("1"
                                                                          (prop)
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "subset?")
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         ("member"
                                                                                          "union")
                                                                                         4)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (expand
                                                                                             ("member"
                                                                                              "union")
                                                                                             -1)
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "P1"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "choose_eq_vars")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "subset?"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "ac_match_TCC8")
                                                                            (("2"
                                                                              (reveal
                                                                               -1
                                                                               -2
                                                                               -3
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -5
                                                                                 "inp"
                                                                                 "G"
                                                                                 "P"
                                                                                 "sig"
                                                                                 "V"
                                                                                 "PV")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -5
                                                                                     "up"
                                                                                     "P1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -5
                                                                                         "t"
                                                                                         "s")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "member"
                                                                   -1)
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "member"
                                                                       -2)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (name-replace
                                                                         "f"
                                                                         "f_sym(t)")
                                                                        (("2"
                                                                          (name-replace
                                                                           "dec_P"
                                                                           "decompose(arg(t), arg(s))`1")
                                                                          (("2"
                                                                            (name-replace
                                                                             "new_P"
                                                                             "append(dec_P, P1)")
                                                                            (("2"
                                                                              (replace
                                                                               -9)
                                                                              (("2"
                                                                                (replace
                                                                                 -8)
                                                                                (("2"
                                                                                  (reveal
                                                                                   -8)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -1
                                                                                     "(G, new_P, sig, V, PV)")
                                                                                    (("2"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "subset?")
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     ("member"
                                                                                                      "union")
                                                                                                     5)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       ("member"
                                                                                                        "union")
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "new_P"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "vars_unif_prb_append"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "dec_P"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "decompose_vars")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "subset?")
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "subset?(vars(t, s), vars(P))")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "subset?")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "vars"
                                                                                                                                     (1
                                                                                                                                      -1))
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       ("member"
                                                                                                                                        "union")
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         ("member"
                                                                                                                                          "union")
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "vars"
                                                                                                                                             (1
                                                                                                                                              2))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (reveal
                                                                                                                               -8
                                                                                                                               -9
                                                                                                                               -11)
                                                                                                                              (("2"
                                                                                                                                (hide-all-but
                                                                                                                                 (-1
                                                                                                                                  -2
                                                                                                                                  -3
                                                                                                                                  1
                                                                                                                                  5))
                                                                                                                                (("2"
                                                                                                                                  (use
                                                                                                                                   "choose_eq_vars")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -5)
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "up = (t, s)")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           1)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "P1"
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "choose_eq_vars")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "subset?"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "ac_match_TCC10")
                                                                                        (("2"
                                                                                          (reveal
                                                                                           -1
                                                                                           -2
                                                                                           -3
                                                                                           -4
                                                                                           -5
                                                                                           -6
                                                                                           -7)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -12
                                                                                             6)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -8
                                                                                               "inp"
                                                                                               "G"
                                                                                               "P"
                                                                                               "sig"
                                                                                               "V"
                                                                                               "PV")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "up"
                                                                                                   "P1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -8
                                                                                                       "t"
                                                                                                       "s")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -8
                                                                                                           "f"
                                                                                                           "arg(t)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "t = app(f, arg(t))")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -9
                                                                                                                   "dec_P"
                                                                                                                   "new_P")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 -8)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "nominal_AC_term_app_eta")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (hide
                                                                       1
                                                                       2
                                                                       3
                                                                       4)
                                                                      (("1"
                                                                        (replace
                                                                         -5)
                                                                        (("1"
                                                                          (replace
                                                                           -6)
                                                                          (("1"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (expand
                                                                                 "member"
                                                                                 -2)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (split
                                                                                 -3)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "dec_P"
                                                                                       "decompose(body(t), body(s))`1")
                                                                                      (("1"
                                                                                        (name-replace
                                                                                         "new_P"
                                                                                         "append(dec_P, P1)")
                                                                                        (("1"
                                                                                          (reveal
                                                                                           -7)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "(G, new_P, sig, V, PV)")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "subset?")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             ("member"
                                                                                                              "union")
                                                                                                             (2
                                                                                                              -1))
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "new_P"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vars_unif_prb_append"
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "dec_P"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "decompose_vars")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "subset?")
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   "subset?(vars(t, s), vars(P))")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "subset?")
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           ("member"
                                                                                                                                            "vars")
                                                                                                                                           (-1
                                                                                                                                            1))
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "union"
                                                                                                                                             (-1
                                                                                                                                              1))
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "vars"
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (reveal
                                                                                                                                     -7
                                                                                                                                     -8
                                                                                                                                     -9
                                                                                                                                     -10)
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        -3
                                                                                                                                        -4
                                                                                                                                        1
                                                                                                                                        4))
                                                                                                                                      (("2"
                                                                                                                                        (use
                                                                                                                                         "choose_eq_vars")
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -6)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "up = (t, s)")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (decompose-equality
                                                                                                                                                 1)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "P1")
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           "choose_eq_vars")
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "subset?"
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "ac_match_TCC12")
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -3
                                                                                                   3)
                                                                                                  (("2"
                                                                                                    (reveal
                                                                                                     -2
                                                                                                     -3
                                                                                                     -4
                                                                                                     -5
                                                                                                     -6
                                                                                                     -7)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -7
                                                                                                       "inp"
                                                                                                       "G"
                                                                                                       "P"
                                                                                                       "sig"
                                                                                                       "V"
                                                                                                       "PV")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -7
                                                                                                           "up"
                                                                                                           "P1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -7
                                                                                                               "t"
                                                                                                               "s")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -7
                                                                                                                   "abstr(t)"
                                                                                                                   "body(t)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "t = abs(abstr(t), body(t))")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -8
                                                                                                                           "dec_P"
                                                                                                                           "new_P")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide
                                                                                                                         -7)
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           "nominal_AC_term_abs_eta")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (name-replace
                                                                                       "b"
                                                                                       "fresh?(abstr(t), body(s))`2")
                                                                                      (("2"
                                                                                        (name-replace
                                                                                         "G_"
                                                                                         "fresh?(abstr(t), body(s))`1")
                                                                                        (("2"
                                                                                          (name-replace
                                                                                           "pi"
                                                                                           "cons((abstr(t), abstr(s)), null)")
                                                                                          (("2"
                                                                                            (name-replace
                                                                                             "dec_P"
                                                                                             "decompose(body(t), ext(pi)(body(s)))`1")
                                                                                            (("2"
                                                                                              (name-replace
                                                                                               "new_P"
                                                                                               "append(dec_P, P1)")
                                                                                              (("2"
                                                                                                (name-replace
                                                                                                 "new_G"
                                                                                                 "append(G_, G)")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (reveal
                                                                                                         -11)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "(new_G, new_P, sig, V, PV)")
                                                                                                          (("1"
                                                                                                            (prop)
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "subset?")
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           ("member "
                                                                                                                            "union")
                                                                                                                           (3
                                                                                                                            -1))
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "new_G"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "vars_append_context")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     ("member"
                                                                                                                                      "union")
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "G_"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (use
                                                                                                                                           "vars_fresh?")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "subset?")
                                                                                                                                            (("1"
                                                                                                                                              (inst?)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "subset?(vars(t, s), vars(P))")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "subset?"
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           ("member"
                                                                                                                                                            "vars")
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "union"
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "vars"
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (reveal
                                                                                                                                                       -11
                                                                                                                                                       -12
                                                                                                                                                       -13
                                                                                                                                                       -14)
                                                                                                                                                      (("2"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         (-1
                                                                                                                                                          -2
                                                                                                                                                          -3
                                                                                                                                                          -4
                                                                                                                                                          1
                                                                                                                                                          3))
                                                                                                                                                        (("2"
                                                                                                                                                          (use
                                                                                                                                                           "choose_eq_vars")
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "up = (t, s)")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 1)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "new_P"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "vars_unif_prb_append"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "dec_P"
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (prop)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "subset?(vars(t, s), vars(P))")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "subset?")
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (use
                                                                                                                                                 "decompose_vars")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "subset?")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         ("member"
                                                                                                                                                          "vars")
                                                                                                                                                         (1
                                                                                                                                                          -1))
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "union"
                                                                                                                                                           (-1
                                                                                                                                                            1))
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "vars"
                                                                                                                                                                 (1
                                                                                                                                                                  2))
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "ext_vars")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (reveal
                                                                                                                                           -9
                                                                                                                                           -10
                                                                                                                                           -11
                                                                                                                                           -12)
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -2
                                                                                                                                              -3
                                                                                                                                              -4
                                                                                                                                              1
                                                                                                                                              3))
                                                                                                                                            (("2"
                                                                                                                                              (use
                                                                                                                                               "choose_eq_vars")
                                                                                                                                              (("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "up = (t, s)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     1)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "P1")
                                                                                                                                        (("2"
                                                                                                                                          (use
                                                                                                                                           "choose_eq_vars")
                                                                                                                                          (("2"
                                                                                                                                            (flatten)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "subset?"
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (inst?)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "ac_match_TCC14")
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -3
                                                                                                                 4)
                                                                                                                (("2"
                                                                                                                  (reveal
                                                                                                                   -2
                                                                                                                   -3
                                                                                                                   -4
                                                                                                                   -5
                                                                                                                   -6
                                                                                                                   -7
                                                                                                                   -8
                                                                                                                   -9
                                                                                                                   -10
                                                                                                                   -11)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -11
                                                                                                                     "inp"
                                                                                                                     "G"
                                                                                                                     "P"
                                                                                                                     "sig"
                                                                                                                     "V"
                                                                                                                     "PV")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -11
                                                                                                                         "up"
                                                                                                                         "P1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -11
                                                                                                                             "t"
                                                                                                                             "s")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -11
                                                                                                                                 "abstr(t)"
                                                                                                                                 "body(t)")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "t = abs(abstr(t), body(t))")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -12
                                                                                                                                         "G_"
                                                                                                                                         "b")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -12
                                                                                                                                             "new_G"
                                                                                                                                             "pi"
                                                                                                                                             "dec_P"
                                                                                                                                             "new_P")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide
                                                                                                                                       -11)
                                                                                                                                      (("2"
                                                                                                                                        (use
                                                                                                                                         "nominal_AC_term_abs_eta")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "member"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (case
                                                                       "ac_app?(t)")
                                                                      (("1"
                                                                        (hide
                                                                         1
                                                                         2
                                                                         3
                                                                         4
                                                                         5
                                                                         6)
                                                                        (("1"
                                                                          (split
                                                                           -2)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "member"
                                                                               -2)
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (name-replace
                                                                                 "input_lst"
                                                                                 "apply_ac(G, cons((t, s), P1), sig, inp`4, inp`5)")
                                                                                (("2"
                                                                                  (reveal
                                                                                   -1)
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "mem_flatten_map2"
                                                                                     -4)
                                                                                    (("2"
                                                                                      (skolem
                                                                                       -4
                                                                                       "inp1")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (reveal
                                                                                           -6)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "inp1")
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "G1"
                                                                                                 "sig1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "input_lst"
                                                                                                     -5)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "apply_ac_vars_ctx")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "(G, cons((t, s), P1), sig, inp`4, inp`5)"
                                                                                                         "inp1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "apply_ac_vars")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "(G, cons((t, s), P1), sig, inp`4, inp`5)"
                                                                                                               "inp1")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "subset?(vars(cons((t, s), P1)), vars(P))")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      -2
                                                                                                                      -3
                                                                                                                      -4
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "subset?")
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   ("member"
                                                                                                                                    "union")
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (reveal
                                                                                                                       -16
                                                                                                                       -17
                                                                                                                       -18
                                                                                                                       -19)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "choose_eq_vars")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -4)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -5)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "up = (t, s)")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "subset?")
                                                                                                                                    (("1"
                                                                                                                                      (skeep)
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (prop)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "vars"
                                                                                                                                               -6)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 ("member"
                                                                                                                                                  "union")
                                                                                                                                                 -6)
                                                                                                                                                (("1"
                                                                                                                                                  (prop)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (decompose-equality
                                                                                                                                 1)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "ac_match_TCC16")
                                                                                                (("2"
                                                                                                  (reveal
                                                                                                   -1
                                                                                                   -2
                                                                                                   -3
                                                                                                   -4
                                                                                                   -5)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -6
                                                                                                     "inp"
                                                                                                     "G"
                                                                                                     "P"
                                                                                                     "sig"
                                                                                                     "V"
                                                                                                     "PV")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         6)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -6
                                                                                                             "up"
                                                                                                             "P1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -6
                                                                                                                 "t"
                                                                                                                 "s")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -6
                                                                                                                     "ac_sym(t)"
                                                                                                                     "ac_arg(t)")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "nominal_AC_term_ac_app_eta")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -7
                                                                                                                             "input_lst")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "every_nth2")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -7
                                                                                                                                   "inp1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         8
                                                                         -1)
                                                                        (("2"
                                                                          (lemma
                                                                           "nominal_AC_term_opt")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (typepred
                                                                                 "inp")
                                                                                (("2"
                                                                                  (expand
                                                                                   "nice_input?"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       -6
                                                                                       -8
                                                                                       -9)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -3)
                                                                                        (("2"
                                                                                          (use
                                                                                           "choose_eq_well_formed")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (reveal
                                                                                               -12
                                                                                               -13
                                                                                               -14
                                                                                               -15)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -4)
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "well_formed?"
                                                                                                     -5)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "well_formed?"
                                                                                                           -5)
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (a adt-accessor-decl "[(atom?) -> atom]" nominal_AC_term_adt nil)
    (atom? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (nominal_AC_term_at_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_match_TCC2 termination-tcc nil nominal_AC_ac_match_alg nil)
    (nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (append def-decl "list[T]" list_props nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (DS const-decl "list[atom]" atoms nil)
    (fc def-decl "fresh_context" nominal_AC_freshness nil)
    (every adt-def-decl "boolean" list_adt nil)
    (G3 skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg nil)
    (G2 skolem-const-decl "fresh_context" nominal_AC_ac_match_alg nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (singleton const-decl "(singleton?)" sets nil)
    (vars_fc formula-decl nil nominal_AC_freshness nil)
    (ac_match_TCC6 termination-tcc nil nominal_AC_ac_match_alg nil)
    (new_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (nominal_AC_fresh_subs?_var formula-decl nil nominal_AC_fresh_subs nil)
    (vars_append_context formula-decl nil nominal_AC_freshness nil)
    (apply_sub_vars formula-decl nil nominal_AC_unification nil)
    (sig_ skolem-const-decl
     "(cons?[[variable, nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]])"
     nominal_AC_ac_match_alg nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (img_basic_sub_var formula-decl nil nominal_AC_substitution nil)
    (G_ skolem-const-decl "fresh_context" nominal_AC_ac_match_alg nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (* adt-constructor-decl "[[perm, variable] -> (var?)]" nominal_AC_term_adt
       nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_match_TCC4 termination-tcc nil nominal_AC_ac_match_alg nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (reverse def-decl "list[T]" list_props nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (ac_match_TCC8 termination-tcc nil nominal_AC_ac_match_alg nil)
    (arg adt-accessor-decl "[(app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (vars_unif_prb_append formula-decl nil nominal_AC_unification nil)
    (dec_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (decompose_vars formula-decl nil nominal_AC_unification nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (app adt-constructor-decl "[[f_symbol, nominal_AC_term] -> (app?)]" nominal_AC_term_adt
     nil)
    (nominal_AC_term_app_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_match_TCC10 termination-tcc nil nominal_AC_ac_match_alg nil)
    (app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (f_sym adt-accessor-decl "[(app?) -> f_symbol]" nominal_AC_term_adt nil)
    (fresh? def-decl "[fresh_context, bool]" nominal_AC_freshness nil)
    (ac_match_TCC14 termination-tcc nil nominal_AC_ac_match_alg nil)
    (vars_fresh? formula-decl nil nominal_AC_freshness nil)
    (G_ skolem-const-decl "fresh_context" nominal_AC_ac_match_alg nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (dec_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (dec_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (abs adt-constructor-decl "[[atom, nominal_AC_term] -> (abs?)]" nominal_AC_term_adt nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_match_TCC12 termination-tcc nil nominal_AC_ac_match_alg nil)
    (ac_app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (apply_ac_vars_ctx formula-decl nil nominal_AC_ac_step nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Union_surjective name-judgement
     "(surjective?[setofsets[T], set[T]])" sets_lemmas nil)
    (num_arg def-decl "nat" nominal_AC_term_properties nil)
    (get_args const-decl "args" nominal_AC_term_properties nil)
    (Union const-decl "set" sets nil)
    (apply_ac_vars formula-decl nil nominal_AC_ac_step nil)
    (input_lst skolem-const-decl "list[nice_input]" nominal_AC_ac_match_alg
     nil)
    (every_nth2 formula-decl nil list_aux_equational_reasoning nil)
    (pre_nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nominal_AC_term_ac_app_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" nominal_AC_term_adt nil)
    (ac_arg adt-accessor-decl "[(ac_app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (ac_match_TCC16 termination-tcc nil nominal_AC_ac_match_alg nil)
    (mem_flatten_map2 formula-decl nil list_aux_equational_reasoning2parameters nil)
    (apply_ac const-decl "list[nice_input]" nominal_AC_ac_step nil)
    (nominal_AC_term_opt formula-decl nil nominal_AC_term_properties nil)
    (choose_eq_well_formed formula-decl nil nominal_AC_ac_step nil)
    (well_formed? const-decl "bool" nominal_AC_term_properties nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (member def-decl "bool" list_props nil)
    (ac_match def-decl "list[[fresh_context, sub]]" nominal_AC_ac_match_alg nil)
    (subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (union const-decl "set" sets nil)
    (well_founded_le formula-decl nil ordinals nil)
    (< def-decl "bool" ordinals nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (lex3 const-decl "ordinal" lex3 nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   shostak))
 (ac_match_completeness_inst 0
  (ac_match_completeness_inst-1 nil 3888133188
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "G" "input`1")
          (("" (name-replace "P" "input`2")
            (("" (name-replace "sig" "input`3")
              (("" (name-replace "V" "input`4")
                (("" (name-replace "PV" "input`5")
                  (("" (name-replace "up" "choose_eq(P)`1")
                    (("" (name-replace "P1" "choose_eq(P)`2")
                      (("" (name-replace "t" "up`1")
                        (("" (name-replace "s" "up`2")
                          ((""
                            (name-replace "sig_"
                             "cons((V(t), ext(reverse(p(t)))(s)), null)")
                            ((""
                              (name-replace "G_"
                               "nominal_AC_fresh_subs?(sig_, G)`1")
                              ((""
                                (name-replace
                                 "b"
                                 "nominal_AC_fresh_subs?(sig_, G)`2")
                                ((""
                                  (name-replace
                                   "new_G"
                                   "append(G_, G)")
                                  ((""
                                    (name-replace
                                     "new_sig"
                                     "append(sig_, sig)")
                                    ((""
                                      (name-replace
                                       "new_P"
                                       "apply_sub(sig_, P1)")
                                      ((""
                                        (expand "is_sol?")
                                        ((""
                                          (flatten)
                                          ((""
                                            (case
                                             "more_general?(Delta)(new_sig, delta)")
                                            (("1"
                                              (prop)
                                              (("1"
                                                (expand "new_G" 1)
                                                (("1"
                                                  (rewrite
                                                   "nominal_AC_fresh_subs_append_context")
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (expand "G_" 1)
                                                      (("1"
                                                        (expand "b" -9)
                                                        (("1"
                                                          (lemma
                                                           "nominal_AC_fresh_subs?_complete2")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "Delta"
                                                             "G"
                                                             "delta"
                                                             "sig_")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "subs_unify_alg_aux2")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "Delta"
                                                                     "vars(P)"
                                                                     "delta"
                                                                     "sig"
                                                                     "sig_")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "new_sig"
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand
                                                                               "sig_"
                                                                               1)
                                                                              (("1"
                                                                                (use
                                                                                 "idempotent_cons")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 ("sig"
                                                                                  "P"))
                                                                                (("2"
                                                                                  (typepred
                                                                                   "input")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "nice_input?")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (-2
                                                                                            1))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "disjoint?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "empty?")
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (reveal
                                                                               -9
                                                                               -10
                                                                               -12)
                                                                              (("3"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -2
                                                                                  -3
                                                                                  1))
                                                                                (("3"
                                                                                  (expand
                                                                                   "sig_"
                                                                                   1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "contained?")
                                                                                    (("3"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (use
                                                                                         "dom_basic_sub")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "ext_vars"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (reveal
                                                                                             4)
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "choose_eq_vars")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (use
                                                                                         "img_basic_sub")
                                                                                        (("2"
                                                                                          (reveal
                                                                                           4)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "ext_vars")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "vars_singleton"
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "ext_vars"
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "choose_eq_vars")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -4)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "subset?")
                                                                                                                (("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      (("2"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "new_P" 1)
                                                (("2"
                                                  (rewrite
                                                   "apply_sub_unifies")
                                                  (("2"
                                                    (lemma
                                                     "unifies?_equal")
                                                    (("2"
                                                      (inst
                                                       -1
                                                       "Delta"
                                                       "delta"
                                                       "append(delta, sig_)"
                                                       "P1")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (prop)
                                                          (("1"
                                                            (lemma
                                                             "subs_unify_alg_aux2")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "Delta"
                                                               "vars(P)"
                                                               "delta"
                                                               "sig"
                                                               "sig_")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "new_sig"
                                                                   -1)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (reveal
                                                                       -8)
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (expand
                                                                           "sig_"
                                                                           1)
                                                                          (("1"
                                                                            (use
                                                                             "idempotent_cons")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (typepred
                                                                             "input")
                                                                            (("2"
                                                                              (expand
                                                                               ("sig"
                                                                                "P"))
                                                                              (("2"
                                                                                (expand
                                                                                 "nice_input?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (hide-all-but
                                                                                     (-2
                                                                                      1))
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (case
                                                                           "subset?(vars(t, s), vars(P))")
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-1
                                                                              -2
                                                                              1
                                                                              4
                                                                              5))
                                                                            (("1"
                                                                              (expand
                                                                               "contained?")
                                                                              (("1"
                                                                                (prop)
                                                                                (("1"
                                                                                  (use
                                                                                   "dom_basic_sub")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "ext_vars")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (use
                                                                                   "img_basic_sub")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "ext_vars"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "vars_singleton"
                                                                                               1)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "ext_vars"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "subset?")
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (reveal
                                                                               -18
                                                                               -19
                                                                               -21)
                                                                              (("2"
                                                                                (use
                                                                                 "choose_eq_vars")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("2"
                                                                                        (case
                                                                                         "up = (t, s)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (decompose-equality
                                                                                           1)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (rewrite
                                                             "choose_eq_unifies"
                                                             -4)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "P1"
                                                                 1)
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -2 4)
                                              (("2"
                                                (reveal -7)
                                                (("2"
                                                  (lemma
                                                   "unifies_is_more_general_basic_sub")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "Delta"
                                                     "delta"
                                                     "s"
                                                     "sig"
                                                     "t")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace -2)
                                                        (("2"
                                                          (expand
                                                           "new_sig"
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (hide
                                                               2
                                                               -5
                                                               -6)
                                                              (("2"
                                                                (reveal
                                                                 -11
                                                                 -12
                                                                 -14)
                                                                (("2"
                                                                  (prop)
                                                                  (("1"
                                                                    (rewrite
                                                                     "choose_eq_unifies"
                                                                     -6)
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (replace
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "unifies?"
                                                                           (-6
                                                                            1))
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (case
                                                                     "disjoint?(dom(sig), vars(P))")
                                                                    (("1"
                                                                      (case
                                                                       "subset?(vars(t, s), vars(P))")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-1
                                                                          -2
                                                                          1))
                                                                        (("1"
                                                                          (expand
                                                                           "disjoint?")
                                                                          (("1"
                                                                            (expand
                                                                             ("empty?"
                                                                              "subset?"))
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-2
                                                                          -3
                                                                          -4
                                                                          1))
                                                                        (("2"
                                                                          (use
                                                                           "choose_eq_vars")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (hide
                                                                               -1)
                                                                              (("2"
                                                                                (replace
                                                                                 -4)
                                                                                (("2"
                                                                                  (case
                                                                                   "up = (t, s)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (decompose-equality
                                                                                     1)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("2"
                                                                        (typepred
                                                                         "input")
                                                                        (("2"
                                                                          (expand
                                                                           ("sig"
                                                                            "P"))
                                                                          (("2"
                                                                            (expand
                                                                             "nice_input?")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (hide-all-but
                                                                                 (-2
                                                                                  1))
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (append def-decl "list[T]" list_props nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (unifies_is_more_general_basic_sub formula-decl nil nominal_AC_unification
     nil)
    (unifies? const-decl "bool" nominal_AC_unification nil)
    (nominal_AC_fresh_subs_append_context formula-decl nil nominal_AC_fresh_subs nil)
    (G_ skolem-const-decl "fresh_context" nominal_AC_ac_match_alg nil)
    (nominal_AC_fresh_subs?_complete2 formula-decl nil nominal_AC_fresh_subs nil)
    (subs_unify_alg_aux2 formula-decl nil nominal_AC_substitution nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (size def-decl "nat" nominal_AC_term_properties nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (singleton const-decl "(singleton?)" sets nil)
    (subset? const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (dom_basic_sub formula-decl nil nominal_AC_substitution nil)
    (vars_singleton formula-decl nil nominal_AC_term_properties nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (img_basic_sub formula-decl nil nominal_AC_substitution nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (intersection const-decl "set" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (member const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (sig skolem-const-decl "sub" nominal_AC_ac_match_alg nil)
    (P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (sig_ skolem-const-decl
     "(cons?[[variable, nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]])"
     nominal_AC_ac_match_alg nil)
    (idempotent_cons formula-decl nil nominal_AC_substitution nil)
    (new_sig skolem-const-decl
     "list[[variable, nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]]"
     nominal_AC_ac_match_alg nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (b skolem-const-decl "bool" nominal_AC_ac_match_alg nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (apply_sub_unifies formula-decl nil nominal_AC_unification nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (unifies?_equal formula-decl nil nominal_AC_unification nil)
    (new_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (more_general? const-decl "bool" nominal_AC_substitution nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (reverse def-decl "list[T]" list_props nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil))
   shostak))
 (ac_match_completeness_inst2 0
  (ac_match_completeness_inst2-1 nil 3888154535
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "G" "input`1")
          (("" (name-replace "P" "input`2")
            (("" (name-replace "sig" "input`3")
              (("" (name-replace "V" "input`4")
                (("" (name-replace "PV" "input`5")
                  (("" (name-replace "up" "choose_eq(P)`1")
                    (("" (name-replace "P1" "choose_eq(P)`2")
                      (("" (name-replace "t" "up`1")
                        (("" (name-replace "s" "up`2")
                          ((""
                            (name-replace "sig_"
                             "cons((V(t), ext(reverse(p(t)))(s)), null)")
                            ((""
                              (name-replace "G_"
                               "nominal_AC_fresh_subs?(sig_, G)`1")
                              ((""
                                (name-replace
                                 "b"
                                 "nominal_AC_fresh_subs?(sig_, G)`2")
                                ((""
                                  (name-replace
                                   "new_G"
                                   "append(G_, G)")
                                  ((""
                                    (name-replace
                                     "new_sig"
                                     "append(sig_, sig)")
                                    ((""
                                      (name-replace
                                       "new_P"
                                       "apply_sub(sig_, P1)")
                                      ((""
                                        (expand "is_sol?")
                                        ((""
                                          (flatten)
                                          ((""
                                            (expand "b" 3)
                                            ((""
                                              (lemma
                                               "nominal_AC_fresh_subs?_complete2")
                                              ((""
                                                (inst
                                                 -1
                                                 "Delta"
                                                 "G"
                                                 "delta"
                                                 "sig_")
                                                ((""
                                                  (assert)
                                                  ((""
                                                    (assert)
                                                    ((""
                                                      (lemma
                                                       "subs_unify_alg_aux2")
                                                      ((""
                                                        (inst
                                                         -1
                                                         "Delta"
                                                         "vars(P)"
                                                         "delta"
                                                         "sig"
                                                         "sig_")
                                                        ((""
                                                          (assert)
                                                          ((""
                                                            (prop)
                                                            (("1"
                                                              (lemma
                                                               "unifies_is_more_general_basic_sub")
                                                              (("1"
                                                                (hide
                                                                 2
                                                                 5
                                                                 -12
                                                                 -11)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "Delta"
                                                                   "delta"
                                                                   "s"
                                                                   "sig"
                                                                   "t")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (reveal
                                                                       -7)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (hide
                                                                             -1
                                                                             2)
                                                                            (("1"
                                                                              (prop)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "choose_eq_unifies"
                                                                                 -8)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (reveal
                                                                                     -8
                                                                                     -9
                                                                                     -10)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("1"
                                                                                        (case
                                                                                         "up = (t, s)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (decompose-equality
                                                                                           1)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 -6)
                                                                                (("2"
                                                                                  (reveal
                                                                                   -14
                                                                                   -15
                                                                                   -16)
                                                                                  (("2"
                                                                                    (case
                                                                                     "disjoint?(dom(sig), vars(P))")
                                                                                    (("1"
                                                                                      (case
                                                                                       "subset?(vars(t, s), vars(P))")
                                                                                      (("1"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          -2
                                                                                          1))
                                                                                        (("1"
                                                                                          (expand
                                                                                           ("disjoint?"
                                                                                            "subset?"))
                                                                                          (("1"
                                                                                            (expand
                                                                                             "empty?")
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (use
                                                                                         "choose_eq_vars")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -6)
                                                                                            (("2"
                                                                                              (case
                                                                                               "up = (t, s)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (decompose-equality
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         ("sig"
                                                                                          "P"))
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "input")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "nice_input?")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 (-2
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "sig_"
                                                               1)
                                                              (("2"
                                                                (use
                                                                 "idempotent_cons")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (hide-all-but
                                                               1)
                                                              (("3"
                                                                (typepred
                                                                 "input")
                                                                (("3"
                                                                  (expand
                                                                   ("sig"
                                                                    "P"))
                                                                  (("3"
                                                                    (expand
                                                                     "nice_input?")
                                                                    (("3"
                                                                      (flatten)
                                                                      (("3"
                                                                        (hide-all-but
                                                                         (-2
                                                                          1))
                                                                        (("3"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("4"
                                                              (hide
                                                               -1
                                                               -2
                                                               -3
                                                               -4
                                                               -5
                                                               -6
                                                               -7
                                                               -7
                                                               -8
                                                               -9
                                                               -10
                                                               -11
                                                               2
                                                               5)
                                                              (("4"
                                                                (case
                                                                 "subset?(vars(t, s), vars(P))")
                                                                (("1"
                                                                  (case
                                                                   "contained?(sig_, vars(t, s))")
                                                                  (("1"
                                                                    (expand
                                                                     "contained?")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (expand
                                                                           "subset?")
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (inst
                                                                               -2
                                                                               "x")
                                                                              (("1"
                                                                                (inst
                                                                                 -4
                                                                                 "x")
                                                                                (("1"
                                                                                  (prop)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "subset?")
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (inst
                                                                               -3
                                                                               "x")
                                                                              (("2"
                                                                                (inst
                                                                                 -4
                                                                                 "x")
                                                                                (("2"
                                                                                  (prop)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     -1
                                                                     2)
                                                                    (("2"
                                                                      (expand
                                                                       "contained?"
                                                                       1)
                                                                      (("2"
                                                                        (prop)
                                                                        (("1"
                                                                          (expand
                                                                           "sig_"
                                                                           1)
                                                                          (("1"
                                                                            (use
                                                                             "dom_basic_sub")
                                                                            (("1"
                                                                              (rewrite
                                                                               "ext_vars"
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "sig_"
                                                                           1)
                                                                          (("2"
                                                                            (use
                                                                             "img_basic_sub")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "ext_vars"
                                                                                 -1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "vars_singleton"
                                                                                       1)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "ext_vars"
                                                                                         1)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (reveal
                                                                   -16
                                                                   -17
                                                                   -18)
                                                                  (("2"
                                                                    (use
                                                                     "choose_eq_vars")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (replace
                                                                         -5)
                                                                        (("2"
                                                                          (case
                                                                           "up = (t, s)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (decompose-equality
                                                                             1)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (append def-decl "list[T]" list_props nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (nominal_AC_fresh_subs?_complete2 formula-decl nil nominal_AC_fresh_subs nil)
    (subs_unify_alg_aux2 formula-decl nil nominal_AC_substitution nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (vars_singleton formula-decl nil nominal_AC_term_properties nil)
    (img_basic_sub formula-decl nil nominal_AC_substitution nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (dom_basic_sub formula-decl nil nominal_AC_substitution nil)
    (sig_ skolem-const-decl
     "(cons?[[variable, nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]])"
     nominal_AC_ac_match_alg nil)
    (idempotent_cons formula-decl nil nominal_AC_substitution nil)
    (unifies_is_more_general_basic_sub formula-decl nil nominal_AC_unification
     nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sig skolem-const-decl "sub" nominal_AC_ac_match_alg nil)
    (P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (subset? const-decl "bool" sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (intersection const-decl "set" sets nil)
    (union const-decl "set" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (empty? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (disjoint? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (b skolem-const-decl "bool" nominal_AC_ac_match_alg nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (reverse def-decl "list[T]" list_props nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil))
   shostak))
 (ac_match_completeness_inst3 0
  (ac_match_completeness_inst3-1 nil 3888161131
   ("" (assert)
    (("" (skolem 1 ("Del" "del" "input"))
      (("" (flatten)
        (("" (name-replace "G" "input`1")
          (("" (name-replace "P" "input`2")
            (("" (name-replace "sig" "input`3")
              (("" (name-replace "V" "input`4")
                (("" (name-replace "PV" "input`5")
                  (("" (name-replace "up" "choose_eq(P)`1")
                    (("" (name-replace "P1" "choose_eq(P)`2")
                      (("" (name-replace "t" "up`1")
                        (("" (name-replace "s" "up`2")
                          (("" (expand "is_sol?")
                            (("" (flatten)
                              ((""
                                (prop)
                                (("1"
                                  (rewrite "nominal_AC_fresh_subs_append_context")
                                  (("1"
                                    (prop)
                                    (("1"
                                      (use "unifies_nominal_AC_fresh_subs")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (reveal -2 -3 -5)
                                          (("1"
                                            (prop)
                                            (("1"
                                              (rewrite
                                               "choose_eq_unifies")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (case
                                                     "up = (t, s)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -4)
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (decompose-equality
                                                       1)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "subset?(vars(s), PV)")
                                              (("1"
                                                (hide-all-but
                                                 (-1 -9 1))
                                                (("1"
                                                  (expand
                                                   ("disjoint?"
                                                    "subset?"))
                                                  (("1"
                                                    (expand "empty?")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "input")
                                                (("2"
                                                  (expand
                                                   "nice_input?")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (hide
                                                       -1
                                                       -2
                                                       -3
                                                       -4
                                                       -5
                                                       -6
                                                       -7
                                                       -8)
                                                      (("2"
                                                        (expand
                                                         "match_problem?"
                                                         -1)
                                                        (("2"
                                                          (hide
                                                           -7
                                                           -8
                                                           -9
                                                           2
                                                           3)
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (skeep)
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "x")
                                                                (("2"
                                                                  (expand
                                                                   "PV")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (rewrite
                                                                       "vars_args"
                                                                       1)
                                                                      (("2"
                                                                        (inst
                                                                         1
                                                                         "s")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "rhs"
                                                                             1)
                                                                            (("2"
                                                                              (rewrite
                                                                               "sec_proj_mem"
                                                                               1)
                                                                              (("2"
                                                                                (inst
                                                                                 1
                                                                                 "up")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "P")
                                                                                    (("2"
                                                                                      (use
                                                                                       "choose_eq_mem1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (rewrite "choose_eq_unifies" -3)
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (expand "P1")
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (DS const-decl "list[atom]" atoms nil)
    (fc def-decl "fresh_context" nominal_AC_freshness nil)
    (every adt-def-decl "boolean" list_adt nil)
    (nominal_AC_fresh_subs_append_context formula-decl nil nominal_AC_fresh_subs nil)
    (unifies_nominal_AC_fresh_subs formula-decl nil nominal_AC_unification nil)
    (subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (disjoint? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (empty? const-decl "bool" sets nil)
    (PV skolem-const-decl "finite_set[variable]" nominal_AC_ac_match_alg nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (args type-eq-decl nil nominal_AC_term_properties nil)
    (vars_args formula-decl nil nominal_AC_term_properties nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (match_problem? const-decl "bool" nominal_AC_unification nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil))
   shostak))
 (ac_match_completeness_abs 0
  (ac_match_completeness_abs-1 nil 3888250089
   ("" (skolem 1 ("Del" "del" "inp"))
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "G" "inp`1")
          (("" (name-replace "P" "inp`2")
            (("" (name-replace "sig" "inp`3")
              (("" (name-replace "PV" "inp`5")
                (("" (name-replace "up" "choose_eq(P)`1")
                  (("" (name-replace "t" "up`1")
                    (("" (name-replace "s" "up`2")
                      ((""
                        (name-replace "b"
                         "fresh?(abstr(t), body(s))`2")
                        ((""
                          (name-replace "G_"
                           "fresh?(abstr(t), body(s))`1")
                          (("" (reveal -1 -2)
                            ((""
                              (name-replace "pi"
                               "cons((abstr(t), abstr(s)), null)")
                              ((""
                                (name-replace
                                 "dec_P"
                                 "decompose(body(t), ext(pi)(body(s)))`1")
                                ((""
                                  (name-replace
                                   "new_G"
                                   "append(G_, G)")
                                  ((""
                                    (name-replace
                                     "P1"
                                     "choose_eq(P)`2")
                                    ((""
                                      (name-replace
                                       "new_P"
                                       "append(dec_P, P1)")
                                      ((""
                                        (expand "is_sol?" -3)
                                        ((""
                                          (flatten)
                                          ((""
                                            (expand "is_sol?" 3)
                                            ((""
                                              (assert)
                                              ((""
                                                (expand "new_G" 3)
                                                ((""
                                                  (rewrite
                                                   "nominal_AC_fresh_subs_append_context"
                                                   3)
                                                  ((""
                                                    (expand "new_P" 3)
                                                    ((""
                                                      (reveal -2 -10)
                                                      ((""
                                                        (rewrite
                                                         "choose_eq_unifies"
                                                         -6)
                                                        ((""
                                                          (flatten)
                                                          ((""
                                                            (replace
                                                             -1)
                                                            ((""
                                                              (replace
                                                               -2)
                                                              ((""
                                                                (rewrite
                                                                 "unifies?_append")
                                                                ((""
                                                                  (assert)
                                                                  ((""
                                                                    (prop)
                                                                    (("1"
                                                                      (expand
                                                                       "b"
                                                                       1)
                                                                      (("1"
                                                                        (case
                                                                         "up = (t, s)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "unifies?"
                                                                             -7)
                                                                            (("1"
                                                                              (lemma
                                                                               "nominal_AC_term_abs_eta")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "t")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1
                                                                                   -8
                                                                                   :dir
                                                                                   rl)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "subs_abs"
                                                                                     -8)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "nominal_AC_term_abs_eta")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "s")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1
                                                                                           -9
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "subs_abs"
                                                                                             -9)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "equal?"
                                                                                               -9)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "subs(del)(body(s)) = body(s)")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -11
                                                                                                       -12
                                                                                                       -13)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "fresh?_complete")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "Del"
                                                                                                           "abstr(t)"
                                                                                                           "body(s)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -3
                                                                                                      -5
                                                                                                      -13
                                                                                                      1
                                                                                                      3))
                                                                                                    (("2"
                                                                                                      (use
                                                                                                       "subs_no_effect_t")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "subset?(vars(s), PV)")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "disjoint?")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "empty?")
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     ("member"
                                                                                                                      "intersection")
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       ("member"
                                                                                                                        "intersection")
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (prop)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "subset?")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "vars"
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "inp")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "nice_input?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -1
                                                                                                                   -2
                                                                                                                   -3
                                                                                                                   -4
                                                                                                                   -5
                                                                                                                   -6
                                                                                                                   -7
                                                                                                                   -8)
                                                                                                                  (("2"
                                                                                                                    (reveal
                                                                                                                     -33)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "match_problem?"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "subset?"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -2
                                                                                                                               "x")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "PV")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "vars_args"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "s")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "rhs"
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "sec_proj_mem")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 1
                                                                                                                                                 "up")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "up"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (use
                                                                                                                                                       "choose_eq_mem1")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           ("t"
                                                                            "s")
                                                                           1)
                                                                          (("2"
                                                                            (decompose-equality
                                                                             1)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "G_"
                                                                       1)
                                                                      (("2"
                                                                        (use
                                                                         "aux_lemma_fresh_sub1")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (reveal
                                                                             -9
                                                                             -10)
                                                                            (("2"
                                                                              (expand
                                                                               "unifies?"
                                                                               -8)
                                                                              (("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("2"
                                                                                    (use
                                                                                     "nominal_AC_term_abs_eta")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1
                                                                                       -9
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "subs_abs"
                                                                                         -9)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "nominal_AC_term_abs_eta")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "s")
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1
                                                                                               -10
                                                                                               :dir
                                                                                               rl)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "subs_abs"
                                                                                                 -10)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "equal?"
                                                                                                   -10)
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "dec_P"
                                                                       1)
                                                                      (("3"
                                                                        (hide
                                                                         -7
                                                                         -8
                                                                         -3
                                                                         -4)
                                                                        (("3"
                                                                          (reveal
                                                                           -10
                                                                           -11)
                                                                          (("3"
                                                                            (reveal
                                                                             -7)
                                                                            (("3"
                                                                              (lemma
                                                                               "decompose_correct_abs2")
                                                                              (("3"
                                                                                (inst
                                                                                 -1
                                                                                 "Del"
                                                                                 "abstr(t)"
                                                                                 "abstr(s)"
                                                                                 "body(s)"
                                                                                 "del"
                                                                                 "body(t)")
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("3"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "nominal_AC_term_abs_eta")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "t")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "nominal_AC_term_abs_eta")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "s")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "up = (t, s)")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (decompose-equality
                                                                                                           1)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (use
                                                                                         "decompose_ext")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (expand
                                                                                         "unifies?"
                                                                                         -7)
                                                                                        (("3"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("3"
                                                                                            (replace
                                                                                             -3)
                                                                                            (("3"
                                                                                              (lemma
                                                                                               "nominal_AC_term_abs_eta")
                                                                                              (("3"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "t")
                                                                                                (("3"
                                                                                                  (lemma
                                                                                                   "nominal_AC_term_abs_eta")
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "s")
                                                                                                    (("3"
                                                                                                      (replace
                                                                                                       -1
                                                                                                       -9
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("3"
                                                                                                        (replace
                                                                                                         -2
                                                                                                         -9
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("3"
                                                                                                          (rewrite
                                                                                                           "subs_abs"
                                                                                                           -9)
                                                                                                          (("3"
                                                                                                            (rewrite
                                                                                                             "subs_abs"
                                                                                                             -9)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "equal?"
                                                                                                               -9)
                                                                                                              (("3"
                                                                                                                (flatten)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (append def-decl "list[T]" list_props nil)
    (nominal_AC_fresh_subs_append_context formula-decl nil nominal_AC_fresh_subs nil)
    (dec_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (decompose_correct_abs2 formula-decl nil nominal_AC_unification nil)
    (decompose_ext formula-decl nil nominal_AC_unification nil)
    (G_ skolem-const-decl "fresh_context" nominal_AC_ac_match_alg nil)
    (aux_lemma_fresh_sub1 formula-decl nil nominal_AC_fresh_subs nil)
    (b skolem-const-decl "bool" nominal_AC_ac_match_alg nil)
    (s skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]" nominal_AC_ac_match_alg
     nil)
    (t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]" nominal_AC_ac_match_alg
     nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (equal? def-decl "bool" nominal_AC_equality nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (fresh?_complete formula-decl nil nominal_AC_freshness nil)
    (subs_no_effect_t formula-decl nil nominal_AC_substitution nil)
    (subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (PV skolem-const-decl "finite_set[variable]" nominal_AC_ac_match_alg nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (args type-eq-decl nil nominal_AC_term_properties nil)
    (every adt-def-decl "boolean" list_adt nil)
    (vars_args formula-decl nil nominal_AC_term_properties nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (up skolem-const-decl "unif_pair" nominal_AC_ac_match_alg nil)
    (match_problem? const-decl "bool" nominal_AC_unification nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subs_abs formula-decl nil nominal_AC_substitution nil)
    (unifies? const-decl "bool" nominal_AC_unification nil)
    (unifies?_append formula-decl nil nominal_AC_unification nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (fresh? def-decl "[fresh_context, bool]" nominal_AC_freshness nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil))
   shostak))
 (ac_match_completeness 0
  (ac_match_completeness-1 nil 3888072276
   (""
    (measure-induct
     "lex3(card(vars(input`2)), max_size(input`2), num_max_size(input`2))"
     "input")
    (("" (skolem 1 "inp")
      (("" (prop)
        (("" (skolem 1 ("Del" "del"))
          (("" (flatten)
            (("" (hide -1)
              (("" (name-replace "G" "inp`1")
                (("" (name-replace "P" "inp`2")
                  (("" (name-replace "sig" "inp`3")
                    (("" (name-replace "V" "inp`4")
                      (("" (name-replace "PV" "inp`5")
                        (("" (case "null?(P)")
                          (("1" (inst 1 "G" "sig")
                            (("1" (prop)
                              (("1"
                                (expand "P" -1)
                                (("1"
                                  (expand "ac_match" 1)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (hide -3)
                                        (("1"
                                          (expand ("G" "sig"))
                                          (("1"
                                            (expand "member" 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand ("is_sol?" "solves?"))
                                (("2"
                                  (flatten)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (use
                                       "more_general_is_more_general")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (name-replace "up" "choose_eq(P)`1")
                            (("2" (name-replace "P1" "choose_eq(P)`2")
                              (("2"
                                (name-replace "t" "up`1")
                                (("2"
                                  (name-replace "s" "up`2")
                                  (("2"
                                    (hide -1 -2 -3 -4)
                                    (("2"
                                      (case "atom?(t)")
                                      (("1"
                                        (use "nominal_AC_term_at_eta")
                                        (("1"
                                          (case "s = at(a(t))")
                                          (("1"
                                            (reveal -11)
                                            (("1"
                                              (inst
                                               -1
                                               "(G, P1, sig, V, PV)")
                                              (("1"
                                                (prop)
                                                (("1"
                                                  (inst -1 "Del" "del")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (skolem
                                                         -1
                                                         ("G1" "sig1"))
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst
                                                             2
                                                             "G1"
                                                             "sig1")
                                                            (("1"
                                                              (reveal
                                                               -3
                                                               -4
                                                               -5
                                                               -6
                                                               -7
                                                               -8
                                                               -9
                                                               -10)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "ac_match"
                                                                   2)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -8
                                                                       :hide?
                                                                       t)
                                                                      (("1"
                                                                        (replace
                                                                         -7
                                                                         :hide?
                                                                         t)
                                                                        (("1"
                                                                          (replace
                                                                           -6
                                                                           :hide?
                                                                           t)
                                                                          (("1"
                                                                            (replace
                                                                             -5
                                                                             :hide?
                                                                             t)
                                                                            (("1"
                                                                              (replace
                                                                               -3
                                                                               :hide?
                                                                               t)
                                                                              (("1"
                                                                                (expand
                                                                                 "G"
                                                                                 -4)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 3)
                                                        (("2"
                                                          (expand
                                                           "is_sol?")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lemma
                                                                 "choose_eq_unifies")
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "Del"
                                                                   "P"
                                                                   "del")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (expand
                                                                         "P1"
                                                                         1)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -4 3)
                                                  (("2"
                                                    (reveal
                                                     -3
                                                     -4
                                                     -5
                                                     -6
                                                     -7
                                                     -8
                                                     -9
                                                     -10
                                                     -11)
                                                    (("2"
                                                      (lemma
                                                       "ac_match_TCC2")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "inp"
                                                         "G"
                                                         "P"
                                                         "sig"
                                                         "V"
                                                         "PV")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "up"
                                                             "P1")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "t"
                                                                 "s")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "a(t)")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -4 3)
                                                (("2"
                                                  (lemma "ac_match_TCC1")
                                                  (("2"
                                                    (reveal
                                                     -3
                                                     -4
                                                     -5
                                                     -6
                                                     -7
                                                     -8
                                                     -9
                                                     -10
                                                     -11)
                                                    (("2"
                                                      (inst
                                                       -10
                                                       "inp"
                                                       "G"
                                                       "P"
                                                       "sig"
                                                       "V"
                                                       "PV")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst
                                                           -10
                                                           "up"
                                                           "P1")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (inst
                                                               -10
                                                               "t"
                                                               "s")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst
                                                                   -10
                                                                   "a(t)")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 3)
                                            (("2"
                                              (expand "is_sol?" -3)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (hide -3 -5 -6 -7)
                                                  (("2"
                                                    (reveal -6 -7 -9)
                                                    (("2"
                                                      (rewrite
                                                       "choose_eq_unifies"
                                                       -6)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (replace -3)
                                                          (("2"
                                                            (lemma
                                                             "choose_eq_not_unifies_atom")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "Del"
                                                               "P"
                                                               "PV"
                                                               "del")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -4)
                                                                  (("2"
                                                                    (replace
                                                                     -2)
                                                                    (("2"
                                                                      (replace
                                                                       -3)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (prop)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               ("P"
                                                                                "PV"))
                                                                              (("1"
                                                                                (typepred
                                                                                 "inp")
                                                                                (("1"
                                                                                  (expand
                                                                                   "nice_input?")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (reveal
                                                                             -4)
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 1)
                                        (("2"
                                          (case "var?(t)")
                                          (("1"
                                            (hide 1)
                                            (("1"
                                              (case
                                               "(NOT member(V(t), vars(s))) AND (NOT member(V(t), PV))")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (name-replace
                                                   "sig_"
                                                   "cons((V(t), ext(reverse(p(t)))(s)), null)")
                                                  (("1"
                                                    (name-replace
                                                     "G_"
                                                     "nominal_AC_fresh_subs?(sig_, G)`1")
                                                    (("1"
                                                      (name-replace
                                                       "b"
                                                       "nominal_AC_fresh_subs?(sig_, G)`2")
                                                      (("1"
                                                        (name-replace
                                                         "new_G"
                                                         "append(G_, G)")
                                                        (("1"
                                                          (name-replace
                                                           "new_sig"
                                                           "append(sig_, sig)")
                                                          (("1"
                                                            (name-replace
                                                             "new_P"
                                                             "apply_sub(sig_, P1)")
                                                            (("1"
                                                              (case
                                                               "b")
                                                              (("1"
                                                                (reveal
                                                                 -10)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "(new_G, new_P, new_sig, V, PV)")
                                                                  (("1"
                                                                    (prop)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "Del"
                                                                       "del")
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           ("G1"
                                                                            "sig1"))
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               3
                                                                               "G1"
                                                                               "sig1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (reveal
                                                                                   -2
                                                                                   -3
                                                                                   -4
                                                                                   -5
                                                                                   -6
                                                                                   -7
                                                                                   -8
                                                                                   -9
                                                                                   -10)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "ac_match"
                                                                                     3)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (reveal
                                                                                         2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (reveal
                                                                           1)
                                                                          (("2"
                                                                            (hide
                                                                             5)
                                                                            (("2"
                                                                              (lemma
                                                                               "ac_match_completeness_inst")
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "Del"
                                                                                 "del"
                                                                                 "inp")
                                                                                (("2"
                                                                                  (reveal
                                                                                   -3
                                                                                   -4
                                                                                   -5
                                                                                   -6
                                                                                   -7
                                                                                   -8
                                                                                   -9
                                                                                   -10
                                                                                   -11)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -5
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -5)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -5
                                                                                           :hide?
                                                                                           t)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -5
                                                                                             :hide?
                                                                                             t)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -5
                                                                                               :hide?
                                                                                               t)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -3
                                                                                                 :hide?
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -3
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1
                                                                                                     :hide?
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (reveal
                                                                       1)
                                                                      (("2"
                                                                        (hide
                                                                         5)
                                                                        (("2"
                                                                          (lemma
                                                                           "ac_match_TCC4")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "inp"
                                                                             "G"
                                                                             "P"
                                                                             "sig"
                                                                             "V"
                                                                             "PV")
                                                                            (("2"
                                                                              (reveal
                                                                               -2
                                                                               -3
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -10
                                                                                   "up"
                                                                                   "P1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -10
                                                                                       "t"
                                                                                       "s")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -10
                                                                                           "p(t)"
                                                                                           "V(t)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (use
                                                                                               "nominal_AC_term_times_eta")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -11
                                                                                                   "sig_")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -11
                                                                                                       "G_"
                                                                                                       "b")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -11
                                                                                                           "new_G"
                                                                                                           "new_sig"
                                                                                                           "new_P")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     4)
                                                                    (("2"
                                                                      (reveal
                                                                       2)
                                                                      (("2"
                                                                        (lemma
                                                                         "ac_match_TCC3")
                                                                        (("2"
                                                                          (reveal
                                                                           -1
                                                                           -2
                                                                           -3
                                                                           -4
                                                                           -5
                                                                           -6
                                                                           -7
                                                                           -8
                                                                           -9)
                                                                          (("2"
                                                                            (inst
                                                                             -10
                                                                             "inp"
                                                                             "G"
                                                                             "P"
                                                                             "sig"
                                                                             "V"
                                                                             "PV")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -10
                                                                                 "up"
                                                                                 "P1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -10
                                                                                     "t"
                                                                                     "s")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -10
                                                                                         "p(t)"
                                                                                         "V(t)")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (use
                                                                                             "nominal_AC_term_times_eta")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -11
                                                                                                 "sig_")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -11
                                                                                                     "G_"
                                                                                                     "b")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -11
                                                                                                         "new_G"
                                                                                                         "new_sig"
                                                                                                         "new_P")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 4)
                                                                (("2"
                                                                  (reveal
                                                                   2)
                                                                  (("2"
                                                                    (lemma
                                                                     "ac_match_completeness_inst2")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "Del"
                                                                       "del"
                                                                       "inp")
                                                                      (("2"
                                                                        (reveal
                                                                         -2
                                                                         -3
                                                                         -4
                                                                         -5
                                                                         -6
                                                                         -7
                                                                         -8
                                                                         -9
                                                                         -10)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (hide 1)
                                                  (("2"
                                                    (reveal 2)
                                                    (("2"
                                                      (case
                                                       "var?(s) AND V(t) = V(s)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (name-replace
                                                           "G_"
                                                           "append(fc(DS(p(t), p(s)), V(t)), G)")
                                                          (("1"
                                                            (reveal
                                                             -10)
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "(G_, P1, sig, V, PV)")
                                                              (("1"
                                                                (prop)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "Del"
                                                                   "del")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (skolem
                                                                         -1
                                                                         ("G1"
                                                                          "sig1"))
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (inst
                                                                             2
                                                                             "G1"
                                                                             "sig1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (reveal
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 -6
                                                                                 -7
                                                                                 -8
                                                                                 -9
                                                                                 -10)
                                                                                (("1"
                                                                                  (expand
                                                                                   "ac_match"
                                                                                   2)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (reveal
                                                                                       2)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -5
                                                                                         :hide?
                                                                                         t)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -5
                                                                                           :hide?
                                                                                           t)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -5
                                                                                             :hide?
                                                                                             t)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -5
                                                                                               :hide?
                                                                                               t)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -5
                                                                                                 :hide?
                                                                                                 t)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -3
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -3
                                                                                                     :hide?
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :hide?
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "ac_match_completeness_inst3")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "Del"
                                                                           "del"
                                                                           "inp")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (reveal
                                                                               -3
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11)
                                                                              (("2"
                                                                                (replace
                                                                                 -5
                                                                                 :hide?
                                                                                 t)
                                                                                (("2"
                                                                                  (hide
                                                                                   -5)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -5
                                                                                     :hide?
                                                                                     t)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -5
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -5
                                                                                         :hide?
                                                                                         t)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "ac_match_TCC6")
                                                                  (("2"
                                                                    (hide
                                                                     -7
                                                                     3)
                                                                    (("2"
                                                                      (reveal
                                                                       2)
                                                                      (("2"
                                                                        (reveal
                                                                         -2
                                                                         -3
                                                                         -4
                                                                         -5
                                                                         -6
                                                                         -7
                                                                         -8
                                                                         -9
                                                                         -10)
                                                                        (("2"
                                                                          (hide
                                                                           -15)
                                                                          (("2"
                                                                            (inst
                                                                             -10
                                                                             "inp"
                                                                             "G"
                                                                             "P"
                                                                             "sig"
                                                                             "V"
                                                                             "PV")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -10
                                                                                 "up"
                                                                                 "P1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -10
                                                                                     "t"
                                                                                     "s")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -10
                                                                                         "p(t)"
                                                                                         "V(t)")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -10)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "G_")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (use
                                                                                               "nominal_AC_term_times_eta")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 -6
                                                                 -5
                                                                 3)
                                                                (("2"
                                                                  (lemma
                                                                   "ac_match_TCC5")
                                                                  (("2"
                                                                    (reveal
                                                                     -3
                                                                     -4
                                                                     -5
                                                                     -6
                                                                     -7
                                                                     -8
                                                                     -9
                                                                     -10
                                                                     -11
                                                                     2)
                                                                    (("2"
                                                                      (inst
                                                                       -10
                                                                       "inp"
                                                                       "G"
                                                                       "P"
                                                                       "sig"
                                                                       "V"
                                                                       "PV")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -10
                                                                           "up"
                                                                           "P1")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               -10
                                                                               "t"
                                                                               "s")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -10
                                                                                   "p(t)"
                                                                                   "V(t)")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       -10)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "G_")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (use
                                                                                         "nominal_AC_term_times_eta")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (reveal 1)
                                                        (("2"
                                                          (expand
                                                           "is_sol?"
                                                           -2)
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (lemma
                                                               "choose_eq_not_unifies_var")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "Del"
                                                                 "P"
                                                                 "PV"
                                                                 "del")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (reveal
                                                                     -2
                                                                     -3
                                                                     -4
                                                                     -5
                                                                     -6
                                                                     -7
                                                                     -8
                                                                     -9
                                                                     -10)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (replace
                                                                         -4)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (split
                                                                               -10)
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil)
                                                                               ("3"
                                                                                (rewrite
                                                                                 "choose_eq_unifies")
                                                                                (("3"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("4"
                                                                                  (expand
                                                                                   ("P"
                                                                                    "PV"))
                                                                                  (("4"
                                                                                    (typepred
                                                                                     "inp")
                                                                                    (("4"
                                                                                      (expand
                                                                                       "nice_input?")
                                                                                      (("4"
                                                                                        (flatten)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3" (assert) nil nil)
                                               ("4" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 1)
                                            (("2"
                                              (case "unit?(t)")
                                              (("1"
                                                (case "s = unit")
                                                (("1"
                                                  (reveal -10)
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "(G, P1, sig, V, PV)")
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "Del"
                                                         "del")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (prop)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               ("G1"
                                                                "sig1"))
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst
                                                                   2
                                                                   "G1"
                                                                   "sig1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (hide
                                                                       -5
                                                                       -6)
                                                                      (("1"
                                                                        (reveal
                                                                         -4
                                                                         -5
                                                                         -6
                                                                         -7
                                                                         -8
                                                                         -9
                                                                         -10
                                                                         -11
                                                                         -12)
                                                                        (("1"
                                                                          (reveal
                                                                           2
                                                                           3)
                                                                          (("1"
                                                                            (expand
                                                                             "ac_match"
                                                                             4)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide
                                                               -4
                                                               3)
                                                              (("2"
                                                                (expand
                                                                 "is_sol?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (expand
                                                                       "P1"
                                                                       1)
                                                                      (("2"
                                                                        (rewrite
                                                                         "choose_eq_unifies"
                                                                         -4)
                                                                        (("2"
                                                                          (flatten)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide -4 3)
                                                        (("2"
                                                          (lemma
                                                           "ac_match_TCC8")
                                                          (("2"
                                                            (reveal
                                                             -2
                                                             -3
                                                             -4
                                                             -5
                                                             -6
                                                             -7
                                                             -8
                                                             -9
                                                             -10)
                                                            (("2"
                                                              (inst
                                                               -10
                                                               "inp"
                                                               "G"
                                                               "P"
                                                               "sig"
                                                               "V"
                                                               "PV")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst
                                                                   -10
                                                                   "up"
                                                                   "P1")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -10
                                                                       "t"
                                                                       "s")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide -4 3)
                                                      (("2"
                                                        (lemma
                                                         "ac_match_TCC7")
                                                        (("2"
                                                          (reveal
                                                           -2
                                                           -3
                                                           -4
                                                           -5
                                                           -6
                                                           -7
                                                           -8
                                                           -9
                                                           -10)
                                                          (("2"
                                                            (inst
                                                             -10
                                                             "inp"
                                                             "G"
                                                             "P"
                                                             "sig"
                                                             "V"
                                                             "PV")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -10
                                                                 "up"
                                                                 "P1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -10
                                                                     "t"
                                                                     "s")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "choose_eq_not_unifies_unit")
                                                  (("2"
                                                    (expand
                                                     "is_sol?"
                                                     -3)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "Del"
                                                           "P")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (reveal
                                                               -3
                                                               -4
                                                               -5
                                                               -6)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (rewrite
                                                                   "choose_eq_unifies"
                                                                   -7)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           ("P"
                                                                            "PV"))
                                                                          (("2"
                                                                            (typepred
                                                                             "inp")
                                                                            (("2"
                                                                              (expand
                                                                               "nice_input?")
                                                                              (("2"
                                                                                (flatten)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (case "app?(t)")
                                                (("1"
                                                  (hide 1)
                                                  (("1"
                                                    (lemma
                                                     "nominal_AC_term_app_eta")
                                                    (("1"
                                                      (inst -1 "t")
                                                      (("1"
                                                        (name-replace
                                                         "f"
                                                         "f_sym(t)")
                                                        (("1"
                                                          (reveal -1)
                                                          (("1"
                                                            (case
                                                             "NOT app?(s) OR f/= f_sym(s) OR NOT decompose(arg(t), arg(s))`2")
                                                            (("1"
                                                              (expand
                                                               "is_sol?"
                                                               -5)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (use
                                                                   "choose_eq_not_unifies_app")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (reveal
                                                                       -6
                                                                       -7
                                                                       -9)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -3)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (replace
                                                                               -2)
                                                                              (("1"
                                                                                (replace
                                                                                 -6)
                                                                                (("1"
                                                                                  (split
                                                                                   -4)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (rewrite
                                                                                     "choose_eq_unifies"
                                                                                     -9)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (expand
                                                                                       ("P"
                                                                                        "PV"))
                                                                                      (("3"
                                                                                        (typepred
                                                                                         "inp")
                                                                                        (("3"
                                                                                          (expand
                                                                                           "nice_input?")
                                                                                          (("3"
                                                                                            (flatten)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (name-replace
                                                                 "dec_P"
                                                                 "decompose(arg(t), arg(s))`1")
                                                                (("2"
                                                                  (name-replace
                                                                   "new_P"
                                                                   "append(dec_P, P1)")
                                                                  (("2"
                                                                    (reveal
                                                                     -12)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "(G, new_P, sig, V, PV)")
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "Del"
                                                                           "del")
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (skolem
                                                                               -1
                                                                               ("G1"
                                                                                "sig1"))
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   2
                                                                                   "G1"
                                                                                   "sig1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -11
                                                                                       -12
                                                                                       -2)
                                                                                      (("1"
                                                                                        (reveal
                                                                                         -5
                                                                                         -7
                                                                                         -8
                                                                                         -9
                                                                                         -10
                                                                                         -11
                                                                                         -12
                                                                                         -13
                                                                                         -14
                                                                                         -15)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ac_match"
                                                                                           2)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               -10
                                                                               3)
                                                                              (("2"
                                                                                (expand
                                                                                 "is_sol?")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "new_P"
                                                                                       1)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "unifies?_append"
                                                                                         1)
                                                                                        (("2"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "dec_P"
                                                                                             1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "decompose_correct_app")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "Del"
                                                                                                 "f"
                                                                                                 "arg(s)"
                                                                                                 "del"
                                                                                                 "arg(t)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "choose_eq_unifies"
                                                                                                       -11)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (reveal
                                                                                                           -4
                                                                                                           -6
                                                                                                           -7
                                                                                                           -9)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -12)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "s = app(f, arg(s))")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "up = (t, s)")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (decompose-equality
                                                                                                                       1)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (lemma
                                                                                                                   "nominal_AC_term_app_eta")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "s")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "P1"
                                                                                             1)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "choose_eq_unifies"
                                                                                               -10)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           -9
                                                                           -10
                                                                           3)
                                                                          (("2"
                                                                            (lemma
                                                                             "ac_match_TCC10")
                                                                            (("2"
                                                                              (reveal
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11
                                                                               -12
                                                                               -13)
                                                                              (("2"
                                                                                (inst
                                                                                 -10
                                                                                 "inp"
                                                                                 "G"
                                                                                 "P"
                                                                                 "sig"
                                                                                 "V"
                                                                                 "PV")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -10
                                                                                     "up"
                                                                                     "P1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -10
                                                                                         "t"
                                                                                         "s")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -10
                                                                                             "f"
                                                                                             "arg(t)")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -10
                                                                                                 "dec_P"
                                                                                                 "new_P")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         -9
                                                                         -10
                                                                         3)
                                                                        (("2"
                                                                          (lemma
                                                                           "ac_match_TCC9")
                                                                          (("2"
                                                                            (reveal
                                                                             -5
                                                                             -6
                                                                             -7
                                                                             -8
                                                                             -9
                                                                             -10
                                                                             -11
                                                                             -12
                                                                             -13)
                                                                            (("2"
                                                                              (inst
                                                                               -10
                                                                               "inp"
                                                                               "G"
                                                                               "P"
                                                                               "sig"
                                                                               "V"
                                                                               "PV")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -10
                                                                                   "up"
                                                                                   "P1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -10
                                                                                       "t"
                                                                                       "s")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -10
                                                                                           "f"
                                                                                           "arg(t)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -10
                                                                                               "dec_P"
                                                                                               "new_P")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 1 2)
                                                  (("2"
                                                    (case "abs?(t)")
                                                    (("1"
                                                      (case
                                                       "NOT abs?(s) OR NOT decompose(body(t), body(s))`2")
                                                      (("1"
                                                        (expand
                                                         "is_sol?"
                                                         -3)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (lemma
                                                             "choose_eq_not_unifies_abs")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "Del"
                                                               "P"
                                                               "PV"
                                                               "del")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (reveal
                                                                     -2
                                                                     -3
                                                                     -5)
                                                                    (("1"
                                                                      (replace
                                                                       -3)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -4)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (rewrite
                                                                                 "choose_eq_unifies"
                                                                                 -7)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("3"
                                                                                  (expand
                                                                                   ("P"
                                                                                    "PV"))
                                                                                  (("3"
                                                                                    (typepred
                                                                                     "inp")
                                                                                    (("3"
                                                                                      (expand
                                                                                       "nice_input?")
                                                                                      (("3"
                                                                                        (flatten)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (name-replace
                                                           "a"
                                                           "abstr(t)")
                                                          (("2"
                                                            (case
                                                             "a = abstr(s)")
                                                            (("1"
                                                              (name-replace
                                                               "dec_P"
                                                               "decompose(body(t), body(s))`1")
                                                              (("1"
                                                                (name-replace
                                                                 "new_P"
                                                                 "append(dec_P, P1)")
                                                                (("1"
                                                                  (reveal
                                                                   -10)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "(G, new_P, sig, V, PV)")
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "Del"
                                                                         "del")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (skolem
                                                                               -1
                                                                               ("G1"
                                                                                "sig1"))
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   2
                                                                                   "G1"
                                                                                   "sig1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (reveal
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       -6
                                                                                       -7
                                                                                       -8
                                                                                       -9
                                                                                       -10)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "ac_match"
                                                                                         2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               -9
                                                                               3)
                                                                              (("2"
                                                                                (expand
                                                                                 "is_sol?")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "new_P"
                                                                                       1)
                                                                                      (("2"
                                                                                        (reveal
                                                                                         -3
                                                                                         -4
                                                                                         -6)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "unifies?_append"
                                                                                           1)
                                                                                          (("2"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "dec_P"
                                                                                               1)
                                                                                              (("1"
                                                                                                (use
                                                                                                 "decompose_correct_abs1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "nominal_AC_term_abs_eta")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -8
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "nominal_AC_term_abs_eta")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "t")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -10)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "choose_eq_unifies"
                                                                                                                     -15)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -6)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "up = (t, s)")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (decompose-equality
                                                                                                                             1)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (rewrite
                                                                                               "choose_eq_unifies"
                                                                                               -12)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "P1"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "ac_match_TCC12")
                                                                        (("2"
                                                                          (hide
                                                                           -9
                                                                           -10
                                                                           3)
                                                                          (("2"
                                                                            (reveal
                                                                             -3
                                                                             -4
                                                                             -5
                                                                             -6
                                                                             -7
                                                                             -8
                                                                             -9
                                                                             -10
                                                                             -11)
                                                                            (("2"
                                                                              (inst
                                                                               -10
                                                                               "inp"
                                                                               "G"
                                                                               "P"
                                                                               "sig"
                                                                               "V"
                                                                               "PV")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -10
                                                                                   "up"
                                                                                   "P1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -10
                                                                                       "t"
                                                                                       "s")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -10
                                                                                           "a"
                                                                                           "body(t)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -10)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "dec_P"
                                                                                                 "new_P")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "nominal_AC_term_abs_eta")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "t")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -8
                                                                       -9
                                                                       3)
                                                                      (("2"
                                                                        (lemma
                                                                         "ac_match_TCC11")
                                                                        (("2"
                                                                          (reveal
                                                                           -3
                                                                           -4
                                                                           -5
                                                                           -6
                                                                           -7
                                                                           -8
                                                                           -9
                                                                           -10
                                                                           -11)
                                                                          (("2"
                                                                            (inst
                                                                             -10
                                                                             "inp"
                                                                             "G"
                                                                             "P"
                                                                             "sig"
                                                                             "V"
                                                                             "PV")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -10
                                                                                 "up"
                                                                                 "P1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -10
                                                                                     "t"
                                                                                     "s")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -10
                                                                                         "a"
                                                                                         "body(t)")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -10)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "dec_P"
                                                                                               "new_P")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "nominal_AC_term_abs_eta")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "t")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               "b"
                                                               "fresh?(a, body(s))`2")
                                                              (("2"
                                                                (name-replace
                                                                 "G_"
                                                                 "fresh?(a, body(s))`1")
                                                                (("2"
                                                                  (name-replace
                                                                   "new_G"
                                                                   "append(G_, G)")
                                                                  (("2"
                                                                    (name-replace
                                                                     "pi"
                                                                     "cons[[atom, atom]]((a, abstr(s)), null)")
                                                                    (("2"
                                                                      (name-replace
                                                                       "dec_P"
                                                                       "decompose(body(t), ext(pi)(body(s)))`1")
                                                                      (("2"
                                                                        (name-replace
                                                                         "new_P"
                                                                         "append(dec_P, P1)")
                                                                        (("2"
                                                                          (case
                                                                           "b")
                                                                          (("1"
                                                                            (reveal
                                                                             -10)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "(new_G, new_P, sig, V, PV)")
                                                                              (("1"
                                                                                (prop)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "Del"
                                                                                   "del")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (skolem
                                                                                         -1
                                                                                         ("G1"
                                                                                          "sig1"))
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (inst
                                                                                             3
                                                                                             "G1"
                                                                                             "sig1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (reveal
                                                                                                 -2
                                                                                                 -3
                                                                                                 -4
                                                                                                 -5
                                                                                                 -6
                                                                                                 -7
                                                                                                 -8
                                                                                                 -9
                                                                                                 -10)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "ac_match"
                                                                                                   3)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         4
                                                                                         -13)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "ac_match_completeness_abs")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "Del"
                                                                                             "del"
                                                                                             "inp")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (reveal
                                                                                                 -4
                                                                                                 -5
                                                                                                 -6
                                                                                                 -7
                                                                                                 -8
                                                                                                 -9
                                                                                                 -10
                                                                                                 -11
                                                                                                 -12)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -12
                                                                                   -13
                                                                                   4)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "ac_match_TCC14")
                                                                                    (("2"
                                                                                      (reveal
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       -6
                                                                                       -7
                                                                                       -8
                                                                                       -9
                                                                                       -10
                                                                                       -11)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -10
                                                                                         "inp"
                                                                                         "G"
                                                                                         "P"
                                                                                         "sig"
                                                                                         "V"
                                                                                         "PV")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -10
                                                                                             "up"
                                                                                             "P1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -10
                                                                                                 "t"
                                                                                                 "s")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -10
                                                                                                     "a"
                                                                                                     "body(t)")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         -10)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "G_"
                                                                                                           "b")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "new_G"
                                                                                                               "pi"
                                                                                                               "dec_P"
                                                                                                               "new_P")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           -5
                                                                                                           -6
                                                                                                           -7
                                                                                                           -8
                                                                                                           -9)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "nominal_AC_term_abs_eta")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "t")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 4
                                                                                 -12
                                                                                 -13)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "ac_match_TCC13")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     -3
                                                                                     -4
                                                                                     -5
                                                                                     -6
                                                                                     -7
                                                                                     -8
                                                                                     -9
                                                                                     -10
                                                                                     -11)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -10
                                                                                       "inp"
                                                                                       "G"
                                                                                       "P"
                                                                                       "sig"
                                                                                       "V"
                                                                                       "PV")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -10
                                                                                           "up"
                                                                                           "P1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -10
                                                                                               "t"
                                                                                               "s")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -10
                                                                                                   "abstr(t)"
                                                                                                   "body(t)")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -10)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "G_"
                                                                                                         "b")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "new_G"
                                                                                                             "pi"
                                                                                                             "dec_P"
                                                                                                             "new_P")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         -5
                                                                                                         -6
                                                                                                         -7
                                                                                                         -8
                                                                                                         -9
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "nominal_AC_term_abs_eta")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "t")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             -12
                                                                             4)
                                                                            (("2"
                                                                              (lemma
                                                                               "ac_match_completeness_abs")
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "Del"
                                                                                 "del"
                                                                                 "inp")
                                                                                (("2"
                                                                                  (reveal
                                                                                   -3
                                                                                   -4
                                                                                   -5
                                                                                   -6
                                                                                   -7
                                                                                   -8
                                                                                   -9
                                                                                   -10
                                                                                   -11)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (case
                                                       "ac_app?(t)")
                                                      (("1"
                                                        (hide 1)
                                                        (("1"
                                                          (lemma
                                                           "nominal_AC_term_ac_app_eta")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "t")
                                                            (("1"
                                                              (name-replace
                                                               "f"
                                                               "ac_sym(t)")
                                                              (("1"
                                                                (reveal
                                                                 -1)
                                                                (("1"
                                                                  (case
                                                                   "is_ac_sym?(s, f)")
                                                                  (("1"
                                                                    (name-replace
                                                                     "inp_lst"
                                                                     "apply_ac(G, cons((t, s), P1), sig, V, PV)")
                                                                    (("1"
                                                                      (name-replace
                                                                       "lst_results"
                                                                       "map(ac_match)(inp_lst)")
                                                                      (("1"
                                                                        (lemma
                                                                         "apply_ac_complete2")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "Del"
                                                                           "del"
                                                                           "inp")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (reveal
                                                                               -4
                                                                               -5
                                                                               -6
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11
                                                                               -12)
                                                                              (("1"
                                                                                (replace
                                                                                 -9)
                                                                                (("1"
                                                                                  (replace
                                                                                   -8)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -7)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -6)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -5)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -4)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -3)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -10)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -2
                                                                                                       -3
                                                                                                       -4
                                                                                                       -5
                                                                                                       -6
                                                                                                       -7
                                                                                                       -8
                                                                                                       -9
                                                                                                       -10)
                                                                                                      (("1"
                                                                                                        (skolem
                                                                                                         -1
                                                                                                         ("gam"
                                                                                                          "inp1"))
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (reveal
                                                                                                             -13)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "inp1")
                                                                                                              (("1"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "Del"
                                                                                                                   "append(gam, del)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (skolem
                                                                                                                       -1
                                                                                                                       ("Gam1"
                                                                                                                        "sig1"))
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           2
                                                                                                                           "Gam1"
                                                                                                                           "sig1")
                                                                                                                          (("1"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (reveal
                                                                                                                               -3
                                                                                                                               -5
                                                                                                                               -6
                                                                                                                               -7
                                                                                                                               -8
                                                                                                                               -9
                                                                                                                               -10
                                                                                                                               -11
                                                                                                                               -12
                                                                                                                               -13)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "ac_match"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -9)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -10)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -7)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -6)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -4)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -5)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -3)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "is_ac_sym?"
                                                                                                                                                       -20)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -19)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -8)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -19)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "mem_flatten_map2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     1
                                                                                                                                                                     "inp1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (use
                                                                                                                               "solves_elim_append")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (prop)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "member((Gam1, sig1), ac_match(inp))")
                                                                                                                                    (("1"
                                                                                                                                      (use
                                                                                                                                       "ac_match_vars_ctx")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              1))
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "V"
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (typepred
                                                                                                                                                 "inp")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "nice_input?")
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       -1
                                                                                                                                                       -2
                                                                                                                                                       -3
                                                                                                                                                       -6
                                                                                                                                                       -7
                                                                                                                                                       -8
                                                                                                                                                       -9)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "subset?")
                                                                                                                                                        (("1"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     ("member"
                                                                                                                                                                      "union")
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide
                                                                                                                                       -2
                                                                                                                                       -3
                                                                                                                                       -4
                                                                                                                                       -5
                                                                                                                                       -6
                                                                                                                                       -7
                                                                                                                                       -14
                                                                                                                                       -15
                                                                                                                                       -16)
                                                                                                                                      (("2"
                                                                                                                                        (reveal
                                                                                                                                         -14
                                                                                                                                         -16
                                                                                                                                         -17
                                                                                                                                         -18
                                                                                                                                         -19
                                                                                                                                         -20
                                                                                                                                         -21
                                                                                                                                         -22
                                                                                                                                         -23
                                                                                                                                         -24)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "ac_match"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -10)
                                                                                                                                            (("2"
                                                                                                                                              (hide
                                                                                                                                               2
                                                                                                                                               3)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -9)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -5)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -4)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -3)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -2)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -8)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -7)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -6)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "is_ac_sym?"
                                                                                                                                                                   -14)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -13)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "mem_flatten_map2")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               1
                                                                                                                                                                               "inp1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (use
                                                                                                                                     "apply_ac_vars2")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (expand
                                                                                                                                     "is_sol?"
                                                                                                                                     -14)
                                                                                                                                    (("3"
                                                                                                                                      (flatten)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("4"
                                                                                                                                    (expand
                                                                                                                                     "is_sol?"
                                                                                                                                     -14)
                                                                                                                                    (("4"
                                                                                                                                      (flatten)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -12
                                                                                                                   -13
                                                                                                                   -14
                                                                                                                   3
                                                                                                                   -2
                                                                                                                   -3
                                                                                                                   -4
                                                                                                                   -5)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "ac_match_TCC16")
                                                                                                                    (("2"
                                                                                                                      (reveal
                                                                                                                       -11
                                                                                                                       -12
                                                                                                                       -13
                                                                                                                       -14
                                                                                                                       -15
                                                                                                                       -16
                                                                                                                       -17
                                                                                                                       -18
                                                                                                                       -19)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -10
                                                                                                                         "inp"
                                                                                                                         "G"
                                                                                                                         "P"
                                                                                                                         "sig"
                                                                                                                         "V"
                                                                                                                         "PV")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -10
                                                                                                                             "up"
                                                                                                                             "P1")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -10
                                                                                                                                 "t"
                                                                                                                                 "s")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -10
                                                                                                                                     "f"
                                                                                                                                     "ac_arg(t)")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "is_ac_sym?"
                                                                                                                                         -14)
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -10
                                                                                                                                               "inp_lst")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "every_nth2")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -10
                                                                                                                                                     "inp1")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "ac_prb?"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "is_ac_sym?"
                                                                                                         -12)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       3)
                                                                      (("2"
                                                                        (use
                                                                         "choose_eq_nice_input2")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (reveal
                                                                             -4
                                                                             -5
                                                                             -6
                                                                             -7
                                                                             -8
                                                                             -9
                                                                             -10
                                                                             -11
                                                                             -12)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     3)
                                                                    (("2"
                                                                      (expand
                                                                       "is_sol?"
                                                                       -4)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (reveal
                                                                           -3
                                                                           -4
                                                                           -5
                                                                           -6)
                                                                          (("2"
                                                                            (lemma
                                                                             "choose_eq_not_unifies_ac_app")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "Del"
                                                                               "P"
                                                                               "PV"
                                                                               "del")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "choose_eq_unifies"
                                                                                     -9)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             ("P"
                                                                                              "PV"))
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "inp")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nice_input?")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide
                                                         -1
                                                         -2
                                                         -3
                                                         4)
                                                        (("2"
                                                          (reveal
                                                           2
                                                           3
                                                           4
                                                           5
                                                           -5
                                                           -7)
                                                          (("2"
                                                            (case
                                                             "pair?(t)")
                                                            (("1"
                                                              (typepred
                                                               "inp")
                                                              (("1"
                                                                (reveal
                                                                 -11)
                                                                (("1"
                                                                  (case
                                                                   "well_formed?(P)")
                                                                  (("1"
                                                                    (rewrite
                                                                     "well_formed_unif_prb"
                                                                     -1)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "t")
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (expand
                                                                           "well_formed?"
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (use
                                                                           "choose_eq_mem1")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (replace
                                                                               -6)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "member_unif_prb_equiv"
                                                                                 1)
                                                                                (("2"
                                                                                  (inst
                                                                                   1
                                                                                   "up")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "nice_input?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (sig skolem-const-decl "sub" nominal_AC_ac_match_alg nil)
    (G skolem-const-decl "fresh_context" nominal_AC_ac_match_alg nil)
    (P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (more_general_is_more_general formula-decl nil nominal_AC_substitution nil)
    (atom? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (at adt-constructor-decl "[atom -> (atom?)]" nominal_AC_term_adt nil)
    (a adt-accessor-decl "[(atom?) -> atom]" nominal_AC_term_adt nil)
    (P1 skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (V skolem-const-decl "finite_set[variable]" nominal_AC_ac_match_alg nil)
    (PV skolem-const-decl "finite_set[variable]" nominal_AC_ac_match_alg nil)
    (ac_match_TCC2 termination-tcc nil nominal_AC_ac_match_alg nil)
    (choose_eq_unifies formula-decl nil nominal_AC_ac_step nil)
    (ac_match_TCC1 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (choose_eq_not_unifies_atom formula-decl nil nominal_AC_ac_step nil)
    (t skolem-const-decl
     "nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]" nominal_AC_ac_match_alg
     nil)
    (nominal_AC_term_at_eta formula-decl nil nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (member const-decl "bool" sets nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (new_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (new_sig skolem-const-decl
     "list[[variable, nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]]"
     nominal_AC_ac_match_alg nil)
    (ac_match_TCC4 termination-tcc nil nominal_AC_ac_match_alg nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_match_completeness_inst formula-decl nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC3 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_completeness_inst2 formula-decl nil nominal_AC_ac_match_alg nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (append def-decl "list[T]" list_props nil)
    (nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (DS const-decl "list[atom]" atoms nil)
    (fc def-decl "fresh_context" nominal_AC_freshness nil)
    (every adt-def-decl "boolean" list_adt nil)
    (G_ skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg nil)
    (ac_match_TCC6 termination-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_completeness_inst3 formula-decl nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC5 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (choose_eq_not_unifies_var formula-decl nil nominal_AC_ac_step nil)
    (unit? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (choose_eq_not_unifies_unit formula-decl nil nominal_AC_ac_step nil)
    (ac_match_TCC7 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC8 termination-tcc nil nominal_AC_ac_match_alg nil)
    (unit adt-constructor-decl "(unit?)" nominal_AC_term_adt nil)
    (ac_app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (nominal_AC_term_ac_app_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" nominal_AC_term_adt nil)
    (is_ac_sym? const-decl "bool" nominal_AC_term_properties nil)
    (choose_eq_nice_input2 formula-decl nil nominal_AC_ac_step nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (ac_prb? const-decl "bool" nominal_AC_unification nil)
    (pre_nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (every_nth2 formula-decl nil list_aux_equational_reasoning nil)
    (ac_arg adt-accessor-decl "[(ac_app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (ac_match_TCC16 termination-tcc nil nominal_AC_ac_match_alg nil)
    (solves_elim_append formula-decl nil nominal_AC_unification nil)
    (ac_match_vars_ctx formula-decl nil nominal_AC_ac_match_alg nil)
    (union const-decl "set" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (apply_ac_vars2 formula-decl nil nominal_AC_ac_step nil)
    (mem_flatten_map2 formula-decl nil list_aux_equational_reasoning2parameters nil)
    (apply_ac_complete2 formula-decl nil nominal_AC_ac_step nil)
    (apply_ac const-decl "list[nice_input]" nominal_AC_ac_step nil)
    (choose_eq_not_unifies_ac_app formula-decl nil nominal_AC_ac_step nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (well_formed? const-decl "bool" nominal_AC_term_properties nil)
    (well_formed_unif_prb formula-decl nil nominal_AC_unification nil)
    (pair? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (choose_eq_not_unifies_abs formula-decl nil nominal_AC_ac_step nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (fresh? def-decl "[fresh_context, bool]" nominal_AC_freshness nil)
    (new_G skolem-const-decl "list[[atom, variable]]" nominal_AC_ac_match_alg
     nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (ac_match_TCC14 termination-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_completeness_abs formula-decl nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC13 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC11 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (dec_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (decompose_correct_abs1 formula-decl nil nominal_AC_unification nil)
    (ac_match_TCC12 termination-tcc nil nominal_AC_ac_match_alg nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (new_P skolem-const-decl "list[unif_pair]" nominal_AC_ac_match_alg nil)
    (ac_match_TCC10 termination-tcc nil nominal_AC_ac_match_alg nil)
    (decompose_correct_app formula-decl nil nominal_AC_unification nil)
    (app adt-constructor-decl "[[f_symbol, nominal_AC_term] -> (app?)]" nominal_AC_term_adt
     nil)
    (string type-eq-decl nil strings nil)
    (dec_P skolem-const-decl "unif_prb" nominal_AC_ac_match_alg nil)
    (unifies?_append formula-decl nil nominal_AC_unification nil)
    (ac_match_TCC9 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (choose_eq_not_unifies_app formula-decl nil nominal_AC_ac_step nil)
    (arg adt-accessor-decl "[(app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (/= const-decl "boolean" notequal nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (f_sym adt-accessor-decl "[(app?) -> f_symbol]" nominal_AC_term_adt nil)
    (nominal_AC_term_app_eta formula-decl nil nominal_AC_term_adt nil)
    (app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (subset? const-decl "bool" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (member def-decl "bool" list_props nil)
    (ac_match def-decl "list[[fresh_context, sub]]" nominal_AC_ac_match_alg nil)
    (solves? const-decl "bool" nominal_AC_unification nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (well_founded_le formula-decl nil ordinals nil)
    (< def-decl "bool" ordinals nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (lex3 const-decl "ordinal" lex3 nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   shostak))
 (ac_match_completeness_match_aux_TCC1 0
  (ac_match_completeness_match_aux_TCC1-1 nil 3890505735
   ("" (skeep)
    (("" (use "nice_input_initial_problem") (("" (assert) nil nil))
      nil))
    nil)
   ((nice_input_initial_problem formula-decl nil nominal_AC_ac_step nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   nil
   (ac_match_completeness_match_aux subtype
    "(list_adt[[atom, variable]].null, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].null), list_adt[basic_sub].null, nominal_AC_ac_match_alg.V, nominal_AC_term_properties.vars(nominal_AC_ac_match_alg.s))"
    "nice_input")))
 (ac_match_completeness_match_aux 0
  (ac_match_completeness_match_aux-1 nil 3897553951
   ("" (skeep)
    (("" (use "ac_match_completeness")
      (("1" (assert)
        (("1" (assert)
          (("1" (skeep)
            (("1" (inst 1 "Gamma1" "sigma1")
              (("1" (assert)
                (("1" (expand "is_instance?" 1)
                  (("1" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (use "nice_input_initial_problem")
          (("2" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((ac_match_completeness formula-decl nil nominal_AC_ac_match_alg nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nice_input_initial_problem formula-decl nil nominal_AC_ac_step nil))
   shostak))
 (ac_match_completeness_eq_check_aux_TCC1 0
  (ac_match_completeness_eq_check_aux_TCC1-1 nil 3897595239
   ("" (skeep)
    (("" (use "nice_input_initial_problem2") (("" (assert) nil nil))
      nil))
    nil)
   ((nice_input_initial_problem2 formula-decl nil nominal_AC_ac_step nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil))
   nil
   (ac_match_completeness_eq_check_aux subtype
    "(list_adt[[atom, variable]].null, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].null), list_adt[basic_sub].null, nominal_AC_ac_match_alg.V, nominal_AC_unification.vars(nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s))"
    "nice_input")))
 (ac_match_completeness_eq_check_aux 0
  (ac_match_completeness_eq_check_aux-1 nil 3897595239
   ("" (skeep)
    (("" (use "ac_match_completeness")
      (("1" (assert)
        (("1" (assert)
          (("1" (skeep)
            (("1" (inst 1 "Gamma1" "sigma1")
              (("1" (assert)
                (("1" (expand "is_instance?" 1)
                  (("1" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (use "nice_input_initial_problem")
          (("2" (assert)
            (("2" (use "nice_input_initial_problem2")
              (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_initial_problem2 formula-decl nil nominal_AC_ac_step nil)
    (nice_input_initial_problem formula-decl nil nominal_AC_ac_step nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (ac_match_completeness formula-decl nil nominal_AC_ac_match_alg nil))
   shostak))
 (ac_match_var_inp_choose_eq_TCC1 0
  (ac_match_var_inp_choose_eq_TCC1-1 nil 3897292142
   ("" (skeep)
    (("" (hide -3 -5)
      (("" (use "choose_eq_nice_input") (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (choose_eq_nice_input formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_choose_eq subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_choose_eq_TCC2 0
  (ac_match_var_inp_choose_eq_TCC2-1 nil 3897292142
   ("" (skeep)
    (("" (hide -4 -5)
      (("" (use "choose_eq_nice_input") (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (choose_eq_nice_input formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_choose_eq subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma_, nominal_AC_ac_match_alg.V_, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_choose_eq 0
  (ac_match_var_inp_choose_eq-1 nil 3897296051
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (expand "var_inputs?")
          (("" (flatten)
            (("" (assert)
              (("" (case "subset?(vars(choose_eq(P)`2), vars(P))")
                (("1" (hide-all-but (-1 -8 2))
                  (("1" (expand "subset?")
                    (("1" (skeep)
                      (("1" (inst?)
                        (("1" (inst?) (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide-all-but 1)
                  (("2" (use "choose_eq_vars")
                    (("2" (flatten) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (subset? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil))
   shostak))
 (ac_match_var_inp_var_TCC1 0
  (ac_match_var_inp_var_TCC2-1 nil 3897297601
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (hide -5 -7)
              (("" (lemma "nice_input_apply_sub")
                ((""
                  (inst -1 "G" "P" "P1" "PV" "V1" "V(t)" "p(t)" "s"
                   "sigma")
                  (("" (assert)
                    (("" (replace -9)
                      (("" (replace -8 :dir rl)
                        (("" (replace -9 :dir rl)
                          (("" (replace -11 :dir rl)
                            (("" (assert)
                              ((""
                                (split 1)
                                (("1"
                                  (case "t = p(t) * V(t)")
                                  (("1"
                                    (replace -1 :dir rl)
                                    (("1"
                                      (rewrite "member_unif_prb_equiv")
                                      (("1"
                                        (inst 1 "up")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (use "choose_eq_mem1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite "nominal_AC_term_times_eta" 1)
                                    nil
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "rhs" 1)
                                  (("2"
                                    (rewrite "sec_proj_mem" 1)
                                    (("2"
                                      (inst 1 "up")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (use "choose_eq_mem1")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (use "choose_eq2_subset")
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_apply_sub formula-decl nil nominal_AC_ac_step nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (* adt-constructor-decl "[[perm, variable] -> (var?)]" nominal_AC_term_adt
       nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (ac_match_var_inp_var subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, list_props[basic_sub].append(nominal_AC_ac_match_alg.sigma1, nominal_AC_ac_match_alg.sigma), nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_var_TCC2 0
  (ac_match_var_inp_var_TCC3-1 nil 3897297601
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (hide -6 -7)
              (("" (lemma "nice_input_apply_sub")
                ((""
                  (inst -1 "G" "P" "P1" "PV" "V_" "V(t)" "p(t)" "s"
                   "sigma_")
                  (("" (assert)
                    (("" (replace -8 :hide? t :dir rl)
                      (("" (replace -8 :hide? t :dir rl)
                        (("" (assert)
                          (("" (split 1)
                            (("1" (case "t = p(t) * V(t)")
                              (("1"
                                (replace -1 :dir rl)
                                (("1"
                                  (rewrite "member_unif_prb_equiv")
                                  (("1"
                                    (inst 1 "up")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (use "choose_eq_mem1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (rewrite "nominal_AC_term_times_eta" 1)
                                nil
                                nil))
                              nil)
                             ("2" (expand "rhs")
                              (("2"
                                (rewrite "sec_proj_mem")
                                (("2"
                                  (inst 1 "up")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (use "choose_eq_mem1")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (use "choose_eq2_subset")
                              (("3" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (* adt-constructor-decl "[[perm, variable] -> (var?)]" nominal_AC_term_adt
       nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt nil)
    (nice_input_apply_sub formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_var subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, list_props[basic_sub].append(nominal_AC_ac_match_alg.sigma1, nominal_AC_ac_match_alg.sigma_), nominal_AC_ac_match_alg.V_, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_var 0
  (ac_match_var_inp_var-1 nil 3897297606
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "up" "choose_eq(P)`1")
          (("" (name-replace "P1" "choose_eq(P)`2")
            (("" (name-replace "t" "up`1")
              (("" (name-replace "s" "up`2")
                ((""
                  (name-replace "sig2"
                   "cons((V(t), ext(reverse(p(t)))(s)), null)")
                  (("" (name-replace "G2" "nominal_AC_fresh_subs?(sig2, G)`1")
                    (("" (name-replace "b" "nominal_AC_fresh_subs?(sig2, G)`2")
                      (("" (name-replace "new_G" "append(G2, G)")
                        ((""
                          (name-replace "new_P" "apply_sub(sig2, P1)")
                          (("" (expand "var_inputs?")
                            (("" (flatten)
                              ((""
                                (assert)
                                ((""
                                  (split 3)
                                  (("1"
                                    (hide -5 -6 -7 -8)
                                    (("1"
                                      (use "equal_syn_append")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case
                                     "subset?(vars(new_P), vars(P))")
                                    (("1"
                                      (hide-all-but (-1 -9 1))
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (inst?)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "new_P" 1)
                                      (("2"
                                        (hide-all-but 1)
                                        (("2"
                                          (use "apply_sub_vars")
                                          (("2"
                                            (case
                                             "subset?(vars(img(sig2)), vars(P))")
                                            (("1"
                                              (case
                                               "subset?(vars(P1), vars(P))")
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             ("member"
                                                              "union")
                                                             -1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 -2 2)
                                                (("2"
                                                  (expand "P1")
                                                  (("2"
                                                    (use
                                                     "choose_eq_vars")
                                                    (("2"
                                                      (flatten)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -1 2)
                                              (("2"
                                                (reveal -17)
                                                (("2"
                                                  (use
                                                   "img_basic_sub_var")
                                                  (("2"
                                                    (replace -2)
                                                    (("2"
                                                      (rewrite
                                                       "ext_vars")
                                                      (("2"
                                                        (case
                                                         "subset?(vars(s), vars(P))")
                                                        (("1"
                                                          (expand
                                                           "subset?")
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "s")
                                                          (("2"
                                                            (expand
                                                             "up")
                                                            (("2"
                                                              (use
                                                               "choose_eq_vars")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (hide-all-but
                                                                   (-2
                                                                    1))
                                                                  (("2"
                                                                    (expand
                                                                     "subset?")
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (expand "new_G" 1)
                                    (("3"
                                      (expand "G2")
                                      (("3"
                                        (case
                                         "subset?(vars(append(nominal_AC_fresh_subs?(sig2, G)`1, G)), union(vars(img(sig2)), vars(G)))")
                                        (("1"
                                          (case
                                           "subset?(union(vars(img(sig2)), vars(G)), FV)")
                                          (("1"
                                            (hide-all-but (-1 -2 1))
                                            (("1"
                                              (expand "subset?")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide-all-but (-10 1 -9))
                                            (("2"
                                              (case
                                               "subset?(vars(img(sig2)), vars(P))")
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               ("member"
                                                                "union")
                                                               -1)
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 -2 2)
                                                (("2"
                                                  (reveal -16)
                                                  (("2"
                                                    (use
                                                     "img_basic_sub_var")
                                                    (("2"
                                                      (replace -2)
                                                      (("2"
                                                        (rewrite
                                                         "ext_vars")
                                                        (("2"
                                                          (case
                                                           "subset?(vars(s), vars(P))")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             ("s"
                                                              "up"))
                                                            (("2"
                                                              (expand
                                                               "up")
                                                              (("2"
                                                                (use
                                                                 "choose_eq_vars")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide
                                                                     -1
                                                                     -3
                                                                     -4
                                                                     2)
                                                                    (("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but 1)
                                          (("2"
                                            (expand "subset?")
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand
                                                 ("member" "union")
                                                 1)
                                                (("2"
                                                  (prop)
                                                  (("2"
                                                    (rewrite
                                                     "vars_append_context")
                                                    (("2"
                                                      (expand
                                                       ("member"
                                                        "union")
                                                       -1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (use
                                                           "nominal_AC_fresh_subs?_var")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     ("member"
                                                                      "union")
                                                                     -1)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (append def-decl "list[T]" list_props nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (vars_append_context formula-decl nil nominal_AC_freshness nil)
    (nominal_AC_fresh_subs?_var formula-decl nil nominal_AC_fresh_subs nil)
    (subset? const-decl "bool" sets nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (img_basic_sub_var formula-decl nil nominal_AC_substitution nil)
    (apply_sub_vars formula-decl nil nominal_AC_unification nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (equal_syn_append formula-decl nil nominal_AC_substitution nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (ac_match_var_inp_var2_TCC1 0
  (ac_match_var_inp_var2_TCC3-1 nil 3897321098
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (replace -11 2)
          (("" (replace -10 2)
            (("" (use "nice_input_fc")
              (("" (assert)
                (("" (split 1)
                  (("1" (use "choose_eq2_subset")
                    (("1" (assert) nil nil)) nil)
                   ("2" (use "choose_eq_vars")
                    (("2" (flatten)
                      (("2" (hide-all-but (-2 -10 1))
                        (("2" (reveal -2 -4) (("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_fc formula-decl nil nominal_AC_ac_step nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_var2 subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_var2_TCC2 0
  (ac_match_var_inp_var2_TCC4-1 nil 3897321098
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (replace -11 2)
          (("" (replace -10 2)
            (("" (hide -6 -7)
              (("" (use "nice_input_fc")
                (("" (assert)
                  (("" (use "choose_eq2_subset")
                    (("" (assert)
                      (("" (hide-all-but (-2 -4 1))
                        (("" (use "choose_eq_vars")
                          (("" (flatten) (("" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (nice_input_fc formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_var2 subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.P1, nominal_AC_ac_match_alg.sigma_, nominal_AC_ac_match_alg.V_, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_var2 0
  (ac_match_var_inp_var2-1 nil 3897321105
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "up" "choose_eq(P)`1")
          (("" (name-replace "P1" "choose_eq(P)`2")
            (("" (name-replace "t" "up`1")
              (("" (name-replace "s" "up`2")
                (("" (expand "var_inputs?")
                  (("" (flatten)
                    (("" (assert)
                      (("" (split 2)
                        (("1" (hide-all-but (-7 1))
                          (("1" (expand "P1")
                            (("1" (use "choose_eq_vars")
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "subset?")
                                  (("1"
                                    (skeep)
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "subset?" 1)
                          (("2" (skeep)
                            (("2" (rewrite "vars_append_context")
                              (("2"
                                (expand ("member" "union") -1)
                                (("2"
                                  (prop)
                                  (("1"
                                    (use "vars_fc")
                                    (("1"
                                      (expand "subset?" -1)
                                      (("1"
                                        (inst -1 "x")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "subset?" -9)
                                            (("1"
                                              (inst -9 "x")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (hide-all-but
                                                   (-1 2 -11))
                                                  (("1"
                                                    (use
                                                     "choose_eq_vars")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "t" -3)
                                                        (("1"
                                                          (expand
                                                           "up"
                                                           -3)
                                                          (("1"
                                                            (expand
                                                             "subset?"
                                                             -2)
                                                            (("1"
                                                              (inst
                                                               -2
                                                               "x")
                                                              (("1"
                                                                (hide
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "member"
                                                                   -2)
                                                                  (("1"
                                                                    (expand
                                                                     "singleton"
                                                                     -2)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "t")
                                                                        (("1"
                                                                          (expand
                                                                           "up")
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "subset?" -9)
                                    (("2"
                                      (inst?)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (list type-decl nil list_adt nil) (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (vars_append_context formula-decl nil nominal_AC_freshness nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (fc def-decl "fresh_context" nominal_AC_freshness nil)
    (DS const-decl "list[atom]" atoms nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (vars_fc formula-decl nil nominal_AC_freshness nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (subset? const-decl "bool" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil))
   shostak))
 (ac_match_var_inp_app_TCC1 0
  (ac_match_var_inp_app_TCC1-1 nil 3897379190
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (lemma "nice_input_decompose")
          (("" (inst -1 "G" "P" "P1" "PV" "V" "s" "sigma" "t")
            (("" (assert)
              (("" (prop)
                (("1" (rewrite "member_unif_prb_equiv" 1)
                  (("1" (inst 1 "up")
                    (("1" (assert)
                      (("1" (use "choose_eq_mem1")
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "rhs")
                  (("2" (rewrite "sec_proj_mem" 1)
                    (("2" (inst 1 "up")
                      (("2" (assert)
                        (("2" (use "choose_eq_mem1")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (use "choose_eq2_subset")
                  (("3" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (nice_input_decompose formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_app subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_app_TCC2 0
  (ac_match_var_inp_app_TCC2-1 nil 3897379190
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (lemma "nice_input_decompose")
          (("" (inst -1 "G" "P" "P1" "PV" "V_" "s" "sigma_" "t")
            (("" (assert)
              (("" (hide -5 -6 -7 3)
                (("" (prop)
                  (("1" (rewrite "member_unif_prb_equiv" 1)
                    (("1" (inst 1 "up")
                      (("1" (assert)
                        (("1" (use "choose_eq_mem1")
                          (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "rhs")
                    (("2" (rewrite "sec_proj_mem" 1)
                      (("2" (inst 1 "up")
                        (("2" (assert)
                          (("2" (use "choose_eq_mem1")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (use "choose_eq2_subset")
                    (("3" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nice_input_decompose formula-decl nil nominal_AC_ac_step nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (list type-decl nil list_adt nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (ac_match_var_inp_app subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma_, nominal_AC_ac_match_alg.V_, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_app 0
  (ac_match_var_inp_app-1 nil 3897379208
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "up" "choose_eq(P)`1")
          (("" (name-replace "P1" "choose_eq(P)`2")
            (("" (name-replace "t" "up`1")
              (("" (name-replace "s" "up`2")
                (("" (expand "var_inputs?")
                  (("" (flatten)
                    (("" (assert)
                      ((""
                        (case "subset?(vars(append(decompose(arg(t), arg(s))`1, P1)), vars(P))")
                        (("1" (hide-all-but (-1 -8 2))
                          (("1" (expand "subset?")
                            (("1" (skeep)
                              (("1"
                                (inst?)
                                (("1"
                                  (inst?)
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 3)
                          (("2" (expand "subset?" 1)
                            (("2" (skeep)
                              (("2"
                                (rewrite "vars_unif_prb_append")
                                (("2"
                                  (prop)
                                  (("1"
                                    (use "decompose_vars")
                                    (("1"
                                      (expand "subset?" -1)
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (case
                                             "member(x, vars(t, s))")
                                            (("1"
                                              (hide-all-but (-1 1))
                                              (("1"
                                                (use "choose_eq_vars")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand ("t" "s"))
                                                    (("1"
                                                      (expand "up")
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but
                                               (-1 -12 -13 1))
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but (-1 1))
                                    (("2"
                                      (expand "P1")
                                      (("2"
                                        (use "choose_eq_vars")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand "subset?" -1)
                                            (("2"
                                              (inst?)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (list type-decl nil list_adt nil) (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (union const-decl "set" sets nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (member const-decl "bool" sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (decompose_vars formula-decl nil nominal_AC_unification nil)
    (vars_unif_prb_append formula-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (subset? const-decl "bool" sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (append def-decl "list[T]" list_props nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (arg adt-accessor-decl "[(app?) -> nominal_AC_term]" nominal_AC_term_adt nil))
   shostak))
 (ac_match_var_inp_abs_TCC1 0
  (ac_match_var_inp_abs_TCC1-1 nil 3897466058
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (hide -5 -7)
          (("" (lemma "nice_input_dec_abs")
            (("" (inst -1 "G" "P" "P1" "PV" "V" "null" "s" "sigma" "t")
              (("" (assert)
                (("" (rewrite "ext_identity")
                  (("" (assert)
                    (("" (split 1)
                      (("1" (rewrite "member_unif_prb_equiv")
                        (("1" (inst 1 "up")
                          (("1" (assert)
                            (("1" (use "choose_eq_mem1")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "rhs" 1)
                        (("2" (rewrite "sec_proj_mem" 1)
                          (("2" (inst 1 "up")
                            (("2" (assert)
                              (("2"
                                (use "choose_eq_mem1")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (use "choose_eq2_subset")
                        (("3" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (ext_identity formula-decl nil nominal_AC_term_properties nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (nice_input_dec_abs formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_abs subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_abs_TCC2 0
  (ac_match_var_inp_abs_TCC2-1 nil 3897466058
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (hide -6 -7)
          (("" (lemma "nice_input_dec_abs")
            ((""
              (inst -1 "G" "P" "P1" "PV" "V_" "null" "s" "sigma_" "t")
              (("" (assert)
                (("" (rewrite "ext_identity")
                  (("" (assert)
                    (("" (split 1)
                      (("1" (rewrite "member_unif_prb_equiv")
                        (("1" (inst 1 "up")
                          (("1" (assert)
                            (("1" (use "choose_eq_mem1")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "rhs")
                        (("2" (rewrite "sec_proj_mem")
                          (("2" (inst 1 "up")
                            (("2" (assert)
                              (("2"
                                (use "choose_eq_mem1")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (use "choose_eq2_subset")
                        (("3" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (ext_identity formula-decl nil nominal_AC_term_properties nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (nice_input_dec_abs formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_abs subtype
    "(nominal_AC_ac_match_alg.G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma_, nominal_AC_ac_match_alg.V_, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_abs 0
  (ac_match_var_inp_abs-1 nil 3897466427
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "up" "choose_eq(P)`1")
          (("" (name-replace "P1" "choose_eq(P)`2")
            (("" (name-replace "t" "up`1")
              (("" (name-replace "s" "up`2")
                (("" (reveal -1 -2 -3 -4)
                  ((""
                    (name-replace "dec_P"
                     "decompose(body(t), body(s))`1")
                    (("" (name-replace "new_P" "append(dec_P, P1)")
                      (("" (reveal -1 -2)
                        (("" (expand "var_inputs?")
                          (("" (flatten)
                            (("" (assert)
                              ((""
                                (case "subset?(vars(new_P), vars(P))")
                                (("1"
                                  (hide-all-but (-1 -14 2))
                                  (("1"
                                    (expand "subset?")
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (inst?)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide-all-but
                                   (-1 -2 -3 -4 -5 -6 1 2))
                                  (("2"
                                    (replace -1 1 :dir rl)
                                    (("2"
                                      (expand "subset?")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (rewrite
                                           "vars_unif_prb_append")
                                          (("2"
                                            (prop)
                                            (("1"
                                              (expand "dec_P" -1)
                                              (("1"
                                                (use "decompose_vars")
                                                (("1"
                                                  (reveal -11 -12)
                                                  (("1"
                                                    (case
                                                     "member(x, vars(t, s))")
                                                    (("1"
                                                      (case
                                                       "subset?(vars(t, s), vars(P))")
                                                      (("1"
                                                        (hide-all-but
                                                         (-1 -2 1))
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         "choose_eq_vars")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (replace
                                                             -13)
                                                            (("2"
                                                              (case
                                                               "up = (t, s)")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (decompose-equality
                                                                 1)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "subset?"
                                                       -3)
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (use "choose_eq_vars")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "subset?"
                                                     -1)
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (list type-decl nil list_adt nil) (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (append def-decl "list[T]" list_props nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (vars_unif_prb_append formula-decl nil nominal_AC_unification nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (size const-decl "nat" nominal_AC_unification nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (member const-decl "bool" sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (decompose_vars formula-decl nil nominal_AC_unification nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (subset? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil))
   shostak))
 (ac_match_var_inp_abs2_TCC1 0
  (ac_match_var_inp_abs2_TCC1-1 nil 3897504066
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (lemma "nice_input_dec_abs2")
          (("" (inst -1 "G" "P" "P1" "PV" "V" "pi" "s" "sigma" "t")
            (("" (assert)
              (("" (split 1)
                (("1" (rewrite "member_unif_prb_equiv")
                  (("1" (inst 1 "up")
                    (("1" (assert)
                      (("1" (use "choose_eq_mem1")
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "rhs" 1)
                  (("2" (rewrite "sec_proj_mem")
                    (("2" (inst 1 "up")
                      (("2" (assert)
                        (("2" (use "choose_eq_mem1")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (use "choose_eq2_subset")
                  (("3" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (nice_input_dec_abs2 formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_abs2 subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma, nominal_AC_ac_match_alg.V, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_abs2_TCC2 0
  (ac_match_var_inp_abs2_TCC2-1 nil 3897504066
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (hide -6 -7)
          (("" (lemma "nice_input_dec_abs2")
            (("" (inst -1 "G" "P" "P1" "PV" "V_" "pi" "s" "sigma_" "t")
              (("" (assert)
                (("" (split 1)
                  (("1" (rewrite "member_unif_prb_equiv")
                    (("1" (inst 1 "up")
                      (("1" (assert)
                        (("1" (use "choose_eq_mem1")
                          (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "rhs" 1)
                    (("2" (rewrite "sec_proj_mem")
                      (("2" (inst 1 "up")
                        (("2" (assert)
                          (("2" (use "choose_eq_mem1")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (use "choose_eq2_subset")
                    (("3" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (sec_proj_mem formula-decl nil list_aux_equational_reasoning2 nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (choose_eq2_subset formula-decl nil nominal_AC_ac_step nil)
    (nice_input_dec_abs2 formula-decl nil nominal_AC_ac_step nil))
   nil
   (ac_match_var_inp_abs2 subtype
    "(nominal_AC_ac_match_alg.new_G, nominal_AC_ac_match_alg.new_P, nominal_AC_ac_match_alg.sigma_, nominal_AC_ac_match_alg.V_, nominal_AC_ac_match_alg.PV)"
    "nice_input")))
 (ac_match_var_inp_abs2 0
  (ac_match_var_inp_abs2-1 nil 3897505963
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (name-replace "up" "choose_eq(P)`1")
          (("" (name-replace "P1" "choose_eq(P)`2")
            (("" (name-replace "t" "up`1")
              (("" (name-replace "s" "up`2")
                (("" (name-replace "G_" "fresh?(abstr(t), body(s))`1")
                  ((""
                    (name-replace "dec_P"
                     "decompose(body(t), ext(pi)(body(s)))`1")
                    (("" (name-replace "new_P" "append(dec_P, P1)")
                      (("" (name-replace "new_G" "append(G_, G)")
                        (("" (reveal -1 -2 -3 -4 -5 -6 -7 -8)
                          (("" (expand "var_inputs?")
                            (("" (flatten)
                              ((""
                                (assert)
                                ((""
                                  (split 2)
                                  (("1"
                                    (case
                                     "subset?(vars(new_P), vars(P))")
                                    (("1"
                                      (hide-all-but (-1 -16 1))
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (inst?)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but
                                       (-2 -3 -5 -6 -7 -8 -18 -19 1))
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (expand "new_P" -1)
                                            (("2"
                                              (rewrite
                                               "vars_unif_prb_append")
                                              (("2"
                                                (split -1)
                                                (("1"
                                                  (expand "dec_P" -1)
                                                  (("1"
                                                    (use
                                                     "decompose_vars")
                                                    (("1"
                                                      (expand
                                                       "subset?")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case
                                                             "subset?(vars(body(t), ext(pi)(body(s))), vars(t, s))")
                                                            (("1"
                                                              (expand
                                                               "subset?"
                                                               -1)
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (use
                                                                     "choose_eq_vars")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (case
                                                                         "(t, s) = up")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (replace
                                                                             -12)
                                                                            (("1"
                                                                              (expand
                                                                               "subset?"
                                                                               -3)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (decompose-equality
                                                                           1)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-9
                                                                -10
                                                                1))
                                                              (("2"
                                                                (expand
                                                                 "subset?"
                                                                 1)
                                                                (("2"
                                                                  (skolem
                                                                   1
                                                                   "y")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (expand
                                                                       "vars"
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         ("member"
                                                                          "union")
                                                                         -1)
                                                                        (("2"
                                                                          (rewrite
                                                                           "ext_vars")
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (use
                                                   "choose_eq_vars")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand
                                                       "subset?"
                                                       -1)
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case
                                     "subset?(vars(new_G), union(vars(P), vars(G)))")
                                    (("1"
                                      (hide-all-but (-1 -16 -17 1))
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide
                                       -9
                                       -10
                                       -11
                                       -12
                                       -13
                                       -14
                                       -15
                                       -16
                                       -17
                                       2)
                                      (("2"
                                        (expand "subset?" 1)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (expand
                                             ("member" "union")
                                             1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand "new_G" -1)
                                                (("2"
                                                  (rewrite
                                                   "vars_append_context")
                                                  (("2"
                                                    (expand
                                                     ("member" "union")
                                                     -1)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "G_"
                                                         -1)
                                                        (("2"
                                                          (use
                                                           "vars_fresh?")
                                                          (("2"
                                                            (expand
                                                             "subset?"
                                                             -1)
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "x")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (rewrite
                                                                   "vars_unif_prb"
                                                                   1)
                                                                  (("2"
                                                                    (inst
                                                                     1
                                                                     "s")
                                                                    (("2"
                                                                      (prop)
                                                                      (("1"
                                                                        (rewrite
                                                                         "member_unif_prb_equiv")
                                                                        (("1"
                                                                          (inst
                                                                           1
                                                                           "up")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "choose_eq_mem1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "vars"
                                                                         1)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (list type-decl nil list_adt nil) (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (fresh? def-decl "[fresh_context, bool]" nominal_AC_freshness nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (append def-decl "list[T]" list_props nil)
    (vars_unif_prb_append formula-decl nil nominal_AC_unification nil)
    (ext_vars formula-decl nil nominal_AC_term_properties nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (choose_eq_vars formula-decl nil nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (decompose_vars formula-decl nil nominal_AC_unification nil)
    (set type-eq-decl nil sets nil)
    (subset? const-decl "bool" sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (vars_append_context formula-decl nil nominal_AC_freshness nil)
    (vars_fresh? formula-decl nil nominal_AC_freshness nil)
    (vars_unif_prb formula-decl nil nominal_AC_unification nil)
    (choose_eq_mem1 formula-decl nil nominal_AC_ac_step nil)
    (member_unif_prb_equiv formula-decl nil nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil))
   shostak))
 (ac_match_var_inputs 0
  (ac_match_var_inputs-1 nil 3897245285
   (""
    (measure-induct
     "lex3(card(vars(input_`2)), max_size(input_`2), num_max_size(input_`2))"
     "input_")
    (("" (skolem 1 "inp_")
      (("" (prop)
        (("" (hide -1)
          (("" (skolem 1 ("FV" "G1" "inp" "sig1_"))
            (("" (prop)
              (("" (expand "ac_match" -2 1)
                (("" (name-replace "G" "inp_`1")
                  (("" (name-replace "P" "inp_`2")
                    (("" (name-replace "sig_" "inp_`3")
                      (("" (name-replace "V_" "inp_`4")
                        (("" (name-replace "PV" "inp_`5")
                          (("" (lift-if)
                            (("" (split -2)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "member" -2)
                                  (("1"
                                    (expand "member" -2)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (reveal -1 -2 -3 -4 -5)
                                        (("1"
                                          (expand "var_inputs?" -9)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (replace -2)
                                                (("1"
                                                  (replace -3)
                                                  (("1"
                                                    (replace -4)
                                                    (("1"
                                                      (replace -5)
                                                      (("1"
                                                        (inst
                                                         1
                                                         "inp`3")
                                                        (("1"
                                                          (prop)
                                                          (("1"
                                                            (expand
                                                             "ac_match"
                                                             1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "member"
                                                                 1)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (name-replace "up" "choose_eq(P)`1")
                                  (("2"
                                    (name-replace
                                     "P1"
                                     "choose_eq(P)`2")
                                    (("2"
                                      (name-replace "t" "up`1")
                                      (("2"
                                        (name-replace "s" "up`2")
                                        (("2"
                                          (name-replace "sig" "inp`3")
                                          (("2"
                                            (name-replace "V" "inp`4")
                                            (("2"
                                              (hide -1 -2)
                                              (("2"
                                                (reveal
                                                 -1
                                                 -2
                                                 -7
                                                 -8
                                                 -9
                                                 -10
                                                 -11)
                                                (("2"
                                                  (case
                                                   "inp = (G, P, sig, V, PV)")
                                                  (("1"
                                                    (case
                                                     "inp_ = (G, P, sig_, V_, PV)")
                                                    (("1"
                                                      (case
                                                       "var_inputs?((G, P, sig, V, PV), (G, P, sig_, V_, PV), FV)")
                                                      (("1"
                                                        (hide
                                                         -2
                                                         -3
                                                         -12)
                                                        (("1"
                                                          (hide
                                                           -2
                                                           -3
                                                           -4
                                                           -5
                                                           -6
                                                           -7
                                                           -8)
                                                          (("1"
                                                            (split -2)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (split
                                                                 -2)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (reveal
                                                                     -15)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "(G, P1, sig_, V_, PV)")
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (case
                                                                           "nice_input?(G, P1, sig, V, PV)")
                                                                          (("1"
                                                                            (inst
                                                                             -2
                                                                             "FV"
                                                                             "G1"
                                                                             "(G, P1, sig, V, PV)"
                                                                             "sig1_")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -2)
                                                                                (("1"
                                                                                  (skolem
                                                                                   -1
                                                                                   "sig1")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (inst
                                                                                       2
                                                                                       "sig1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (reveal
                                                                                           -3
                                                                                           -7
                                                                                           -8
                                                                                           -9
                                                                                           -10)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "ac_match"
                                                                                               2)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "ac_match_var_inp_choose_eq")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -1
                                                                                     "FV"
                                                                                     "G"
                                                                                     "P"
                                                                                     "PV"
                                                                                     "V"
                                                                                     "V_"
                                                                                     "sig"
                                                                                     "sig_")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (reveal
                                                                                         -8
                                                                                         -9
                                                                                         -10
                                                                                         -11)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (reveal
                                                                                             -3
                                                                                             -4)
                                                                                            (("2"
                                                                                              (hide
                                                                                               4)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "inp")
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "inp_")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -4)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             -1
                                                                             3)
                                                                            (("2"
                                                                              (lemma
                                                                               "ac_match_TCC1")
                                                                              (("2"
                                                                                (reveal
                                                                                 -3
                                                                                 -7
                                                                                 -8
                                                                                 -9
                                                                                 -10)
                                                                                (("2"
                                                                                  (inst
                                                                                   -6
                                                                                   "inp"
                                                                                   "G"
                                                                                   "P"
                                                                                   "sig"
                                                                                   "V"
                                                                                   "PV")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -6
                                                                                       "up"
                                                                                       "P1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -6
                                                                                           "t"
                                                                                           "s")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -6
                                                                                               "a(t)")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "nominal_AC_term_at_eta")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           -4
                                                                           3)
                                                                          (("2"
                                                                            (reveal
                                                                             -2
                                                                             -7
                                                                             -8
                                                                             -9
                                                                             -10)
                                                                            (("2"
                                                                              (lemma
                                                                               "ac_match_TCC2")
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "inp_"
                                                                                 "G"
                                                                                 "P"
                                                                                 "sig_"
                                                                                 "V_"
                                                                                 "PV")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -1
                                                                                     "up"
                                                                                     "P1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "t"
                                                                                         "s")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "a(t)")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "nominal_AC_term_at_eta")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (expand
                                                                     "member"
                                                                     -1)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (hide
                                                                 1)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (split
                                                                       -2)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (name-replace
                                                                             "sig2"
                                                                             "cons((V(t), ext(reverse(p(t)))(s)), null)")
                                                                            (("1"
                                                                              (name-replace
                                                                               "G2"
                                                                               "nominal_AC_fresh_subs?(sig2, G)`1")
                                                                              (("1"
                                                                                (name-replace
                                                                                 "b"
                                                                                 "nominal_AC_fresh_subs?(sig2, G)`2")
                                                                                (("1"
                                                                                  (name-replace
                                                                                   "new_G"
                                                                                   "append(G2, G)")
                                                                                  (("1"
                                                                                    (name-replace
                                                                                     "new_sig"
                                                                                     "append(sig2, sig)")
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "new_P"
                                                                                       "apply_sub(sig2, P1)")
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (split
                                                                                           -2)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (reveal
                                                                                               -20)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "(new_G, new_P, append(sig2, sig_), V_, PV)")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "nice_input?(new_G, new_P, append(sig2, sig), V, PV)")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -2
                                                                                                       "FV"
                                                                                                       "G1"
                                                                                                       "(new_G, new_P, append(sig2, sig), V, PV)"
                                                                                                       "sig1_")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (skolem
                                                                                                             -1
                                                                                                             "sig1")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 4
                                                                                                                 "sig1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (reveal
                                                                                                                     -8
                                                                                                                     -2
                                                                                                                     -3
                                                                                                                     -4
                                                                                                                     -5
                                                                                                                     -6)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -6
                                                                                                                       4)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "ac_match"
                                                                                                                         4)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (reveal
                                                                                                                             -12
                                                                                                                             -13
                                                                                                                             -14
                                                                                                                             -15)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -3
                                                                                                             5)
                                                                                                            (("2"
                                                                                                              (reveal
                                                                                                               -9
                                                                                                               -3
                                                                                                               -4
                                                                                                               -5
                                                                                                               -6
                                                                                                               -7
                                                                                                               -8
                                                                                                               -9)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "ac_match_var_inp_var")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "FV"
                                                                                                                   "G"
                                                                                                                   "P"
                                                                                                                   "PV"
                                                                                                                   "V"
                                                                                                                   "V_"
                                                                                                                   "sig"
                                                                                                                   "sig_")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (reveal
                                                                                                                       -14
                                                                                                                       -15
                                                                                                                       -16
                                                                                                                       -17)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -4)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -3)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -10)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -9)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-10
                                                                                                                                          -11
                                                                                                                                          1))
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -1
                                                                                                                                           :dir
                                                                                                                                           rl)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -2
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("2"
                                                                                                                                              (typepred
                                                                                                                                               "inp")
                                                                                                                                              (("2"
                                                                                                                                                (typepred
                                                                                                                                                 "inp_")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -1
                                                                                                       5
                                                                                                       -6)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -9)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "ac_match_TCC3")
                                                                                                          (("2"
                                                                                                            (reveal
                                                                                                             -3
                                                                                                             -4
                                                                                                             -5
                                                                                                             -6
                                                                                                             -7
                                                                                                             -13
                                                                                                             -14
                                                                                                             -15
                                                                                                             -16)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -10
                                                                                                               "inp"
                                                                                                               "G"
                                                                                                               "P"
                                                                                                               "sig"
                                                                                                               "V"
                                                                                                               "PV")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -10
                                                                                                                   "up"
                                                                                                                   "P1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -10
                                                                                                                       "t"
                                                                                                                       "s")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -10
                                                                                                                           "p(t)"
                                                                                                                           "V(t)")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "nominal_AC_term_times_eta"
                                                                                                                               -10)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -9
                                                                                                                                 "sig2")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -9
                                                                                                                                     "G2"
                                                                                                                                     "b")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -9
                                                                                                                                         "new_G"
                                                                                                                                         "new_sig"
                                                                                                                                         "new_P")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "ac_match_TCC4")
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -6
                                                                                                       -3
                                                                                                       5)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -3
                                                                                                         -4
                                                                                                         -5
                                                                                                         -6
                                                                                                         -7
                                                                                                         -8
                                                                                                         -13
                                                                                                         -14
                                                                                                         -15
                                                                                                         -16)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -11
                                                                                                           "inp_"
                                                                                                           "G"
                                                                                                           "P"
                                                                                                           "sig_"
                                                                                                           "V_"
                                                                                                           "PV")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -11
                                                                                                               "up"
                                                                                                               "P1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -11
                                                                                                                   "t"
                                                                                                                   "s")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -11
                                                                                                                       "p(t)"
                                                                                                                       "V(t)")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "nominal_AC_term_times_eta"
                                                                                                                         -11)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -10
                                                                                                                             "sig2")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -10
                                                                                                                                 "G2"
                                                                                                                                 "b")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -10
                                                                                                                                     "new_G"
                                                                                                                                     "append(sig2, sig_)"
                                                                                                                                     "new_P")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (name-replace
                                                                                 "G2"
                                                                                 "fc(DS(p(t), p(s)), V(t))")
                                                                                (("1"
                                                                                  (name-replace
                                                                                   "new_G"
                                                                                   "append(G2, G)")
                                                                                  (("1"
                                                                                    (reveal
                                                                                     -17)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(new_G, P1, sig_, V_, PV)")
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "nice_input?(new_G, P1, sig, V, PV)")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -2
                                                                                             "FV"
                                                                                             "G1"
                                                                                             "(new_G, P1, sig, V, PV)"
                                                                                             "sig1_")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (skolem
                                                                                                   -1
                                                                                                   "sig1")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       3
                                                                                                       "sig1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (reveal
                                                                                                           -5
                                                                                                           -2
                                                                                                           -3
                                                                                                           -9
                                                                                                           -10
                                                                                                           -11
                                                                                                           -12)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -3
                                                                                                             3)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ac_match"
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -6)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -7)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -4)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (reveal
                                                                                                   -2
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "ac_match_var_inp_var2")
                                                                                                    (("2"
                                                                                                      (reveal
                                                                                                       -9
                                                                                                       -10
                                                                                                       -11
                                                                                                       -12)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -5
                                                                                                         "FV"
                                                                                                         "G"
                                                                                                         "P"
                                                                                                         "PV"
                                                                                                         "V"
                                                                                                         "V_"
                                                                                                         "sig"
                                                                                                         "sig_")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (reveal
                                                                                                               -5
                                                                                                               -6)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "inp")
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "inp_")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             -1
                                                                                             -6
                                                                                             -4
                                                                                             4)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "ac_match_TCC5")
                                                                                              (("2"
                                                                                                (reveal
                                                                                                 -7
                                                                                                 -4
                                                                                                 -5
                                                                                                 -11
                                                                                                 -12
                                                                                                 -13
                                                                                                 -14)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "inp"
                                                                                                   "G"
                                                                                                   "P"
                                                                                                   "sig"
                                                                                                   "V"
                                                                                                   "PV")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -8
                                                                                                       "up"
                                                                                                       "P1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -8
                                                                                                           "t"
                                                                                                           "s")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -8
                                                                                                               "p(t)"
                                                                                                               "V(t)")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "nominal_AC_term_times_eta")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (split
                                                                                                                     -8)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "new_G")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -3
                                                                                           -5
                                                                                           4)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "ac_match_TCC6")
                                                                                            (("2"
                                                                                              (reveal
                                                                                               -3
                                                                                               -4
                                                                                               -6
                                                                                               -10
                                                                                               -11
                                                                                               -12
                                                                                               -13)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -8
                                                                                                 "inp_"
                                                                                                 "G"
                                                                                                 "P"
                                                                                                 "sig_"
                                                                                                 "V_"
                                                                                                 "PV")
                                                                                                (("2"
                                                                                                  (reveal
                                                                                                   -6)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -9
                                                                                                       "up"
                                                                                                       "P1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -9
                                                                                                           "t"
                                                                                                           "s")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -9
                                                                                                               "p(t)"
                                                                                                               "V(t)")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "nominal_AC_term_times_eta")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (split
                                                                                                                     -9)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "new_G")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (expand
                                                                                 "member"
                                                                                 -1)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (reveal
                                                                                 -15)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "(G, P1, sig_, V_, PV)")
                                                                                  (("1"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "nice_input?(G, P1, sig, V, PV)")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "FV"
                                                                                         "G1"
                                                                                         "(G, P1, sig, V, PV)"
                                                                                         "sig1_")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             -2)
                                                                                            (("1"
                                                                                              (skolem
                                                                                               -1
                                                                                               "sig1")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   2
                                                                                                   "sig1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (reveal
                                                                                                       -3
                                                                                                       -7
                                                                                                       -8
                                                                                                       -9
                                                                                                       -10)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "ac_match"
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (reveal
                                                                                               -2
                                                                                               -3
                                                                                               -9)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "ac_match_var_inp_choose_eq")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "FV"
                                                                                                   "G"
                                                                                                   "P"
                                                                                                   "PV"
                                                                                                   "V"
                                                                                                   "V_"
                                                                                                   "sig"
                                                                                                   "sig_")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             ("inp"
                                                                                                              "inp_"))
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -5
                                                                                         3)
                                                                                        (("2"
                                                                                          (reveal
                                                                                           -4)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "inp")
                                                                                            (("2"
                                                                                              (replace
                                                                                               -2
                                                                                               -1)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "choose_eq_nice_input")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "P1"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "ac_match_TCC8")
                                                                                      (("2"
                                                                                        (hide
                                                                                         -3
                                                                                         -5
                                                                                         3)
                                                                                        (("2"
                                                                                          (reveal
                                                                                           -8
                                                                                           -9
                                                                                           -10
                                                                                           -11)
                                                                                          (("2"
                                                                                            (reveal
                                                                                             -3)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -6
                                                                                               "inp_"
                                                                                               "G"
                                                                                               "P"
                                                                                               "sig_"
                                                                                               "V_"
                                                                                               "PV")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -6
                                                                                                   "up"
                                                                                                   "P1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -6
                                                                                                       "t"
                                                                                                       "s")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (expand
                                                                                 "member"
                                                                                 -1)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (hide
                                                                                 1)
                                                                                (("1"
                                                                                  (split
                                                                                   -2)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member"
                                                                                       -2)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (name-replace
                                                                                         "f"
                                                                                         "f_sym(t)")
                                                                                        (("2"
                                                                                          (name-replace
                                                                                           "dec_P"
                                                                                           "decompose(arg(t), arg(s))`1")
                                                                                          (("2"
                                                                                            (name-replace
                                                                                             "new_P"
                                                                                             "append(dec_P, P1)")
                                                                                            (("2"
                                                                                              (reveal
                                                                                               -18)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "(G, new_P, sig_, V_, PV)")
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "nice_input?(G, new_P, sig, V, PV)")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -2
                                                                                                       "FV"
                                                                                                       "G1"
                                                                                                       "(G, new_P, sig, V, PV)"
                                                                                                       "sig1_")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (skolem
                                                                                                             -1
                                                                                                             "sig1")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 2
                                                                                                                 "sig1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (reveal
                                                                                                                     -6)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "ac_match"
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (reveal
                                                                                                                             -10
                                                                                                                             -11
                                                                                                                             -12
                                                                                                                             -13)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (reveal
                                                                                                                                 -2
                                                                                                                                 -3)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (reveal
                                                                                                             -2
                                                                                                             -3
                                                                                                             -4)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "ac_match_var_inp_app")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "FV"
                                                                                                                 "G"
                                                                                                                 "P"
                                                                                                                 "PV"
                                                                                                                 "V"
                                                                                                                 "V_"
                                                                                                                 "sig"
                                                                                                                 "sig_")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (reveal
                                                                                                                     -3
                                                                                                                     -4
                                                                                                                     -5
                                                                                                                     -11
                                                                                                                     -12
                                                                                                                     -13
                                                                                                                     -14)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -7)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -4)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -5)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -17
                                                                                                                               4)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "same_func?"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "func?"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     ("ord"
                                                                                                                                      "sym")
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (reveal
                                                                                                                                       -7
                                                                                                                                       -8)
                                                                                                                                      (("2"
                                                                                                                                        (typepred
                                                                                                                                         ("inp"
                                                                                                                                          "inp_"))
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -2
                                                                                                                                              -3
                                                                                                                                              -4
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -3)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -4)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -5
                                                                                                       3
                                                                                                       -1
                                                                                                       -7)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "ac_match_TCC9")
                                                                                                        (("2"
                                                                                                          (reveal
                                                                                                           -4
                                                                                                           -5
                                                                                                           -6
                                                                                                           -8
                                                                                                           -12
                                                                                                           -13
                                                                                                           -14
                                                                                                           -15)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -9
                                                                                                             "inp"
                                                                                                             "G"
                                                                                                             "P"
                                                                                                             "sig"
                                                                                                             "V"
                                                                                                             "PV")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -9
                                                                                                                 " up"
                                                                                                                 "P1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -9
                                                                                                                     "t"
                                                                                                                     "s")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -9
                                                                                                                         "f"
                                                                                                                         "arg(t)")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -3
                                                                                                                             -9
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "nominal_AC_term_app_eta")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -9
                                                                                                                                 "dec_P"
                                                                                                                                 "new_P")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "ac_match_TCC10")
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -5
                                                                                                       -7
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -3
                                                                                                         -4
                                                                                                         -5
                                                                                                         -6
                                                                                                         -11
                                                                                                         -12
                                                                                                         -13
                                                                                                         -14)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -9
                                                                                                           "inp_"
                                                                                                           "G"
                                                                                                           "P"
                                                                                                           "sig_"
                                                                                                           "V_"
                                                                                                           "PV")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -9
                                                                                                               "up"
                                                                                                               "P1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -9
                                                                                                                   "t"
                                                                                                                   "s")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -9
                                                                                                                       "f"
                                                                                                                       "arg(t)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -3
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "nominal_AC_term_app_eta")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -9
                                                                                                                               "dec_P"
                                                                                                                               "new_P")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (hide
                                                                                 1
                                                                                 2)
                                                                                (("2"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (split
                                                                                       -2)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "member"
                                                                                           -2)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (split
                                                                                           -3)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (name-replace
                                                                                                 "dec_P"
                                                                                                 "decompose(body(t), body(s))`1")
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "new_P"
                                                                                                   "append(dec_P, P1)")
                                                                                                  (("1"
                                                                                                    (reveal
                                                                                                     -17)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "(G, new_P, sig_, V_, PV)")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "nice_input?(G, new_P, sig, V, PV)")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -2
                                                                                                             "FV"
                                                                                                             "G1"
                                                                                                             "(G, new_P, sig, V, PV)"
                                                                                                             "sig1_")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (skolem
                                                                                                                   -1
                                                                                                                   "sig1")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       2
                                                                                                                       "sig1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (reveal
                                                                                                                           -2
                                                                                                                           -3
                                                                                                                           -5
                                                                                                                           -9
                                                                                                                           -10
                                                                                                                           -11
                                                                                                                           -12)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "ac_match"
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   3
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "ac_match_var_inp_abs")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "FV"
                                                                                                                       "G"
                                                                                                                       "P"
                                                                                                                       "PV"
                                                                                                                       "V"
                                                                                                                       "V_"
                                                                                                                       "sig"
                                                                                                                       "sig_")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (reveal
                                                                                                                           -11
                                                                                                                           -12
                                                                                                                           -13
                                                                                                                           -14)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (reveal
                                                                                                                               -4
                                                                                                                               -5)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (reveal
                                                                                                                                   -6
                                                                                                                                   -7)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     ("inp"
                                                                                                                                      "inp_"))
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -3
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -4
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             -3
                                                                                                             -7
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "ac_match_TCC11")
                                                                                                              (("2"
                                                                                                                (reveal
                                                                                                                 -4
                                                                                                                 -5
                                                                                                                 -7
                                                                                                                 -11
                                                                                                                 -12
                                                                                                                 -13
                                                                                                                 -14)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -8
                                                                                                                   "inp"
                                                                                                                   "G"
                                                                                                                   "P"
                                                                                                                   "sig"
                                                                                                                   "V"
                                                                                                                   "PV")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -8
                                                                                                                       "up"
                                                                                                                       "P1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -8
                                                                                                                           "t"
                                                                                                                           "s")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -8
                                                                                                                               "abstr(t)"
                                                                                                                               "body(t)")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "nominal_AC_term_abs_eta")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -8
                                                                                                                                     "dec_P"
                                                                                                                                     "new_P")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (lemma
                                                                                                           "ac_match_TCC12")
                                                                                                          (("2"
                                                                                                            (reveal
                                                                                                             -1
                                                                                                             -2
                                                                                                             -3
                                                                                                             -8
                                                                                                             -9
                                                                                                             -10
                                                                                                             -11)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -10
                                                                                                               -14
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -8
                                                                                                                 "inp_"
                                                                                                                 "G"
                                                                                                                 "P"
                                                                                                                 "sig_"
                                                                                                                 "V_"
                                                                                                                 "PV")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -8
                                                                                                                     "up"
                                                                                                                     "P1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -8
                                                                                                                         "t"
                                                                                                                         "s")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -8
                                                                                                                             "abstr(t)"
                                                                                                                             "body(t)")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "nominal_AC_term_abs_eta")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -8
                                                                                                                                   "dec_P"
                                                                                                                                   "new_P")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (name-replace
                                                                                                 "b"
                                                                                                 "fresh?(abstr(t), body(s))`2")
                                                                                                (("2"
                                                                                                  (name-replace
                                                                                                   "G2"
                                                                                                   "fresh?(abstr(t), body(s))`1")
                                                                                                  (("2"
                                                                                                    (name-replace
                                                                                                     "pi"
                                                                                                     "cons((abstr(t), abstr(s)), null)")
                                                                                                    (("2"
                                                                                                      (name-replace
                                                                                                       "dec_P"
                                                                                                       "decompose(body(t), ext(pi)(body(s)))`1")
                                                                                                      (("2"
                                                                                                        (name-replace
                                                                                                         "new_P"
                                                                                                         "append(dec_P, P1)")
                                                                                                        (("2"
                                                                                                          (name-replace
                                                                                                           "new_G"
                                                                                                           "append(G2, G)")
                                                                                                          (("2"
                                                                                                            (lift-if)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "member"
                                                                                                               -1
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (reveal
                                                                                                                       -21)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "(new_G, new_P, sig_, V_, PV)")
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "nice_input?(new_G, new_P, sig, V, PV)")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -2
                                                                                                                               "FV"
                                                                                                                               "G1"
                                                                                                                               "(new_G, new_P, sig, V, PV)"
                                                                                                                               "sig1_")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (skolem
                                                                                                                                     -1
                                                                                                                                     "sig1")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         3
                                                                                                                                         "sig1")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             -9
                                                                                                                                             -1
                                                                                                                                             -2
                                                                                                                                             -3)
                                                                                                                                            (("1"
                                                                                                                                              (reveal
                                                                                                                                               -6
                                                                                                                                               -7
                                                                                                                                               -8
                                                                                                                                               -9
                                                                                                                                               -10
                                                                                                                                               -11
                                                                                                                                               -17
                                                                                                                                               -18
                                                                                                                                               -19
                                                                                                                                               -20)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "ac_match"
                                                                                                                                                 3)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (reveal
                                                                                                                                                     -13)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (lemma
                                                                                                                                     "ac_match_var_inp_abs2")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "FV"
                                                                                                                                       "G"
                                                                                                                                       "P"
                                                                                                                                       "PV"
                                                                                                                                       "V"
                                                                                                                                       "V_"
                                                                                                                                       "pi"
                                                                                                                                       "sig"
                                                                                                                                       "sig_")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (reveal
                                                                                                                                           -3
                                                                                                                                           -4
                                                                                                                                           -5
                                                                                                                                           -6
                                                                                                                                           -7
                                                                                                                                           -9
                                                                                                                                           -10)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (reveal
                                                                                                                                               -14
                                                                                                                                               -15
                                                                                                                                               -16
                                                                                                                                               -17)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -10
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -11
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "inp")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               -1
                                                                                                                               -3
                                                                                                                               -7
                                                                                                                               4)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "ac_match_TCC13")
                                                                                                                                (("2"
                                                                                                                                  (reveal
                                                                                                                                   -4
                                                                                                                                   -5
                                                                                                                                   -6
                                                                                                                                   -7
                                                                                                                                   -8
                                                                                                                                   -9
                                                                                                                                   -11
                                                                                                                                   -15
                                                                                                                                   -16
                                                                                                                                   -17
                                                                                                                                   -18)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -12
                                                                                                                                     "inp"
                                                                                                                                     "G"
                                                                                                                                     "P"
                                                                                                                                     "sig"
                                                                                                                                     "V"
                                                                                                                                     "PV")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -12
                                                                                                                                         "up"
                                                                                                                                         "P1")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -12
                                                                                                                                             "t"
                                                                                                                                             "s")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -12
                                                                                                                                                 "abstr(t)"
                                                                                                                                                 "body(t)")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "nominal_AC_term_abs_eta")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -11
                                                                                                                                                       "G2"
                                                                                                                                                       "b")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -11
                                                                                                                                                           "new_G"
                                                                                                                                                           "pi"
                                                                                                                                                           "dec_P"
                                                                                                                                                           "new_P")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "ac_match_TCC14")
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -3
                                                                                                                               -7
                                                                                                                               4)
                                                                                                                              (("2"
                                                                                                                                (reveal
                                                                                                                                 -3
                                                                                                                                 -4
                                                                                                                                 -5
                                                                                                                                 -6
                                                                                                                                 -7
                                                                                                                                 -8
                                                                                                                                 -9
                                                                                                                                 -14
                                                                                                                                 -15
                                                                                                                                 -16
                                                                                                                                 -17)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -12
                                                                                                                                   "inp_"
                                                                                                                                   "G"
                                                                                                                                   "P"
                                                                                                                                   "sig_"
                                                                                                                                   "V_"
                                                                                                                                   "PV")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -12
                                                                                                                                       "up"
                                                                                                                                       "P1")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -12
                                                                                                                                           "t"
                                                                                                                                           "s")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -12
                                                                                                                                               "abstr(t)"
                                                                                                                                               "body(t)")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "nominal_AC_term_abs_eta")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -11
                                                                                                                                                     "G2"
                                                                                                                                                     "b")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -11
                                                                                                                                                         "new_G"
                                                                                                                                                         "pi"
                                                                                                                                                         "dec_P"
                                                                                                                                                         "new_P")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (hide
                                                                                       1)
                                                                                      (("2"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "member"
                                                                                             -2)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "mem_flatten_map2")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 -3
                                                                                                 "inp1_")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "var_inp_ac")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "FV"
                                                                                                       "inp"
                                                                                                       "inp1_"
                                                                                                       "inp_")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (reveal
                                                                                                           -2
                                                                                                           -9
                                                                                                           -10)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -3)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (reveal
                                                                                                                     -7
                                                                                                                     -8)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (reveal
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -1
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "ac_prb?"
                                                                                                                                     -7)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "ac_app?(t)")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (skolem
                                                                                                                                             -8
                                                                                                                                             "inp1")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (reveal
                                                                                                                                                 -16)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "inp1_")
                                                                                                                                                  (("1"
                                                                                                                                                    (split
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "FV"
                                                                                                                                                       "G1"
                                                                                                                                                       "inp1"
                                                                                                                                                       "sig1_")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (skolem
                                                                                                                                                           -1
                                                                                                                                                           "sig1")
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               2
                                                                                                                                                               "sig1")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ac_match"
                                                                                                                                                                   2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "mem_flatten_map2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       2
                                                                                                                                                                       "inp1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "ac_match_TCC16")
                                                                                                                                                      (("2"
                                                                                                                                                        (hide
                                                                                                                                                         3
                                                                                                                                                         -14
                                                                                                                                                         -15
                                                                                                                                                         -9)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "inp_"
                                                                                                                                                           "G"
                                                                                                                                                           "P"
                                                                                                                                                           "sig_"
                                                                                                                                                           "V_"
                                                                                                                                                           "PV")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -1
                                                                                                                                                               "up"
                                                                                                                                                               "P1")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "t"
                                                                                                                                                                   "s")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "ac_sym(t)"
                                                                                                                                                                       "ac_arg(t)")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "nominal_AC_term_ac_app_eta")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -1
                                                                                                                                                                             "apply_ac(G, cons((t, s), P1), sig_, V_, PV)")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "every_nth2")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -1
                                                                                                                                                                                 "inp1_")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide
                                                                                                                                           -7
                                                                                                                                           3)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "ac_match_TCC17")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -1
                                                                                                                                               "inp_"
                                                                                                                                               "G"
                                                                                                                                               "P"
                                                                                                                                               "sig_"
                                                                                                                                               "V_"
                                                                                                                                               "PV")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "up"
                                                                                                                                                   "P1")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "t"
                                                                                                                                                       "s")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (1
                                                                                                                                                            2))
                                                                                                                                                          (("2"
                                                                                                                                                            (reveal
                                                                                                                                                             3
                                                                                                                                                             4
                                                                                                                                                             5
                                                                                                                                                             6
                                                                                                                                                             7)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide -10)
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (replace
                                                             -2)
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (hide-all-but
                                                         (-1 1))
                                                        (("3"
                                                          (typepred
                                                           "inp_")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (replace
                                                               -2
                                                               :dir
                                                               rl)
                                                              (("3"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("4"
                                                        (hide-all-but
                                                         (-2 1))
                                                        (("4"
                                                          (typepred
                                                           "inp")
                                                          (("4"
                                                            (replace
                                                             -2)
                                                            (("4"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide -9)
                                                      (("2"
                                                        (decompose-equality
                                                         1)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -8)
                                                    (("2"
                                                      (expand
                                                       "var_inputs?"
                                                       -8)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (decompose-equality
                                                           1)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (measure_induction formula-decl nil measure_induction nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (lex3 const-decl "ordinal" lex3 nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (max_size def-decl "nat" nominal_AC_ac_step nil)
    (num_max_size const-decl "nat" nominal_AC_ac_step nil)
    (< def-decl "bool" ordinals nil)
    (well_founded_le formula-decl nil ordinals nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (ac_match def-decl "list[[fresh_context, sub]]" nominal_AC_ac_match_alg nil)
    (member def-decl "bool" list_props nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nominal_AC_term_at_eta formula-decl nil nominal_AC_term_adt nil)
    (atom? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (a adt-accessor-decl "[(atom?) -> atom]" nominal_AC_term_adt nil)
    (ac_match_TCC1 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (ac_match_var_inp_choose_eq formula-decl nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC2 termination-tcc nil nominal_AC_ac_match_alg nil)
    (choose_eq_nice_input formula-decl nil nominal_AC_ac_step nil)
    (ac_match_TCC8 termination-tcc nil nominal_AC_ac_match_alg nil)
    (f_sym adt-accessor-decl "[(app?) -> f_symbol]" nominal_AC_term_adt nil)
    (app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (ac_match_TCC10 termination-tcc nil nominal_AC_ac_match_alg nil)
    (same_func? const-decl "bool" nominal_AC_term_properties nil)
    (sym const-decl "string" nominal_AC_term_properties nil)
    (ord const-decl "upto(6)" nominal_AC_term_adt nil)
    (func? const-decl "bool" nominal_AC_term_properties nil)
    (ac_match_var_inp_app formula-decl nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC9 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (nominal_AC_term_app_eta formula-decl nil nominal_AC_term_adt nil)
    (decompose def-decl "[unif_prb, bool]" nominal_AC_unification nil)
    (arg adt-accessor-decl "[(app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (var_inp_ac formula-decl nil nominal_AC_variant_inputs nil)
    (ac_prb? const-decl "bool" nominal_AC_unification nil)
    (ac_app? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (every_nth2 formula-decl nil list_aux_equational_reasoning nil)
    (pre_nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (nominal_AC_term_ac_app_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" nominal_AC_term_adt nil)
    (ac_arg adt-accessor-decl "[(ac_app?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (ac_match_TCC16 termination-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC17 cases-tcc nil nominal_AC_ac_match_alg nil)
    (mem_flatten_map2 formula-decl nil list_aux_equational_reasoning2parameters nil)
    (apply_ac const-decl "list[nice_input]" nominal_AC_ac_step nil)
    (fresh? def-decl "[fresh_context, bool]" nominal_AC_freshness nil)
    (ac_match_TCC14 termination-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_var_inp_abs2 formula-decl nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC13 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (body adt-accessor-decl "[(abs?) -> nominal_AC_term]" nominal_AC_term_adt nil)
    (abs? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (nominal_AC_term_abs_eta formula-decl nil nominal_AC_term_adt nil)
    (abstr adt-accessor-decl "[(abs?) -> atom]" nominal_AC_term_adt nil)
    (ac_match_TCC11 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_var_inp_abs formula-decl nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC12 termination-tcc nil nominal_AC_ac_match_alg nil)
    (DS const-decl "list[atom]" atoms nil)
    (fc def-decl "fresh_context" nominal_AC_freshness nil)
    (ac_match_TCC5 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_var_inp_var2 formula-decl nil nominal_AC_ac_match_alg nil)
    (ac_match_TCC6 termination-tcc nil nominal_AC_ac_match_alg nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" nominal_AC_term_adt nil)
    (reverse def-decl "list[T]" list_props nil)
    (ext def-decl "nominal_AC_term" nominal_AC_term_properties nil)
    (V adt-accessor-decl "[(var?) -> variable]" nominal_AC_term_adt nil)
    (var? adt-recognizer-decl "[nominal_AC_term -> boolean]" nominal_AC_term_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (ac_match_TCC4 termination-tcc nil nominal_AC_ac_match_alg nil)
    (ac_match_var_inp_var formula-decl nil nominal_AC_ac_match_alg nil)
    (nominal_AC_term_times_eta formula-decl nil nominal_AC_term_adt nil)
    (ac_match_TCC3 subtype-tcc nil nominal_AC_ac_match_alg nil)
    (apply_sub def-decl "unif_prb" nominal_AC_unification nil)
    (append def-decl "list[T]" list_props nil)
    (nominal_AC_fresh_subs? def-decl "[fresh_context, bool]" nominal_AC_fresh_subs nil)
    (choose_eq def-decl "[unif_pair, unif_prb]" nominal_AC_ac_step nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   shostak))
 (ac_match_completeness_match_TCC1 0
  (ac_match_completeness_match_TCC1-1 nil 3890567077
   ("" (skeep)
    (("" (use "nice_input_initial_problem") (("" (grind) nil nil))
      nil))
    nil)
   ((nice_input_initial_problem formula-decl nil nominal_AC_ac_step nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (more_general? const-decl "bool" nominal_AC_substitution nil)
    (equal? const-decl "bool" nominal_AC_substitution nil)
    (unifies? def-decl "bool" nominal_AC_unification nil)
    (unifies? const-decl "bool" nominal_AC_unification nil)
    (nominal_AC_fresh_subs def-decl "bool" nominal_AC_fresh_subs nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (match_problem? const-decl "bool" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (well_formed? const-decl "bool" nominal_AC_substitution nil)
    (singleton const-decl "(singleton?)" sets nil)
    (subterms def-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_term_properties nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (member def-decl "bool" nominal_AC_unification nil)
    (subterms def-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_unification nil)
    (subterms const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (emptyset const-decl "set" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (idempotent? const-decl "bool" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (well_formed? const-decl "bool" nominal_AC_term_properties nil)
    (subset? const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   nil
   (ac_match_completeness_match subtype
    "(list_adt[[atom, variable]].null, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].null), list_adt[basic_sub].null, nominal_AC_unification.vars(nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), nominal_AC_term_properties.vars(nominal_AC_ac_match_alg.s))"
    "nice_input")))
 (ac_match_completeness_match 0
  (ac_match_completeness_match-1 nil 3890567139
   ("" (skeep)
    (("" (lemma "ac_match_completeness_match_aux")
      ((""
        (name-replace "V"
         "union(union(vars(t, s), vars(Delta)), union(vars(img(delta)), dom(delta)))")
        (("" (inst -2 "Delta" "V" "delta" "s" "t")
          (("" (assert)
            (("" (split -2)
              (("1" (skolem -1 ("G1_" "sig1_"))
                (("1" (flatten)
                  (("1" (lemma "ac_match_var_inputs")
                    (("1"
                      (inst -1 "vars(t, s)" "G1_"
                       "(null, cons((t, s), null), null, vars(t, s), vars(s))"
                       "(null, cons((t, s), null), null, V, vars(s)) "
                       "sig1_")
                      (("1" (assert)
                        (("1" (split -1)
                          (("1" (skolem -1 "sig1")
                            (("1" (flatten)
                              (("1"
                                (inst 1 "G1_" "sig1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (lemma "is_instance_equal_syn")
                                    (("1"
                                      (inst
                                       -1
                                       "Delta"
                                       "G1_"
                                       "vars(s)"
                                       "V"
                                       "vars(t, s)"
                                       "delta"
                                       "sig1"
                                       "sig1_")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split 1)
                                          (("1"
                                            (hide-all-but (-2 1))
                                            (("1"
                                              (expand "equal_syn?")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide-all-but (-5 1))
                                            (("2"
                                              (replace -1 1 :dir rl)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "var_inputs?")
                              (("2"
                                (hide-all-but (-3 1))
                                (("2"
                                  (split 1)
                                  (("1" (grind) nil nil)
                                   ("2" (grind) nil nil)
                                   ("3"
                                    (replace -1 :dir rl)
                                    (("3" (grind) nil nil))
                                    nil)
                                   ("4"
                                    (use "select_greater_subset[nat]")
                                    (("4"
                                      (assert)
                                      (("4"
                                        (replace -1 1 :dir rl)
                                        (("4"
                                          (hide 2)
                                          (("4" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("5" (grind) nil nil)
                                   ("6" (grind) nil nil)
                                   ("7" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (use "nice_input_initial_problem")
                          (("2" (assert)
                            (("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide-all-but (-1 1))
                (("2" (replace -1 1 :dir rl) (("2" (grind) nil nil))
                  nil))
                nil)
               ("3" (hide-all-but (-1 1))
                (("3" (replace -1 1 :dir rl) (("3" (grind) nil nil))
                  nil))
                nil)
               ("4" (hide-all-but (-1 1))
                (("4" (replace -1 1 :dir rl) (("4" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_union application-judgement "finite_set" finite_sets nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (union const-decl "set" sets nil) (atom type-eq-decl nil atoms nil)
    (list type-decl nil list_adt nil) (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (ac_match_var_inputs formula-decl nil nominal_AC_ac_match_alg nil)
    (nice_input_initial_problem formula-decl nil nominal_AC_ac_step nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (select_greater_subset formula-decl nil list_aux_equational_reasoning_more nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (is_instance_equal_syn formula-decl nil nominal_AC_unification nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (ac_match_completeness_match_aux formula-decl nil nominal_AC_ac_match_alg
     nil))
   shostak))
 (ac_match_completeness_equality_TCC1 0
  (ac_match_completeness_equality_TCC1-1 nil 3897595769
   ("" (skeep)
    (("" (use "nice_input_initial_problem") (("" (grind) nil nil))
      nil))
    nil)
   ((nice_input_initial_problem formula-decl nil nominal_AC_ac_step nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" nominal_AC_term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (is_sol? const-decl "bool" nominal_AC_unification nil)
    (more_general? const-decl "bool" nominal_AC_substitution nil)
    (equal? const-decl "bool" nominal_AC_substitution nil)
    (unifies? def-decl "bool" nominal_AC_unification nil)
    (unifies? const-decl "bool" nominal_AC_unification nil)
    (nominal_AC_fresh_subs def-decl "bool" nominal_AC_fresh_subs nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (match_problem? const-decl "bool" nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (rhs const-decl "args" nominal_AC_unification nil)
    (sec_proj def-decl "list[T2]" list_aux_equational_reasoning2 nil)
    (well_formed? const-decl "bool" nominal_AC_substitution nil)
    (singleton const-decl "(singleton?)" sets nil)
    (subterms def-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_term_properties nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (member def-decl "bool" nominal_AC_unification nil)
    (subterms def-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_unification nil)
    (subterms const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_unification nil)
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (vars def-decl "finite_set[variable]" nominal_AC_term_properties nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (subset? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (emptyset const-decl "set" sets nil)
    (union const-decl "set" sets nil)
    (vars def-decl "finite_set[variable]" nominal_AC_unification nil)
    (idempotent? const-decl "bool" nominal_AC_substitution nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (subs def-decl "nominal_AC_term" nominal_AC_substitution nil)
    (well_formed? const-decl "bool" nominal_AC_unification nil)
    (well_formed? const-decl "bool" nominal_AC_term_properties nil)
    (member const-decl "bool" sets nil))
   nil
   (ac_match_completeness_equality subtype
    "(list_adt[[atom, variable]].null, list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].cons((nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), list_adt[[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol], nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]].null), list_adt[basic_sub].null, nominal_AC_unification.vars(nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s), nominal_AC_unification.vars(nominal_AC_ac_match_alg.t, nominal_AC_ac_match_alg.s))"
    "nice_input")))
 (ac_match_completeness_equality 0
  (ac_match_completeness_equality-1 nil 3897595769
   ("" (skeep)
    (("" (lemma "ac_match_completeness_eq_check_aux")
      ((""
        (name-replace "V"
         "union(union(vars(t, s), vars(Delta)), union(vars(img(delta)), dom(delta)))")
        (("" (inst -2 "Delta" "V" "delta" "s" "t")
          (("" (assert)
            (("" (split -2)
              (("1" (skolem -1 ("G1_" "sig1_"))
                (("1" (flatten)
                  (("1" (lemma "ac_match_var_inputs")
                    (("1"
                      (inst -1 "vars(t, s)" "G1_"
                       "(null, cons((t, s), null), null, vars(t, s), vars(t, s))"
                       "(null, cons((t, s), null), null, V, vars(t, s)) "
                       "sig1_")
                      (("1" (assert)
                        (("1" (split -1)
                          (("1" (skolem -1 "sig1")
                            (("1" (flatten)
                              (("1"
                                (inst 1 "G1_" "sig1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (lemma "is_instance_equal_syn")
                                    (("1"
                                      (inst
                                       -1
                                       "Delta"
                                       "G1_"
                                       "vars(t, s)"
                                       "V"
                                       "vars(t, s)"
                                       "delta"
                                       "sig1"
                                       "sig1_")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split 1)
                                          (("1"
                                            (hide-all-but (-2 1))
                                            (("1"
                                              (expand "equal_syn?")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide-all-but (-5 1))
                                            (("2"
                                              (replace -1 1 :dir rl)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "var_inputs?")
                              (("2"
                                (hide-all-but (-3 1))
                                (("2"
                                  (split 1)
                                  (("1" (grind) nil nil)
                                   ("2" (grind) nil nil)
                                   ("3"
                                    (replace -1 :dir rl)
                                    (("3" (grind) nil nil))
                                    nil)
                                   ("4"
                                    (use "select_greater_subset[nat]")
                                    (("4"
                                      (assert)
                                      (("4"
                                        (replace -1 1 :dir rl)
                                        (("4"
                                          (hide 2)
                                          (("4" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("5" (grind) nil nil)
                                   ("6" (grind) nil nil)
                                   ("7" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (use "nice_input_initial_problem2")
                          (("2" (assert)
                            (("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide-all-but (-1 1))
                (("2" (replace -1 1 :dir rl) (("2" (grind) nil nil))
                  nil))
                nil)
               ("3" (hide-all-but (-1 1))
                (("3" (replace -1 1 :dir rl) (("3" (grind) nil nil))
                  nil))
                nil)
               ("4" (hide-all-but (-1 1))
                (("4" (replace -1 1 :dir rl) (("4" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ac_match_completeness_eq_check_aux formula-decl nil nominal_AC_ac_match_alg
     nil)
    nil nil
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (nice_input? const-decl "bool" nominal_AC_ac_step nil)
    (unif_prb type-eq-decl nil nominal_AC_unification nil)
    (nice_input type-eq-decl nil nominal_AC_ac_step nil)
    (equal_syn? const-decl "bool" nominal_AC_substitution nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subset? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (subs const-decl "nominal_AC_term" nominal_AC_substitution nil)
    (is_instance_equal_syn formula-decl nil nominal_AC_unification nil)
    (var_inputs? const-decl "bool" nominal_AC_variant_inputs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (select_greater_subset formula-decl nil list_aux_equational_reasoning_more nil)
    (emptyset const-decl "set" sets nil) nil
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (nice_input_initial_problem2 formula-decl nil nominal_AC_ac_step nil)
    (ac_match_var_inputs formula-decl nil nominal_AC_ac_match_alg nil)
    (contained? const-decl "bool" nominal_AC_substitution nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (dom const-decl "finite_set[variable]" nominal_AC_substitution nil)
    (img const-decl
     "finite_set[nominal_AC_term[atom, perm, variable, f_symbol, ac_symbol]]"
     nominal_AC_substitution nil)
    (sub type-eq-decl nil nominal_AC_substitution nil)
    (basic_sub type-eq-decl nil nominal_AC_substitution nil) nil
    (vars def-decl "finite_set[variable]" nominal_AC_freshness nil)
    (fresh_context type-eq-decl nil nominal_AC_freshness nil)
    (vars const-decl "finite_set[variable]" nominal_AC_unification nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (unif_pair type-eq-decl nil nominal_AC_unification nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil) nil
    (PRED type-eq-decl nil defined_types nil)
    (nominal_AC_term type-decl nil nominal_AC_term_adt nil)
    (ac_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (f_symbol type-eq-decl nil nominal_AC_term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (union const-decl "set" sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (variable type-eq-decl nil nominal_AC_term_properties nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (finite_union application-judgement "finite_set" finite_sets nil))
   shostak)))

